; generated by ARM C/C++ Compiler, 4.1 [Build 894]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o..\Output\tim6.o --asm_dir=..\Listing\ --list_dir=..\Listing\ --depend=..\Output\tim6.d --cpu=Cortex-M4.fp --apcs=interwork -O1 --diag_suppress=870 -I..\APP -I..\drive -I..\Include -I..\Libraries\CMSIS\inc -I..\Libraries\CMSIS\src -I..\Libraries\FWlib\inc -I..\Libraries\FWlib\src -I..\Listing -I..\Output -I..\Project -I..\STemWinLibrary522\Config -I..\STemWinLibrary522\emWinTask -I..\STemWinLibrary522\GUILib -I..\STemWinLibrary522\inc -I..\User -I..\USB\STM32_USB_HOST_Library\Class\HID\inc -I..\USB\STM32_USB_HOST_Library\Class\MSC\src -I..\USB\STM32_USB_HOST_Library\Core\src -I..\USB\USB_APP -I..\USB\STM32_USB_HOST_Library\Class\HID\src -I..\USB\STM32_USB_HOST_Library\Class\MSC\inc -I..\USB\STM32_USB_HOST_Library\Core\inc -I..\USB\STM32_USB_OTG_Driver\inc -I..\FATFS\exfuns -I..\FATFS\src\option -I..\FATFS\src -I..\MALLOC -ID:\Keil\ARM\RV31\Inc -ID:\Keil\ARM\CMSIS\Include -ID:\Keil\ARM\Inc\ST\STM32F4xx -DUSE_STDPERIPH_DRIVER -DSTM32F40XX -DUSE_USB_OTG_FS -DUSE_EMBEDDED_PHY -DUSE_USB_OTG_HS -DSTM32F40XX --omf_browse=..\Output\tim6.crf ..\drive\TIM6.c]
                          THUMB

                          AREA ||i.TIM3_IRQHandler||, CODE, READONLY, ALIGN=2

                  TIM3_IRQHandler PROC
;;;137    //֨ʱǷ 3 א׏ؾϱگ˽
;;;138    void TIM3_IRQHandler(void)
000000  e92d41f0          PUSH     {r4-r8,lr}
;;;139    {
;;;140        static vu8 calert = 0;
;;;141        static vu16 resetcount;
;;;142        static vu8 read1963;
;;;143        static vu16 scancount;
;;;144        
;;;145        if(TIM_GetITStatus(TIM3,TIM_IT_Update)==SET) //ӧԶא׏
000004  4c2e              LDR      r4,|L1.192|
000006  2101              MOVS     r1,#1
000008  4620              MOV      r0,r4
00000a  f7fffffe          BL       TIM_GetITStatus
00000e  2801              CMP      r0,#1
000010  d127              BNE      |L1.98|
;;;146        {
;;;147            TIM_ClearITPendingBit(TIM3,TIM_IT_Update); //ȥԽא׏Ҫ־λ
000012  2101              MOVS     r1,#1
000014  4620              MOV      r0,r4
000016  f7fffffe          BL       TIM_ClearITPendingBit
;;;148            if(page_sw != face_starter)
00001a  4c2a              LDR      r4,|L1.196|
00001c  7820              LDRB     r0,[r4,#0]  ; page_sw
00001e  2601              MOVS     r6,#1                 ;145
;;;149            {
;;;150                 if(resetflag == 1)
;;;151                 {
;;;152                     if(resetcount == 1)
;;;153                     {
;;;154                         LCD_Initializtion();
;;;155                         sLCD_WR_REG(0xf1);
;;;156                         GUI_Init();
;;;157                         if(page_sw == face_menu)
;;;158                         {
;;;159                             ResetPow();
;;;160                         }else if(page_sw == face_cdc){
;;;161                             ResetCDC();
;;;162                         }else if(page_sw == face_r){
;;;163                             ResetR();
;;;164                         }else if(page_sw == face_load){
;;;165                             ResetLoad();
;;;166                         }else if(page_sw == face_graph){
;;;167                             ResetG();
;;;168                         }else if(page_sw == face_set){
;;;169                             ResetSET();
;;;170                         }
;;;171                         resdone = 1;
;;;172    //                     resetflag = 0;
;;;173                         resetcount = 0;
000020  2700              MOVS     r7,#0
000022  4d29              LDR      r5,|L1.200|
000024  2806              CMP      r0,#6                 ;148
000026  d008              BEQ      |L1.58|
000028  7868              LDRB     r0,[r5,#1]            ;150  ; resetflag
00002a  2801              CMP      r0,#1                 ;150
00002c  d105              BNE      |L1.58|
00002e  88a8              LDRH     r0,[r5,#4]            ;152  ; resetcount
000030  2801              CMP      r0,#1                 ;152
000032  d018              BEQ      |L1.102|
;;;174                     }else{
;;;175                         resetcount++;
000034  88a8              LDRH     r0,[r5,#4]  ; resetcount
000036  1c40              ADDS     r0,r0,#1
000038  80a8              STRH     r0,[r5,#4]
                  |L1.58|
;;;176                     }                
;;;177                 }
;;;178             }
;;;179            switch(page_sw)
00003a  7820              LDRB     r0,[r4,#0]  ; page_sw
00003c  2803              CMP      r0,#3
00003e  d110              BNE      |L1.98|
;;;180            {
;;;181    //             case face_menu:
;;;182    //             {
;;;183    //                 if(pow_sw == pow_on)
;;;184    //                 {
;;;185    //                     bc_raw += DISS_POW_Current * 1000 * 1/3600;
;;;186    //                 }else{
;;;187    //                     bc_raw = 0;
;;;188    //                 }
;;;189    //             }break;
;;;190    //             case face_cdc:
;;;191    //             {
;;;192    //                 if(mode_sw == mode_pow && cdc_sw == cdc_on)
;;;193    //                 {
;;;194    //                     bc_raw += DISS_POW_Current * 1000 * 1/3600;
;;;195    //                 }else if(cdc_sw == cdc_off){
;;;196    //                     bc_raw = 0;
;;;197    //                 }
;;;198    //             }break;
;;;199    //             case face_load:
;;;200    //             {
;;;201    //                 if(load_sw == load_on)
;;;202    //                 {
;;;203    //                     if(alert_flag == 1)
;;;204    //                     {
;;;205    //                         calert ++;
;;;206    //                         if(calert == 3)
;;;207    //                         {
;;;208    //                             t_onoff = 0;
;;;209    //                             GPIO_SetBits(GPIOA,GPIO_Pin_15);//֧ؓغ՘OFF
;;;210    //                             mode_sw = 0;
;;;211    //                             load_sw = load_off;
;;;212    //                             calert = 0;                                
;;;213    //                         }
;;;214    //                     }
;;;215    //                     bc_raw += DISS_Current * 1000 * 1/3600;
;;;216    //                 }else{
;;;217    //                     bc_raw = 0;
;;;218    //                 }
;;;219    //             }break;
;;;220    //             case face_graph:
;;;221    //             {
;;;222    //                 if(mode_sw == mode_pow)
;;;223    //                 {
;;;224    //                     if(pow_sw == pow_on)
;;;225    //                     {
;;;226    //                         bc_raw += DISS_POW_Current * 1000 * 1/3600;
;;;227    //                     }else if(mode_sw == mode_pow && cdc_sw == cdc_on)
;;;228    //                     {
;;;229    //                         bc_raw += DISS_POW_Current * 1000 * 1/3600;
;;;230    //                     }
;;;231    //                     else{
;;;232    //                         bc_raw = 0;
;;;233    //                     }
;;;234    //                 }               
;;;235    //                 
;;;236    //                 if(mode_sw == mode_load)
;;;237    //                 {
;;;238    //                     if(load_sw == load_on)
;;;239    //                     {
;;;240    //                         bc_raw += DISS_Current * 1000 * 1/3600;
;;;241    //                     }else{
;;;242    //                         bc_raw = 0;
;;;243    //                     }
;;;244    //                 }
;;;245    //             }break;
;;;246                case face_r:
;;;247                {
;;;248                    if(oct_sw == oct_on)
000040  4822              LDR      r0,|L1.204|
000042  7800              LDRB     r0,[r0,#0]  ; oct_sw
000044  2801              CMP      r0,#1
000046  d10c              BNE      |L1.98|
;;;249                    {
;;;250                        if(alert_flag == 1)
000048  4821              LDR      r0,|L1.208|
00004a  7800              LDRB     r0,[r0,#0]  ; alert_flag
00004c  2801              CMP      r0,#1
00004e  d108              BNE      |L1.98|
;;;251                        {
;;;252                            calert ++;
000050  7828              LDRB     r0,[r5,#0]  ; calert
000052  1c40              ADDS     r0,r0,#1
000054  7028              STRB     r0,[r5,#0]
;;;253                            if(calert == 3)
000056  7828              LDRB     r0,[r5,#0]  ; calert
000058  2803              CMP      r0,#3
00005a  d102              BNE      |L1.98|
;;;254                            {
;;;255                                ocstop = 1;
00005c  481d              LDR      r0,|L1.212|
00005e  7006              STRB     r6,[r0,#0]
;;;256                                calert = 0;
000060  702f              STRB     r7,[r5,#0]
                  |L1.98|
;;;257                            }
;;;258                        }
;;;259                    }
;;;260                }break;
;;;261            }
;;;262    //         GPIO_ResetBits(GPIOD,GPIO_Pin_12);
;;;263    //         TM1650_SET_LED(0x48,0x71);
;;;264    //         TM1650_SET_LED(0x68,0xF2);//PASSֆ
;;;265        }    
;;;266        
;;;267    }
000062  e8bd81f0          POP      {r4-r8,pc}
                  |L1.102|
000066  f7fffffe          BL       LCD_Initializtion
00006a  20f1              MOVS     r0,#0xf1              ;155
00006c  f7fffffe          BL       sLCD_WR_REG
000070  f7fffffe          BL       GUI_Init
000074  7820              LDRB     r0,[r4,#0]            ;157  ; page_sw
000076  2802              CMP      r0,#2                 ;157
000078  d00e              BEQ      |L1.152|
00007a  7820              LDRB     r0,[r4,#0]            ;160  ; page_sw
00007c  2801              CMP      r0,#1                 ;160
00007e  d00e              BEQ      |L1.158|
000080  7820              LDRB     r0,[r4,#0]            ;162  ; page_sw
000082  2803              CMP      r0,#3                 ;162
000084  d00e              BEQ      |L1.164|
000086  7820              LDRB     r0,[r4,#0]            ;164  ; page_sw
000088  2804              CMP      r0,#4                 ;164
00008a  d00e              BEQ      |L1.170|
00008c  7820              LDRB     r0,[r4,#0]            ;166  ; page_sw
00008e  b178              CBZ      r0,|L1.176|
000090  7820              LDRB     r0,[r4,#0]            ;168  ; page_sw
000092  2805              CMP      r0,#5                 ;168
000094  d00f              BEQ      |L1.182|
000096  e010              B        |L1.186|
                  |L1.152|
000098  f7fffffe          BL       ResetPow
00009c  e00d              B        |L1.186|
                  |L1.158|
00009e  f7fffffe          BL       ResetCDC
0000a2  e00a              B        |L1.186|
                  |L1.164|
0000a4  f7fffffe          BL       ResetR
0000a8  e007              B        |L1.186|
                  |L1.170|
0000aa  f7fffffe          BL       ResetLoad
0000ae  e004              B        |L1.186|
                  |L1.176|
0000b0  f7fffffe          BL       ResetG
0000b4  e001              B        |L1.186|
                  |L1.182|
0000b6  f7fffffe          BL       ResetSET
                  |L1.186|
0000ba  70ae              STRB     r6,[r5,#2]            ;171
0000bc  80af              STRH     r7,[r5,#4]            ;173
0000be  e7bc              B        |L1.58|
;;;268    
                          ENDP

                  |L1.192|
                          DCD      0x40000400
                  |L1.196|
                          DCD      page_sw
                  |L1.200|
                          DCD      ||.data||
                  |L1.204|
                          DCD      oct_sw
                  |L1.208|
                          DCD      alert_flag
                  |L1.212|
                          DCD      ocstop

                          AREA ||i.TIM3_Int_Init||, CODE, READONLY, ALIGN=2

                  TIM3_Int_Init PROC
;;;117    //֢oʹԃքˇ֨ʱǷ 3!
;;;118    void TIM3_Int_Init(u16 arr,u16 psc)
000000  b57f              PUSH     {r0-r6,lr}
;;;119    {
000002  4604              MOV      r4,r0
000004  460d              MOV      r5,r1
;;;120        TIM_TimeBaseInitTypeDef TIM_TimeBaseInitStructure;
;;;121        NVIC_InitTypeDef NVIC_InitStructure;
;;;122        
;;;123        RCC_APB1PeriphClockCmd(RCC_APB1Periph_TIM3,ENABLE); //ÙʹŜ TIM3 ʱד
000006  2101              MOVS     r1,#1
000008  2002              MOVS     r0,#2
00000a  f7fffffe          BL       RCC_APB1PeriphClockCmd
;;;124        TIM_TimeBaseInitStructure.TIM_Period = arr; //ؔ֯טװ՘ֵ
00000e  9402              STR      r4,[sp,#8]
;;;125        TIM_TimeBaseInitStructure.TIM_Prescaler=psc; //֨ʱǷؖƵ
000010  f8ad5004          STRH     r5,[sp,#4]
;;;126        TIM_TimeBaseInitStructure.TIM_CounterMode=TIM_CounterMode_Up; //вʏ݆˽ģʽ
000014  2000              MOVS     r0,#0
000016  f8ad0006          STRH     r0,[sp,#6]
;;;127        TIM_TimeBaseInitStructure.TIM_ClockDivision=TIM_CKD_DIV1;
00001a  f8ad000c          STRH     r0,[sp,#0xc]
;;;128        TIM_TimeBaseInit(TIM3,&TIM_TimeBaseInitStructure);// ÚԵʼۯ֨ʱǷ TIM3
00001e  4c0e              LDR      r4,|L2.88|
000020  a901              ADD      r1,sp,#4
000022  4620              MOV      r0,r4
000024  f7fffffe          BL       TIM_TimeBaseInit
;;;129        TIM_ITConfig(TIM3,TIM_IT_Update,ENABLE); //ÛՊѭ֨ʱǷ 3 ټтא׏
000028  2201              MOVS     r2,#1
00002a  4611              MOV      r1,r2
00002c  4620              MOV      r0,r4
00002e  f7fffffe          BL       TIM_ITConfig
;;;130        NVIC_InitStructure.NVIC_IRQChannel=TIM3_IRQn; //֨ʱǷ 3 א׏
000032  211d              MOVS     r1,#0x1d
000034  f88d1000          STRB     r1,[sp,#0]
;;;131        NVIC_InitStructure.NVIC_IRQChannelPreemptionPriority=0x01; //ȀռԅЈܶ 1
000038  2101              MOVS     r1,#1
00003a  f88d1001          STRB     r1,[sp,#1]
;;;132        NVIC_InitStructure.NVIC_IRQChannelSubPriority=0x03; //ЬӦԅЈܶ 3
00003e  2203              MOVS     r2,#3
000040  f88d2002          STRB     r2,[sp,#2]
;;;133        NVIC_InitStructure.NVIC_IRQChannelCmd=ENABLE;
000044  f88d1003          STRB     r1,[sp,#3]
;;;134        NVIC_Init(&NVIC_InitStructure);// ÜԵʼۯ NVIC
000048  4668              MOV      r0,sp
00004a  f7fffffe          BL       NVIC_Init
;;;135        TIM_Cmd(TIM3,ENABLE); //ÝʹŜ֨ʱǷ 3
00004e  2101              MOVS     r1,#1
000050  4620              MOV      r0,r4
000052  f7fffffe          BL       TIM_Cmd
;;;136    }
000056  bd7f              POP      {r0-r6,pc}
;;;137    //֨ʱǷ 3 א׏ؾϱگ˽
                          ENDP

                  |L2.88|
                          DCD      0x40000400

                          AREA ||i.TIM4_IRQHandler||, CODE, READONLY, ALIGN=2

                  TIM4_IRQHandler PROC
;;;52     //֨ʱǷ 3 א׏ؾϱگ˽
;;;53     void TIM4_IRQHandler(void)
000000  b510              PUSH     {r4,lr}
;;;54     {
;;;55         if(TIM_GetITStatus(TIM4,TIM_IT_Update)==SET) //ӧԶא׏
000002  4c12              LDR      r4,|L3.76|
000004  2101              MOVS     r1,#1
000006  4620              MOV      r0,r4
000008  f7fffffe          BL       TIM_GetITStatus
00000c  2801              CMP      r0,#1
00000e  d11c              BNE      |L3.74|
;;;56         {
;;;57             TIM_ClearITPendingBit(TIM4,TIM_IT_Update); //清除中断标志位
000010  2101              MOVS     r1,#1
000012  4620              MOV      r0,r4
000014  f7fffffe          BL       TIM_ClearITPendingBit
;;;58             if(oct_sw == oct_on)
000018  4c0d              LDR      r4,|L3.80|
00001a  7820              LDRB     r0,[r4,#0]  ; oct_sw
00001c  2801              CMP      r0,#1
00001e  d114              BNE      |L3.74|
;;;59             {
;;;60                 OC_CHECK();
000020  f7fffffe          BL       OC_CHECK
;;;61                 if(oct_sw == oct_on)
000024  7820              LDRB     r0,[r4,#0]  ; oct_sw
000026  2801              CMP      r0,#1
000028  d10f              BNE      |L3.74|
;;;62                 {
;;;63                     stepcount ++;
00002a  4c0a              LDR      r4,|L3.84|
00002c  8820              LDRH     r0,[r4,#0]  ; stepcount
00002e  1c40              ADDS     r0,r0,#1
000030  8020              STRH     r0,[r4,#0]
;;;64                     if(stepcount == steptime*10)
000032  4809              LDR      r0,|L3.88|
000034  8800              LDRH     r0,[r0,#0]  ; steptime
000036  8821              LDRH     r1,[r4,#0]  ; stepcount
000038  eb000080          ADD      r0,r0,r0,LSL #2
00003c  ebb10f40          CMP      r1,r0,LSL #1
000040  d103              BNE      |L3.74|
;;;65                     {
;;;66                         OC_ADD();
000042  f7fffffe          BL       OC_ADD
;;;67                         stepcount = 0;
000046  2000              MOVS     r0,#0
000048  8020              STRH     r0,[r4,#0]
                  |L3.74|
;;;68                     }
;;;69                 }
;;;70             }
;;;71         }    
;;;72         
;;;73     }
00004a  bd10              POP      {r4,pc}
;;;74     
                          ENDP

                  |L3.76|
                          DCD      0x40000800
                  |L3.80|
                          DCD      oct_sw
                  |L3.84|
                          DCD      stepcount
                  |L3.88|
                          DCD      steptime

                          AREA ||i.TIM4_Int_Init||, CODE, READONLY, ALIGN=2

                  TIM4_Int_Init PROC
;;;32     //֢oʹԃքˇ֨ʱǷ 3!
;;;33     void TIM4_Int_Init(u16 arr,u16 psc)
000000  b57f              PUSH     {r0-r6,lr}
;;;34     {
000002  4604              MOV      r4,r0
000004  460d              MOV      r5,r1
;;;35         TIM_TimeBaseInitTypeDef TIM_TimeBaseInitStructure;
;;;36         NVIC_InitTypeDef NVIC_InitStructure;
;;;37         
;;;38         RCC_APB1PeriphClockCmd(RCC_APB1Periph_TIM4,ENABLE); //ÙʹŜ TIM3 ʱד
000006  2101              MOVS     r1,#1
000008  2004              MOVS     r0,#4
00000a  f7fffffe          BL       RCC_APB1PeriphClockCmd
;;;39         TIM_TimeBaseInitStructure.TIM_Period = arr; //ؔ֯טװ՘ֵ
00000e  9402              STR      r4,[sp,#8]
;;;40         TIM_TimeBaseInitStructure.TIM_Prescaler=psc; //֨ʱǷؖƵ
000010  f8ad5004          STRH     r5,[sp,#4]
;;;41         TIM_TimeBaseInitStructure.TIM_CounterMode=TIM_CounterMode_Up; //вʏ݆˽ģʽ
000014  2000              MOVS     r0,#0
000016  f8ad0006          STRH     r0,[sp,#6]
;;;42         TIM_TimeBaseInitStructure.TIM_ClockDivision=TIM_CKD_DIV1;
00001a  f8ad000c          STRH     r0,[sp,#0xc]
;;;43         TIM_TimeBaseInit(TIM4,&TIM_TimeBaseInitStructure);// ÚԵʼۯ֨ʱǷ TIM3
00001e  4c0e              LDR      r4,|L4.88|
000020  a901              ADD      r1,sp,#4
000022  4620              MOV      r0,r4
000024  f7fffffe          BL       TIM_TimeBaseInit
;;;44         TIM_ITConfig(TIM4,TIM_IT_Update,ENABLE); //ÛՊѭ֨ʱǷ 3 ټтא׏
000028  2201              MOVS     r2,#1
00002a  4611              MOV      r1,r2
00002c  4620              MOV      r0,r4
00002e  f7fffffe          BL       TIM_ITConfig
;;;45         NVIC_InitStructure.NVIC_IRQChannel=TIM4_IRQn; //֨ʱǷ 3 א׏
000032  211e              MOVS     r1,#0x1e
000034  f88d1000          STRB     r1,[sp,#0]
;;;46         NVIC_InitStructure.NVIC_IRQChannelPreemptionPriority=0x01; //ȀռԅЈܶ 1
000038  2101              MOVS     r1,#1
00003a  f88d1001          STRB     r1,[sp,#1]
;;;47         NVIC_InitStructure.NVIC_IRQChannelSubPriority=0x03; //ЬӦԅЈܶ 3
00003e  2203              MOVS     r2,#3
000040  f88d2002          STRB     r2,[sp,#2]
;;;48         NVIC_InitStructure.NVIC_IRQChannelCmd=ENABLE;
000044  f88d1003          STRB     r1,[sp,#3]
;;;49         NVIC_Init(&NVIC_InitStructure);// ÜԵʼۯ NVIC
000048  4668              MOV      r0,sp
00004a  f7fffffe          BL       NVIC_Init
;;;50         TIM_Cmd(TIM4,ENABLE); //ÝʹŜ֨ʱǷ 3
00004e  2101              MOVS     r1,#1
000050  4620              MOV      r0,r4
000052  f7fffffe          BL       TIM_Cmd
;;;51     }
000056  bd7f              POP      {r0-r6,pc}
;;;52     //֨ʱǷ 3 א׏ؾϱگ˽
                          ENDP

                  |L4.88|
                          DCD      0x40000800

                          AREA ||i.TIM6_Config||, CODE, READONLY, ALIGN=2

                  TIM6_Config PROC
;;;74     
;;;75     void TIM6_Config(void)
000000  b53e              PUSH     {r1-r5,lr}
;;;76     {
;;;77     	TIM_TimeBaseInitTypeDef  TIM_TimeBaseStructure;
;;;78     	/* TIM3 քƤ׃ ---------------------------------------------------
;;;79        TIM3 ˤɫʱד(TIM3CLK) ʨ׃Ϊ APB2 ʱד (PCLK2)    
;;;80         => TIM3CLK = PCLK2 = SystemCoreClock
;;;81        TIM3CLK = SystemCoreClock, Prescaler = 0, TIM3 counter clock = SystemCoreClock
;;;82        SystemCoreClock Ϊ48 MHz */
;;;83       /* TIM16 ʱדʹŜ */
;;;84       RCC_APB1PeriphClockCmd(RCC_APB1Periph_TIM6,ENABLE);
000002  2101              MOVS     r1,#1
000004  2010              MOVS     r0,#0x10
000006  f7fffffe          BL       RCC_APB1PeriphClockCmd
;;;85     	
;;;86       /* Time ֨ʱܹԡʨ׃*/
;;;87       TIM_TimeBaseStructure.TIM_Prescaler = 4800-1;//ʱדԤؖƵ
00000a  f24120bf          MOV      r0,#0x12bf
00000e  f8ad0000          STRH     r0,[sp,#0]
;;;88       TIM_TimeBaseStructure.TIM_CounterMode = TIM_CounterMode_Up;  /* Time ֨ʱʨ׃ΪʏʽҘ݆̣ģʽ*/
000012  2000              MOVS     r0,#0
000014  f8ad0002          STRH     r0,[sp,#2]
;;;89       TIM_TimeBaseStructure.TIM_Period = 5000;
000018  f2413188          MOV      r1,#0x1388
00001c  9101              STR      r1,[sp,#4]
;;;90       TIM_TimeBaseStructure.TIM_ClockDivision = TIM_CKD_DIV1;
00001e  f8ad0008          STRH     r0,[sp,#8]
;;;91     //  TIM_TimeBaseStructure.TIM_RepetitionCounter = 0;
;;;92     
;;;93       TIM_TimeBaseInit(TIM6,&TIM_TimeBaseStructure);
000022  4c0a              LDR      r4,|L5.76|
000024  4669              MOV      r1,sp
000026  4620              MOV      r0,r4
000028  f7fffffe          BL       TIM_TimeBaseInit
;;;94     	TIM_ITConfig(TIM6,TIM_IT_Update,ENABLE);//ߪǴ֨ʱǷټтא׏
00002c  2201              MOVS     r2,#1
00002e  4611              MOV      r1,r2
000030  4620              MOV      r0,r4
000032  f7fffffe          BL       TIM_ITConfig
;;;95     	TIM_SetAutoreload(TIM6, 0xFF);//ʨ׃PWMؖҦÊ
000036  21ff              MOVS     r1,#0xff
000038  4620              MOV      r0,r4
00003a  f7fffffe          BL       TIM_SetAutoreload
;;;96     	TIM6_NVIC_Config();
00003e  f7fffffe          BL       TIM6_NVIC_Config
;;;97       /* TIM3 ݆̣ǷʹŜ*/
;;;98       TIM_Cmd(TIM6, ENABLE);
000042  2101              MOVS     r1,#1
000044  4620              MOV      r0,r4
000046  f7fffffe          BL       TIM_Cmd
;;;99     }
00004a  bd3e              POP      {r1-r5,pc}
;;;100    /***********************************************************************/
                          ENDP

                  |L5.76|
                          DCD      0x40001000

                          AREA ||i.TIM6_NVIC_Config||, CODE, READONLY, ALIGN=1

                  TIM6_NVIC_Config PROC
;;;100    /***********************************************************************/
;;;101    static void TIM6_NVIC_Config(void)
000000  b508              PUSH     {r3,lr}
;;;102    {
;;;103    	NVIC_InitTypeDef NVIC_InitStructure; 
;;;104    	
;;;105    	/* Enable the USART1 Interrupt */
;;;106    	NVIC_InitStructure.NVIC_IRQChannel = TIM6_DAC_IRQn;	 
000002  2036              MOVS     r0,#0x36
000004  f88d0000          STRB     r0,[sp,#0]
;;;107    	NVIC_InitStructure.NVIC_IRQChannelPreemptionPriority = 0x01;
000008  2001              MOVS     r0,#1
00000a  f88d0001          STRB     r0,[sp,#1]
;;;108    	NVIC_InitStructure.NVIC_IRQChannelSubPriority = 0x03;
00000e  2103              MOVS     r1,#3
000010  f88d1002          STRB     r1,[sp,#2]
;;;109    	NVIC_InitStructure.NVIC_IRQChannelCmd = ENABLE;
000014  f88d0003          STRB     r0,[sp,#3]
;;;110    	NVIC_Init(&NVIC_InitStructure);
000018  4668              MOV      r0,sp
00001a  f7fffffe          BL       NVIC_Init
;;;111    }
00001e  bd08              POP      {r3,pc}
;;;112    
                          ENDP


                          AREA ||.data||, DATA, ALIGN=1

                  calert
000000  00                DCB      0x00
                  resetflag
000001  00                DCB      0x00
                  resdone
000002  0000              DCB      0x00,0x00
                  resetcount
000004  0000              DCB      0x00,0x00

                          AREA ||area_number.10||, DATA, ALIGN=1

                          EXPORTAS ||area_number.10||, ||.data||
                  battery_c
000000  0000              DCB      0x00,0x00

                          AREA ||area_number.11||, DATA, ALIGN=2

                          EXPORTAS ||area_number.11||, ||.data||
                  bc_raw
                          DCD      0x00000000

;*** Start embedded assembler ***

#line 1 "..\\drive\\TIM6.c"
	AREA ||.rev16_text||, CODE, READONLY
	THUMB
	EXPORT |__asm___6_TIM6_c_3a0b03ec____REV16|
#line 114 "D:\\Keil\\ARM\\CMSIS\\Include\\core_cmInstr.h"
|__asm___6_TIM6_c_3a0b03ec____REV16| PROC
#line 115

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE, READONLY
	THUMB
	EXPORT |__asm___6_TIM6_c_3a0b03ec____REVSH|
#line 128
|__asm___6_TIM6_c_3a0b03ec____REVSH| PROC
#line 129

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
