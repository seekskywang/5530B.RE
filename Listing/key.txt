; generated by ARM C/C++ Compiler, 4.1 [Build 894]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o..\Output\key.o --asm_dir=..\Listing\ --list_dir=..\Listing\ --depend=..\Output\key.d --cpu=Cortex-M4.fp --apcs=interwork -O1 --diag_suppress=870 -I..\APP -I..\drive -I..\Include -I..\Libraries\CMSIS\inc -I..\Libraries\CMSIS\src -I..\Libraries\FWlib\inc -I..\Libraries\FWlib\src -I..\Listing -I..\Output -I..\Project -I..\STemWinLibrary522\Config -I..\STemWinLibrary522\emWinTask -I..\STemWinLibrary522\GUILib -I..\STemWinLibrary522\inc -I..\User -I..\USB\STM32_USB_HOST_Library\Class\HID\inc -I..\USB\STM32_USB_HOST_Library\Class\MSC\src -I..\USB\STM32_USB_HOST_Library\Core\src -I..\USB\USB_APP -I..\USB\STM32_USB_HOST_Library\Class\HID\src -I..\USB\STM32_USB_HOST_Library\Class\MSC\inc -I..\USB\STM32_USB_HOST_Library\Core\inc -I..\USB\STM32_USB_OTG_Driver\inc -I..\FATFS\exfuns -I..\FATFS\src\option -I..\FATFS\src -I..\MALLOC -ID:\Keil\ARM\RV31\Inc -ID:\Keil\ARM\CMSIS\Include -ID:\Keil\ARM\Inc\ST\STM32F4xx -DUSE_STDPERIPH_DRIVER -DSTM32F40XX -DUSE_USB_OTG_FS -DUSE_EMBEDDED_PHY -DUSE_USB_OTG_HS -DSTM32F40XX --omf_browse=..\Output\key.crf ..\drive\key.c]
                          THUMB

                          AREA ||i.Key_Funtion||, CODE, READONLY, ALIGN=2

                  Key_Funtion PROC
;;;213    /***************************************************************************************************************************/
;;;214    void Key_Funtion(void)
000000  e92d5ff0          PUSH     {r4-r12,lr}
;;;215    {
;;;216    	vu32 KeyValue = 0;
;;;217    	static vu8 t_KEYON;
;;;218    	static vu8 a,b;
;;;219    /****************************************************鐭寜鍔熻兘************************************************************/
;;;220    	if(Flag_Key_Scan==1)
000004  48fe              LDR      r0,|L1.1024|
000006  6800              LDR      r0,[r0,#0]  ; flagA
000008  0701              LSLS     r1,r0,#28
00000a  d575              BPL      |L1.248|
;;;221    	{
;;;222    		Flag_Key_Scan = 0;
00000c  49fc              LDR      r1,|L1.1024|
00000e  f0200008          BIC      r0,r0,#8
000012  6008              STR      r0,[r1,#0]  ; flagA
;;;223    		KeyValue = Key_Scan();
000014  f7fffffe          BL       Key_Scan
;;;224    		switch(KeyValue)
000018  3844              SUBS     r0,r0,#0x44
;;;225    		{
;;;226    			case KEY_1 ://
;;;227    			{
;;;228    				switch(page_sw){
;;;229                        case face_menu: 
;;;230                        {
;;;231                            INPUT_POW("1");
;;;232                            KeyCounter = 0;
;;;233                            BEEP_Tiggr();//瑙﹀彂铚傞福鍣?
;;;234                            break;
;;;235                        }
;;;236                        case face_set:
;;;237                        {
;;;238                             INPUT_NUM("1");
;;;239                             KeyCounter = 0;
;;;240                             BEEP_Tiggr();//瑙﹀彂铚傞福鍣?
;;;241                             break;
;;;242                        }
;;;243                        case face_r:
;;;244                        {
;;;245                            if(para_set2 == set_2_on)
00001a  49fa              LDR      r1,|L1.1028|
;;;246                            {
;;;247                                INPUT_C("1");
;;;248                                KeyCounter = 0;
;;;249                                BEEP_Tiggr();//瑙﹀彂铚傞福鍣?
;;;250                                break;
;;;251                            }
;;;252                        }   
;;;253                        case face_load:
;;;254                        {
;;;255                            INPUT_LOAD("1");
;;;256                            KeyCounter = 0;
;;;257                            BEEP_Tiggr();//瑙﹀彂铚傞福鍣?
;;;258                            break;
;;;259                        }
;;;260                        case face_cdc:
;;;261                        {
;;;262                            INPUT_CDC("1");
;;;263                            KeyCounter = 0;
;;;264                            BEEP_Tiggr();//瑙﹀彂铚傞福鍣?
;;;265                            break;
;;;266                        }
;;;267                        case face_sys_info:
;;;268                        {
;;;269                            if(admin == 1)
00001c  4afa              LDR      r2,|L1.1032|
;;;270                            {
;;;271                                INPUT_INFO(1);    
;;;272                            }
;;;273                            KeyCounter = 0;
;;;274                            BEEP_Tiggr();//瑙﹀彂铚傞福鍣?
;;;275                            break;
;;;276                        }  
;;;277                    }
;;;278    				KeyCounter = 0;
;;;279    				BEEP_Tiggr();//
;;;280    			}
;;;281    			break;
;;;282    			
;;;283    			case KEY_2 ://
;;;284    			{
;;;285    				switch(page_sw){
;;;286                        case face_menu:  
;;;287                        {
;;;288                            INPUT_POW("2");
;;;289                            KeyCounter = 0;
;;;290                            BEEP_Tiggr();//瑙﹀彂铚傞福鍣?
;;;291                        }
;;;292                        case face_set:
;;;293                        {
;;;294                            INPUT_NUM("2");
;;;295                            KeyCounter = 0;
;;;296                            BEEP_Tiggr();//瑙﹀彂铚傞福鍣?
;;;297                            break;
;;;298                        }
;;;299                        case face_r:
;;;300                        {
;;;301                            if(para_set2 == set_2_on)
;;;302                            {
;;;303                                INPUT_C("2");
;;;304                                KeyCounter = 0;
;;;305                                BEEP_Tiggr();//瑙﹀彂铚傞福鍣?
;;;306                                break;
;;;307                            }
;;;308                        }
;;;309                        case face_load:
;;;310                        {
;;;311                            INPUT_LOAD("2");
;;;312                            KeyCounter = 0;
;;;313                            BEEP_Tiggr();//瑙﹀彂铚傞福鍣?
;;;314                            break;
;;;315                        }
;;;316                        case face_cdc:
;;;317                        {
;;;318                            INPUT_CDC("2");
;;;319                            KeyCounter = 0;
;;;320                            BEEP_Tiggr();//瑙﹀彂铚傞福鍣?
;;;321                            break;
;;;322                        }
;;;323                        case face_sys_info:
;;;324                        {
;;;325                            if(admin == 1)
;;;326                            {
;;;327                                INPUT_INFO(2);    
;;;328                            }
;;;329                            KeyCounter = 0;
;;;330                            BEEP_Tiggr();//瑙﹀彂铚傞福鍣?
;;;331                            break;
;;;332                        }
;;;333       
;;;334                    }
;;;335    				KeyCounter = 0;
;;;336    				BEEP_Tiggr();//
;;;337    			}
;;;338    			break;
;;;339    			
;;;340    			case KEY_3 ://
;;;341    			{
;;;342                    switch(page_sw){
;;;343                        case face_menu:  
;;;344                        {
;;;345                            INPUT_POW("3");
;;;346                            KeyCounter = 0;
;;;347                            BEEP_Tiggr();//瑙﹀彂铚傞福鍣?
;;;348                        }
;;;349                        case face_set:
;;;350                        {
;;;351                            INPUT_NUM("3");
;;;352                            KeyCounter = 0;
;;;353                            BEEP_Tiggr();//瑙﹀彂铚傞福鍣?
;;;354                            break;
;;;355                        }
;;;356                        case face_r:
;;;357                        {
;;;358                            if(para_set2 == set_2_on)
;;;359                            {
;;;360                                INPUT_C("3");
;;;361                                KeyCounter = 0;
;;;362                                BEEP_Tiggr();//瑙﹀彂铚傞福鍣?
;;;363                                break;
;;;364                            }
;;;365                        }
;;;366                        case face_load:
;;;367                        {
;;;368                            INPUT_LOAD("3");
;;;369                            KeyCounter = 0;
;;;370                            BEEP_Tiggr();//瑙﹀彂铚傞福鍣?
;;;371                            break;
;;;372                        }
;;;373                        case face_cdc:
;;;374                        {
;;;375                            INPUT_CDC("3");
;;;376                            KeyCounter = 0;
;;;377                            BEEP_Tiggr();//瑙﹀彂铚傞福鍣?
;;;378                            break;
;;;379                        }
;;;380                        case face_sys_info:
;;;381                        {
;;;382                            if(admin == 1)
;;;383                            {
;;;384                                INPUT_INFO(3);    
;;;385                            }else{
;;;386                                pass += 3;
;;;387                            }
;;;388                            KeyCounter = 0;
;;;389                            BEEP_Tiggr();//瑙﹀彂铚傞福鍣?
;;;390                            break;
;;;391                        }
;;;392                    }
;;;393    			}
;;;394    			break;
;;;395    			
;;;396    			case KEY_4 ://
;;;397    			{
;;;398    				switch(page_sw){
;;;399                        case face_menu:  
;;;400                        {
;;;401                            INPUT_POW("4");
;;;402                            KeyCounter = 0;
;;;403                            BEEP_Tiggr();//瑙﹀彂铚傞福鍣?
;;;404                        }
;;;405                        case face_set:
;;;406                        {
;;;407                            INPUT_NUM("4");
;;;408                            KeyCounter = 0;
;;;409                            BEEP_Tiggr();//瑙﹀彂铚傞福鍣?
;;;410                            break;
;;;411                        }
;;;412                        case face_r:
;;;413                        {
;;;414                            if(para_set2 == set_2_on)
;;;415                            {
;;;416                                INPUT_C("4");
;;;417                                KeyCounter = 0;
;;;418                                BEEP_Tiggr();//瑙﹀彂铚傞福鍣?
;;;419                                break;
;;;420                            }
;;;421                        }
;;;422                        case face_load:
;;;423                        {
;;;424                            INPUT_LOAD("4");
;;;425                            KeyCounter = 0;
;;;426                            BEEP_Tiggr();//瑙﹀彂铚傞福鍣?
;;;427                            break;
;;;428                        }
;;;429                        case face_cdc:
;;;430                        {
;;;431                            INPUT_CDC("4");
;;;432                            KeyCounter = 0;
;;;433                            BEEP_Tiggr();//瑙﹀彂铚傞福鍣?
;;;434                            break;
;;;435                        }
;;;436                        case face_sys_info:
;;;437                        {
;;;438                            if(admin == 1)
;;;439                            {
;;;440                                INPUT_INFO(4);    
;;;441                            }
;;;442                            KeyCounter = 0;
;;;443                            BEEP_Tiggr();//瑙﹀彂铚傞福鍣?
;;;444                            break;
;;;445                        }
;;;446                    }
;;;447    			}
;;;448    			break;
;;;449    			
;;;450    			case KEY_5 ://
;;;451    			{
;;;452    				switch(page_sw){
;;;453                        case face_menu:  
;;;454                        {
;;;455                            INPUT_POW("5");
;;;456                            KeyCounter = 0;
;;;457                            BEEP_Tiggr();//瑙﹀彂铚傞福鍣?
;;;458                        }
;;;459                        case face_set:
;;;460                        {
;;;461                            INPUT_NUM("5");
;;;462                            KeyCounter = 0;
;;;463                            BEEP_Tiggr();//瑙﹀彂铚傞福鍣?
;;;464                            break;
;;;465                        }
;;;466                        case face_r:
;;;467                        {
;;;468                            if(para_set2 == set_2_on)
;;;469                            {
;;;470                                INPUT_C("5");
;;;471                                KeyCounter = 0;
;;;472                                BEEP_Tiggr();//瑙﹀彂铚傞福鍣?
;;;473                                break;
;;;474                            }
;;;475                        }
;;;476                        case face_load:
;;;477                        {
;;;478                            INPUT_LOAD("5");
;;;479                            KeyCounter = 0;
;;;480                            BEEP_Tiggr();//瑙﹀彂铚傞福鍣?
;;;481                            break;
;;;482                        }
;;;483                        case face_cdc:
;;;484                        {
;;;485                            INPUT_CDC("5");
;;;486                            KeyCounter = 0;
;;;487                            BEEP_Tiggr();//瑙﹀彂铚傞福鍣?
;;;488                            break;
;;;489                        }
;;;490                        case face_sys_info:
;;;491                        {
;;;492                            if(admin == 1)
;;;493                            {
;;;494                                INPUT_INFO(5);    
;;;495                            }else{
;;;496                                pass += 5;
;;;497                            }
;;;498                            KeyCounter = 0;
;;;499                            BEEP_Tiggr();//瑙﹀彂铚傞福鍣?
;;;500                            break;
;;;501                        }
;;;502                    }
;;;503    			}
;;;504    			break;	
;;;505    			
;;;506    			case KEY_6 ://
;;;507    			{
;;;508    				switch(page_sw){
;;;509                        case face_menu:  
;;;510                        {
;;;511                            INPUT_POW("6");
;;;512                            KeyCounter = 0;
;;;513                            BEEP_Tiggr();//瑙﹀彂铚傞福鍣?
;;;514                        }
;;;515                        case face_set:
;;;516                        {
;;;517                            INPUT_NUM("6");
;;;518                            KeyCounter = 0;
;;;519                            BEEP_Tiggr();//瑙﹀彂铚傞福鍣?
;;;520                            break;
;;;521                        }
;;;522                        case face_r:
;;;523                        {
;;;524                            if(para_set2 == set_2_on)
;;;525                            {
;;;526                                INPUT_C("6");
;;;527                                KeyCounter = 0;
;;;528                                BEEP_Tiggr();//瑙﹀彂铚傞福鍣?
;;;529                                break;
;;;530                            }
;;;531                        }
;;;532                        case face_load:
;;;533                        {
;;;534                            INPUT_LOAD("6");
;;;535                            KeyCounter = 0;
;;;536                            BEEP_Tiggr();//瑙﹀彂铚傞福鍣?
;;;537                            break;
;;;538                        }
;;;539                        case face_cdc:
;;;540                        {
;;;541                            INPUT_CDC("6");
;;;542                            KeyCounter = 0;
;;;543                            BEEP_Tiggr();//瑙﹀彂铚傞福鍣?
;;;544                            break;
;;;545                        } 
;;;546                        case face_sys_info:
;;;547                        {
;;;548                            if(admin == 1)
;;;549                            {
;;;550                                INPUT_INFO(6);    
;;;551                            }
;;;552                            KeyCounter = 0;
;;;553                            BEEP_Tiggr();//瑙﹀彂铚傞福鍣?
;;;554                            break;
;;;555                        }
;;;556                    }
;;;557    			}
;;;558    			break;
;;;559    			
;;;560    			case KEY_7 ://
;;;561    			{
;;;562    				switch(page_sw){
;;;563                        case face_menu:  
;;;564                        {
;;;565                            INPUT_POW("7");
;;;566                            KeyCounter = 0;
;;;567                            BEEP_Tiggr();//瑙﹀彂铚傞福鍣?
;;;568                        }
;;;569                        case face_set:
;;;570                        {
;;;571                            INPUT_NUM("7");
;;;572                            KeyCounter = 0;
;;;573                            BEEP_Tiggr();//瑙﹀彂铚傞福鍣?
;;;574                            break;
;;;575                        }
;;;576                        case face_r:
;;;577                        {
;;;578                            if(para_set2 == set_2_on)
;;;579                            {
;;;580                                INPUT_C("7");
;;;581                                KeyCounter = 0;
;;;582                                BEEP_Tiggr();//瑙﹀彂铚傞福鍣?
;;;583                                break;
;;;584                            }
;;;585                        }
;;;586                        case face_load:
;;;587                        {
;;;588                            INPUT_LOAD("7");
;;;589                            KeyCounter = 0;
;;;590                            BEEP_Tiggr();//瑙﹀彂铚傞福鍣?
;;;591                            break;
;;;592                        }
;;;593                        case face_cdc:
;;;594                        {
;;;595                            INPUT_CDC("7");
;;;596                            KeyCounter = 0;
;;;597                            BEEP_Tiggr();//瑙﹀彂铚傞福鍣?
;;;598                            break;
;;;599                        }
;;;600                        case face_sys_info:
;;;601                        {
;;;602                            if(admin == 1)
;;;603                            {
;;;604                                INPUT_INFO(7);    
;;;605                            }
;;;606                            KeyCounter = 0;
;;;607                            BEEP_Tiggr();//瑙﹀彂铚傞福鍣?
;;;608                            break;
;;;609                        }
;;;610                    }
;;;611    			}
;;;612    			break;
;;;613    			
;;;614    			case KEY_8 ://
;;;615    			{
;;;616    				switch(page_sw){
;;;617                        case face_menu:  
;;;618                        {
;;;619                            INPUT_POW("8");
;;;620                            KeyCounter = 0;
;;;621                            BEEP_Tiggr();//瑙﹀彂铚傞福鍣?
;;;622                        }
;;;623                        case face_set:
;;;624                        {
;;;625                            INPUT_NUM("8");
;;;626                            KeyCounter = 0;
;;;627                            BEEP_Tiggr();//瑙﹀彂铚傞福鍣?
;;;628                            break;
;;;629                        }
;;;630                        case face_r:
;;;631                        {
;;;632                            if(para_set2 == set_2_on)
;;;633                            {
;;;634                                INPUT_C("8");
;;;635                                KeyCounter = 0;
;;;636                                BEEP_Tiggr();//瑙﹀彂铚傞福鍣?
;;;637                                break;
;;;638                            }
;;;639                        }
;;;640                        case face_load:
;;;641                        {
;;;642                            INPUT_LOAD("8");
;;;643                            KeyCounter = 0;
;;;644                            BEEP_Tiggr();//瑙﹀彂铚傞福鍣?
;;;645                            break;
;;;646                        }
;;;647                        case face_cdc:
;;;648                        {
;;;649                            INPUT_CDC("8");
;;;650                            KeyCounter = 0;
;;;651                            BEEP_Tiggr();//瑙﹀彂铚傞福鍣?
;;;652                            break;
;;;653                        }
;;;654                        case face_sys_info:
;;;655                        {
;;;656                            if(admin == 1)
;;;657                            {
;;;658                                INPUT_INFO(8);    
;;;659                            }
;;;660                            KeyCounter = 0;
;;;661                            BEEP_Tiggr();//瑙﹀彂铚傞福鍣?
;;;662                            break;
;;;663                        }
;;;664                    }
;;;665    			}
;;;666    			break;
;;;667    			
;;;668    			case KEY_9 ://
;;;669    			{
;;;670    				switch(page_sw){
;;;671                        case face_menu:  
;;;672                        {
;;;673                            INPUT_POW("9");
;;;674                            KeyCounter = 0;
;;;675                            BEEP_Tiggr();//瑙﹀彂铚傞福鍣?
;;;676                        }
;;;677                        case face_set:
;;;678                        {
;;;679                            INPUT_NUM("9");
;;;680                            KeyCounter = 0;
;;;681                            BEEP_Tiggr();//瑙﹀彂铚傞福鍣?
;;;682                            break;
;;;683                        }
;;;684                        case face_r:
;;;685                        {
;;;686                            if(para_set2 == set_2_on)
;;;687                            {
;;;688                                INPUT_C("9");
;;;689                                KeyCounter = 0;
;;;690                                BEEP_Tiggr();//瑙﹀彂铚傞福鍣?
;;;691                                break;
;;;692                            }
;;;693                        }
;;;694                        case face_load:
;;;695                        {
;;;696                            INPUT_LOAD("9");
;;;697                            KeyCounter = 0;
;;;698                            BEEP_Tiggr();//瑙﹀彂铚傞福鍣?
;;;699                            break;
;;;700                        }
;;;701                        case face_cdc:
;;;702                        {
;;;703                            INPUT_CDC("9");
;;;704                            KeyCounter = 0;
;;;705                            BEEP_Tiggr();//瑙﹀彂铚傞福鍣?
;;;706                            break;
;;;707                        }
;;;708                        case face_sys_info:
;;;709                        {
;;;710                            if(admin == 1)
;;;711                            {
;;;712                                INPUT_INFO(9);    
;;;713                            }
;;;714                            KeyCounter = 0;
;;;715                            BEEP_Tiggr();//瑙﹀彂铚傞福鍣?
;;;716                            break;
;;;717                        }
;;;718                    }
;;;719    			}
;;;720    			break;
;;;721    			
;;;722    			case KEY_0 ://
;;;723    			{
;;;724    				switch(page_sw){
;;;725                        case face_menu:  
;;;726                        {
;;;727                            INPUT_POW("0");
;;;728                            KeyCounter = 0;
;;;729                            BEEP_Tiggr();//瑙﹀彂铚傞福鍣?
;;;730                        }
;;;731                        case face_set:
;;;732                        {
;;;733                            INPUT_NUM("0");
;;;734                            KeyCounter = 0;
;;;735                            BEEP_Tiggr();//瑙﹀彂铚傞福鍣?
;;;736                            break;
;;;737                        }
;;;738                        case face_r:
;;;739                        {
;;;740                            if(para_set2 == set_2_on)
;;;741                            {
;;;742                                INPUT_C("0");
;;;743                                KeyCounter = 0;
;;;744                                BEEP_Tiggr();//瑙﹀彂铚傞福鍣?
;;;745                                break;
;;;746                            }
;;;747                        }
;;;748                        case face_load:
;;;749                        {
;;;750                            INPUT_LOAD("0");
;;;751                            KeyCounter = 0;
;;;752                            BEEP_Tiggr();//瑙﹀彂铚傞福鍣?
;;;753                            break;
;;;754                        }
;;;755                        case face_cdc:
;;;756                        {
;;;757                            INPUT_CDC("0");
;;;758                            KeyCounter = 0;
;;;759                            BEEP_Tiggr();//瑙﹀彂铚傞福鍣?
;;;760                            break;
;;;761                        }
;;;762                        case face_sys_info:
;;;763                        {
;;;764                            if(admin == 1)
;;;765                            {
;;;766                                INPUT_INFO(0);    
;;;767                            }else{
;;;768                                pass += 1;
;;;769                            }
;;;770                            KeyCounter = 0;
;;;771                            BEEP_Tiggr();//瑙﹀彂铚傞福鍣?
;;;772                            break;
;;;773                        }                    
;;;774                    }
;;;775    			}
;;;776    			break;
;;;777    			
;;;778    			case KEY_dian ://
;;;779    			{
;;;780    				switch(page_sw){
;;;781                        case face_menu:
;;;782                        {
;;;783                            INPUT_POW(".");
;;;784                            KeyCounter = 0;
;;;785                            BEEP_Tiggr();//瑙﹀彂铚傞福鍣?
;;;786                            break;
;;;787                        }
;;;788                        case face_set:
;;;789                        {
;;;790                            INPUT_NUM(".");
;;;791                            KeyCounter = 0;
;;;792                            BEEP_Tiggr();//瑙﹀彂铚傞福鍣?
;;;793                            break;
;;;794                        }
;;;795                        case face_load:
;;;796                        {
;;;797                            INPUT_LOAD(".");
;;;798                            KeyCounter = 0;
;;;799                            BEEP_Tiggr();//瑙﹀彂铚傞福鍣?
;;;800                            break;
;;;801                        }
;;;802                        case face_r:
;;;803                        {
;;;804                            if(para_set2 == set_2_on)
;;;805                            {
;;;806                                INPUT_C(".");
;;;807                                KeyCounter = 0;
;;;808                                BEEP_Tiggr();//瑙﹀彂铚傞福鍣?
;;;809                                break;
;;;810                            }
;;;811                        }
;;;812                        case face_cdc:
;;;813                        {
;;;814                            INPUT_CDC(".");
;;;815                            KeyCounter = 0;
;;;816                            BEEP_Tiggr();//瑙﹀彂铚傞福鍣?
;;;817                            break;
;;;818                        }                     
;;;819                    }
;;;820    			}
;;;821    			break;
;;;822    			
;;;823    			case KEY_ESC :
;;;824    			{
;;;825    //                sLCD_WR_REG(0x01);
;;;826    //                main();
;;;827    //				timer_sw = 0;
;;;828    				KeyCounter = 0;
;;;829    //				BEEP_Tiggr();//瑙﹀彂铚傞福鍣
;;;830    			}
;;;831    			break;
;;;832    			
;;;833    			case PUSH_Lift :
;;;834    			{
;;;835    				switch(page_sw){
;;;836                        case face_set:  //绯荤粺璁剧疆
;;;837                        {
;;;838                            SET_OP_LEFT();  //璁剧疆閫夐」鍒囨崲
;;;839                            KeyCounter = 0;
;;;840                            BEEP_Tiggr();//瑙﹀彂铚傞福鍣?
;;;841                            break;
;;;842                        }
;;;843                        case face_sys_info:
;;;844                        {
;;;845                            if(admin == 1)
;;;846                            {
;;;847                                SYS_INFO_LEFT();  //璁剧疆閫夐」鍒囨崲
;;;848                            } 
;;;849                            KeyCounter = 0;
;;;850                            BEEP_Tiggr();//瑙﹀彂铚傞福鍣?
;;;851                            break;
;;;852                        }
;;;853                        case face_cdc:  //绯荤粺璁剧疆
;;;854                        {
;;;855                            CDC_OP_LEFT();  //璁剧疆閫夐」鍒囨崲
;;;856                            KeyCounter = 0;
;;;857                            BEEP_Tiggr();//瑙﹀彂铚傞福鍣?
;;;858                            break;
;;;859                        }
;;;860                    }
;;;861    			}
;;;862    			break;
;;;863    			case PUSH_Right :
;;;864    			{
;;;865    				switch(page_sw){
;;;866                        case face_set:  //绯荤粺璁剧疆
;;;867                        {
;;;868                            SET_OP_RIGHT();  //璁剧疆閫夐」鍒囨崲
;;;869                            KeyCounter = 0;
;;;870                            BEEP_Tiggr();//瑙﹀彂铚傞福鍣?
;;;871                            break;
;;;872                        }
;;;873                        case face_sys_info:
;;;874                        {
;;;875                            if(admin == 1)
;;;876                            {
;;;877                                SYS_INFO_RIGHT();  //璁剧疆閫夐」鍒囨崲
;;;878                            } 
;;;879                            KeyCounter = 0;
;;;880                            BEEP_Tiggr();//瑙﹀彂铚傞福鍣?
;;;881                            break;
;;;882                        }
;;;883                        case face_cdc:  //绯荤粺璁剧疆
;;;884                        {
;;;885                            CDC_OP_RIGHT();  //璁剧疆閫夐」鍒囨崲
;;;886                            KeyCounter = 0;
;;;887                            BEEP_Tiggr();//瑙﹀彂铚傞福鍣?
;;;888                            break;
;;;889                        }
;;;890                    }
;;;891    			}
;;;892    			break;
;;;893    			case PUSH_Up :
;;;894    			{
;;;895    				switch(page_sw){
;;;896                        case face_menu:
;;;897                        {
;;;898                            KeyCounter = 0;
;;;899                            BEEP_Tiggr();//瑙﹀彂铚傞福鍣?
;;;900                            MENU_OP_UP();
;;;901                            break;
;;;902                        }                    
;;;903                        case face_load:
;;;904                        {
;;;905                            KeyCounter = 0;
;;;906                            BEEP_Tiggr();//瑙﹀彂铚傞福鍣?
;;;907                            LOAD_OP_UP();
;;;908                            break;
;;;909                        }
;;;910                        case face_set:
;;;911                        {
;;;912                            SET_OP_UP();  //璁剧疆閫夐」鍒囨崲
;;;913                            KeyCounter = 0;
;;;914                            BEEP_Tiggr();//瑙﹀彂铚傞福鍣?
;;;915                            break;
;;;916                        }
;;;917                        case face_r:
;;;918                        {
;;;919                            if(para_set2 == set_2_on)
;;;920                            {
;;;921                                OC_OP_UP();
;;;922                                KeyCounter = 0;
;;;923                                BEEP_Tiggr();//瑙﹀彂铚傞福鍣?
;;;924                                break;
;;;925                            }
;;;926    
;;;927                        }
;;;928                        case face_cdc:
;;;929                        {
;;;930                            CDC_OP_UP();
;;;931                            KeyCounter = 0;
;;;932                            BEEP_Tiggr();//瑙﹀彂铚傞福鍣?
;;;933                            break;
;;;934                        }
;;;935                        case face_sys_info:
;;;936                        {
;;;937                            if(admin == 1)
;;;938                            {
;;;939                                SYS_INFO_UP();  //璁剧疆閫夐」鍒囨崲
;;;940                            }                        
;;;941                            KeyCounter = 0;
;;;942                            BEEP_Tiggr();//瑙﹀彂铚傞福鍣?
;;;943                            break;
;;;944                        }
;;;945    
;;;946                    }
;;;947    			}
;;;948    			break;
;;;949    			case PUSH_Down :
;;;950    			{
;;;951    				switch(page_sw){
;;;952                        case face_menu:
;;;953                        {
;;;954                            KeyCounter = 0;
;;;955                            BEEP_Tiggr();//瑙﹀彂铚傞福鍣?
;;;956                            MENU_OP_DOWN();
;;;957                            break;
;;;958                        }  
;;;959                        case face_load:
;;;960                        {
;;;961                           	KeyCounter = 0;
;;;962                            BEEP_Tiggr();//瑙﹀彂铚傞福鍣?
;;;963                            LOAD_OP_DOWN();
;;;964                            break;
;;;965                        }
;;;966                        case face_set:  //绯荤粺璁剧疆
;;;967                        {
;;;968                            SET_OP_DOWN();  //璁剧疆閫夐」鍒囨崲
;;;969                            KeyCounter = 0;
;;;970                            BEEP_Tiggr();//瑙﹀彂铚傞福鍣?
;;;971                            break;
;;;972                        }
;;;973                        case face_r:
;;;974                        {
;;;975                            if(para_set2 == set_2_on)
;;;976                            {
;;;977                                OC_OP_DOWN();
;;;978                                KeyCounter = 0;
;;;979                                BEEP_Tiggr();//瑙﹀彂铚傞福鍣?
;;;980                                break;
;;;981                            }
;;;982                        }
;;;983                        case face_cdc:
;;;984                        {
;;;985                            CDC_OP_DOWN();
;;;986                            KeyCounter = 0;
;;;987                            BEEP_Tiggr();//瑙﹀彂铚傞福鍣?
;;;988                            break;
;;;989                        }
;;;990                        case face_sys_info:
;;;991                        {
;;;992                            if(admin == 1)
;;;993                            {
;;;994                                SYS_INFO_DOWN();  //璁剧疆閫夐」鍒囨崲
;;;995                            } 
;;;996                            KeyCounter = 0;
;;;997                            BEEP_Tiggr();//瑙﹀彂铚傞福鍣?
;;;998                            break;
;;;999                        }
;;;1000      
;;;1001                   }
;;;1002   			}
;;;1003   			break;
;;;1004   			
;;;1005   			case ENTER ://
;;;1006   			{
;;;1007   				switch(page_sw){
;;;1008                       case face_menu:
;;;1009                       {
;;;1010                           MENU_SET();
;;;1011                           KeyCounter = 0;
;;;1012                           BEEP_Tiggr();//瑙﹀彂铚傞福鍣?
;;;1013                           break;
;;;1014                       }  
;;;1015                       case face_set:
;;;1016                       {
;;;1017                           PARA_SET();  //鍙傛暟璁剧疆
;;;1018                           KeyCounter = 0;
;;;1019                           BEEP_Tiggr();//瑙﹀彂铚傞福鍣?
;;;1020                           break;                        
;;;1021                       }
;;;1022                       case face_r:
;;;1023                       {
;;;1024                           if(para_set2 == set_2_on)
;;;1025                           {
;;;1026                               OC_SET();
;;;1027                               KeyCounter = 0;
;;;1028                               BEEP_Tiggr();//瑙﹀彂铚傞福鍣?
;;;1029                               break;
;;;1030                           }
;;;1031                       }
;;;1032                       case face_load:
;;;1033                       {
;;;1034                           LOAD_SET();
;;;1035                           KeyCounter = 0;
;;;1036                           BEEP_Tiggr();//瑙﹀彂铚傞福鍣?
;;;1037                           break;
;;;1038                       }
;;;1039                       case face_cdc:
;;;1040                       {
;;;1041                           CDC_SET();
;;;1042                           KeyCounter = 0;
;;;1043                           BEEP_Tiggr();//瑙﹀彂铚傞福鍣?
;;;1044                           break;
;;;1045                       }
;;;1046                       case face_sys_info:
;;;1047                       {
;;;1048                           CFM_PASS();
;;;1049                           KeyCounter = 0;
;;;1050                           BEEP_Tiggr();//瑙﹀彂铚傞福鍣?
;;;1051                           break;
;;;1052                       }
;;;1053                   }
;;;1054   			}
;;;1055   			break;
;;;1056   			case PUSH_DISP :
;;;1057   			{
;;;1058   				switch(track)
;;;1059                   {
;;;1060                       case face_r:
;;;1061                       {
;;;1062                           WM_DeleteWindow(hWinR);
00001e  4bfb              LDR      r3,|L1.1036|
;;;1063                           WM_DeleteWindow(hWinWind);
000020  4efb              LDR      r6,|L1.1040|
;;;1064                           WM_DeleteWindow(hWinG);
000022  4ffc              LDR      r7,|L1.1044|
;;;1065                           WM_DeleteWindow(load_wind);
000024  f8df83f0          LDR      r8,|L1.1048|
;;;1066                           WM_DeleteWindow(hWinsysinfo);
000028  f8df93f0          LDR      r9,|L1.1052|
;;;1067                           WM_DeleteWindow(hWincdc);
00002c  f8dfa3f0          LDR      r10,|L1.1056|
;;;1068                           WM_DeleteWindow(hWinset);                       
000030  f8dfb3f0          LDR      r11,|L1.1060|
000034  2400              MOVS     r4,#0                 ;216
000036  4dfc              LDR      r5,|L1.1064|
000038  2834              CMP      r0,#0x34              ;224
00003a  d25d              BCS      |L1.248|
00003c  e8dff000          TBB      [pc,r0]               ;224
000040  f0efeeed          DCB      0xf0,0xef,0xee,0xed
000044  5c5c5c5c          DCB      0x5c,0x5c,0x5c,0x5c
000048  eceb1aea          DCB      0xec,0xeb,0x1a,0xea
00004c  5c5c5c5c          DCB      0x5c,0x5c,0x5c,0x5c
000050  e9e857f1          DCB      0xe9,0xe8,0x57,0xf1
000054  5c5c5c5c          DCB      0x5c,0x5c,0x5c,0x5c
000058  e6e596e4          DCB      0xe6,0xe5,0x96,0xe4
00005c  5c5c5c5c          DCB      0x5c,0x5c,0x5c,0x5c
000060  e3e2e1e0          DCB      0xe3,0xe2,0xe1,0xe0
000064  5c5c5c5c          DCB      0x5c,0x5c,0x5c,0x5c
000068  dfdedddc          DCB      0xdf,0xde,0xdd,0xdc
00006c  5c5c5c5c          DCB      0x5c,0x5c,0x5c,0x5c
000070  dbdad9d8          DCB      0xdb,0xda,0xd9,0xd8
000074  48ed              LDR      r0,|L1.1068|
000076  7800              LDRB     r0,[r0,#0]            ;228  ; page_sw
000078  2808              CMP      r0,#8                 ;228
00007a  d233              BCS      |L1.228|
00007c  e8dff000          TBB      [pc,r0]               ;228
000080  32230412          DCB      0x32,0x23,0x04,0x12
000084  150b322a          DCB      0x15,0x0b,0x32,0x2a
000088  a0e9              ADR      r0,|L1.1072|
00008a  f7fffffe          BL       INPUT_POW
00008e  81ac              STRH     r4,[r5,#0xc]          ;232
000090  f7fffffe          BL       BEEP_Tiggr
000094  e026              B        |L1.228|
000096  a0e6              ADR      r0,|L1.1072|
000098  f7fffffe          BL       INPUT_NUM
00009c  81ac              STRH     r4,[r5,#0xc]          ;239
00009e  f7fffffe          BL       BEEP_Tiggr
0000a2  e01f              B        |L1.228|
0000a4  7808              LDRB     r0,[r1,#0]            ;245  ; para_set2
0000a6  28ff              CMP      r0,#0xff              ;245
0000a8  d006              BEQ      |L1.184|
0000aa  a0e1              ADR      r0,|L1.1072|
0000ac  f7fffffe          BL       INPUT_LOAD
0000b0  81ac              STRH     r4,[r5,#0xc]          ;256
0000b2  f7fffffe          BL       BEEP_Tiggr
0000b6  e015              B        |L1.228|
                  |L1.184|
0000b8  a0dd              ADR      r0,|L1.1072|
0000ba  f7fffffe          BL       INPUT_C
0000be  81ac              STRH     r4,[r5,#0xc]          ;248
0000c0  f7fffffe          BL       BEEP_Tiggr
0000c4  e00e              B        |L1.228|
0000c6  a0da              ADR      r0,|L1.1072|
0000c8  f7fffffe          BL       INPUT_CDC
0000cc  81ac              STRH     r4,[r5,#0xc]          ;263
0000ce  f7fffffe          BL       BEEP_Tiggr
0000d2  e007              B        |L1.228|
0000d4  7810              LDRB     r0,[r2,#0]            ;269  ; admin
0000d6  2801              CMP      r0,#1                 ;269
0000d8  d101              BNE      |L1.222|
0000da  f7fffffe          BL       INPUT_INFO
                  |L1.222|
0000de  81ac              STRH     r4,[r5,#0xc]          ;273
0000e0  f7fffffe          BL       BEEP_Tiggr
                  |L1.228|
0000e4  81ac              STRH     r4,[r5,#0xc]          ;278
0000e6  e8bd5ff0          POP      {r4-r12,lr}           ;279
0000ea  f7ffbffe          B.W      BEEP_Tiggr
0000ee  48cf              LDR      r0,|L1.1068|
0000f0  7800              LDRB     r0,[r0,#0]            ;285  ; page_sw
0000f2  2808              CMP      r0,#8                 ;285
0000f4  d235              BCS      |L1.354|
0000f6  e000              B        |L1.250|
                  |L1.248|
0000f8  e0ba              B        |L1.624|
                  |L1.250|
0000fa  e8dff000          TBB      [pc,r0]               ;285
0000fe  3222              DCB      0x32,0x22
000100  0411140a          DCB      0x04,0x11,0x14,0x0a
000104  3229              DCB      0x32,0x29
000106  a0cb              ADR      r0,|L1.1076|
000108  f7fffffe          BL       INPUT_POW
00010c  81ac              STRH     r4,[r5,#0xc]          ;289
00010e  f7fffffe          BL       BEEP_Tiggr
000112  a0c8              ADR      r0,|L1.1076|
000114  f7fffffe          BL       INPUT_NUM
000118  81ac              STRH     r4,[r5,#0xc]          ;295
00011a  f7fffffe          BL       BEEP_Tiggr
00011e  e020              B        |L1.354|
000120  7808              LDRB     r0,[r1,#0]            ;301  ; para_set2
000122  28ff              CMP      r0,#0xff              ;301
000124  d006              BEQ      |L1.308|
000126  a0c3              ADR      r0,|L1.1076|
000128  f7fffffe          BL       INPUT_LOAD
00012c  81ac              STRH     r4,[r5,#0xc]          ;312
00012e  f7fffffe          BL       BEEP_Tiggr
000132  e016              B        |L1.354|
                  |L1.308|
000134  a0bf              ADR      r0,|L1.1076|
000136  f7fffffe          BL       INPUT_C
00013a  81ac              STRH     r4,[r5,#0xc]          ;304
00013c  f7fffffe          BL       BEEP_Tiggr
000140  e00f              B        |L1.354|
000142  a0bc              ADR      r0,|L1.1076|
000144  f7fffffe          BL       INPUT_CDC
000148  81ac              STRH     r4,[r5,#0xc]          ;319
00014a  f7fffffe          BL       BEEP_Tiggr
00014e  e008              B        |L1.354|
000150  7810              LDRB     r0,[r2,#0]            ;325  ; admin
000152  2801              CMP      r0,#1                 ;325
000154  d102              BNE      |L1.348|
000156  2002              MOVS     r0,#2                 ;327
000158  f7fffffe          BL       INPUT_INFO
                  |L1.348|
00015c  81ac              STRH     r4,[r5,#0xc]          ;329
00015e  f7fffffe          BL       BEEP_Tiggr
                  |L1.354|
000162  81ac              STRH     r4,[r5,#0xc]          ;335
000164  e8bd5ff0          POP      {r4-r12,lr}           ;336
000168  f7ffbffe          B.W      BEEP_Tiggr
00016c  48af              LDR      r0,|L1.1068|
00016e  7800              LDRB     r0,[r0,#0]            ;342  ; page_sw
000170  2808              CMP      r0,#8                 ;342
                  |L1.370|
000172  d27d              BCS      |L1.624|
000174  e8dff000          TBB      [pc,r0]               ;342
000178  7c250412          DCB      0x7c,0x25,0x04,0x12
00017c  150a7c2d          DCB      0x15,0x0a,0x7c,0x2d
000180  a0ad              ADR      r0,|L1.1080|
000182  f7fffffe          BL       INPUT_POW
000186  81ac              STRH     r4,[r5,#0xc]          ;346
000188  f7fffffe          BL       BEEP_Tiggr
00018c  a0aa              ADR      r0,|L1.1080|
00018e  f7fffffe          BL       INPUT_NUM
000192  81ac              STRH     r4,[r5,#0xc]          ;352
000194  e8bd5ff0          POP      {r4-r12,lr}           ;353
000198  f7ffbffe          B.W      BEEP_Tiggr
00019c  7808              LDRB     r0,[r1,#0]            ;358  ; para_set2
00019e  28ff              CMP      r0,#0xff              ;358
0001a0  d007              BEQ      |L1.434|
0001a2  a0a5              ADR      r0,|L1.1080|
0001a4  f7fffffe          BL       INPUT_LOAD
0001a8  81ac              STRH     r4,[r5,#0xc]          ;369
0001aa  e8bd5ff0          POP      {r4-r12,lr}           ;370
0001ae  f7ffbffe          B.W      BEEP_Tiggr
                  |L1.434|
0001b2  a0a1              ADR      r0,|L1.1080|
0001b4  f7fffffe          BL       INPUT_C
0001b8  81ac              STRH     r4,[r5,#0xc]          ;361
0001ba  e8bd5ff0          POP      {r4-r12,lr}           ;362
0001be  f7ffbffe          B.W      BEEP_Tiggr
0001c2  a09d              ADR      r0,|L1.1080|
0001c4  f7fffffe          BL       INPUT_CDC
0001c8  81ac              STRH     r4,[r5,#0xc]          ;376
0001ca  e8bd5ff0          POP      {r4-r12,lr}           ;377
0001ce  f7ffbffe          B.W      BEEP_Tiggr
0001d2  7810              LDRB     r0,[r2,#0]            ;382  ; admin
0001d4  2801              CMP      r0,#1                 ;382
0001d6  d007              BEQ      |L1.488|
0001d8  7828              LDRB     r0,[r5,#0]            ;386  ; pass
0001da  1cc0              ADDS     r0,r0,#3              ;386
0001dc  7028              STRB     r0,[r5,#0]            ;386
                  |L1.478|
0001de  81ac              STRH     r4,[r5,#0xc]          ;388
0001e0  e8bd5ff0          POP      {r4-r12,lr}           ;389
0001e4  f7ffbffe          B.W      BEEP_Tiggr
                  |L1.488|
0001e8  2003              MOVS     r0,#3                 ;384
0001ea  f7fffffe          BL       INPUT_INFO
0001ee  e7f6              B        |L1.478|
0001f0  e17c              B        |L1.1260|
0001f2  e098              B        |L1.806|
0001f4  e3f5              B        |L1.2530|
0001f6  e2ad              B        |L1.1876|
0001f8  e138              B        |L1.1132|
0001fa  e3fd              B        |L1.2552|
0001fc  e22a              B        |L1.1620|
0001fe  e3fc              B        |L1.2554|
000200  e0cf              B        |L1.930|
000202  e3fb              B        |L1.2556|
000204  e1f2              B        |L1.1516|
000206  e3fa              B        |L1.2558|
000208  e04b              B        |L1.674|
00020a  e1ad              B        |L1.1384|
00020c  e3f8              B        |L1.2560|
00020e  e008              B        |L1.546|
000210  e244              B        |L1.1692|
000212  e3f6              B        |L1.2562|
000214  e3c5              B        |L1.2466|
000216  e2d8              B        |L1.1994|
000218  e3f4              B        |L1.2564|
00021a  e30e              B        |L1.2106|
00021c  e25f              B        |L1.1758|
00021e  e21c              B        |L1.1626|
000220  e3f1              B        |L1.2566|
                  |L1.546|
000222  4882              LDR      r0,|L1.1068|
000224  7800              LDRB     r0,[r0,#0]            ;398  ; page_sw
000226  2808              CMP      r0,#8                 ;398
                  |L1.552|
000228  d2a3              BCS      |L1.370|
00022a  e8dff000          TBB      [pc,r0]               ;398
00022e  2127              DCB      0x21,0x27
000230  0412150a          DCB      0x04,0x12,0x15,0x0a
000234  212f              DCB      0x21,0x2f
000236  a081              ADR      r0,|L1.1084|
000238  f7fffffe          BL       INPUT_POW
00023c  81ac              STRH     r4,[r5,#0xc]          ;402
00023e  f7fffffe          BL       BEEP_Tiggr
000242  a07e              ADR      r0,|L1.1084|
000244  f7fffffe          BL       INPUT_NUM
000248  81ac              STRH     r4,[r5,#0xc]          ;408
00024a  e8bd5ff0          POP      {r4-r12,lr}           ;409
00024e  f7ffbffe          B.W      BEEP_Tiggr
000252  7808              LDRB     r0,[r1,#0]            ;414  ; para_set2
000254  28ff              CMP      r0,#0xff              ;414
000256  d007              BEQ      |L1.616|
000258  a078              ADR      r0,|L1.1084|
00025a  f7fffffe          BL       INPUT_LOAD
00025e  81ac              STRH     r4,[r5,#0xc]          ;425
000260  e8bd5ff0          POP      {r4-r12,lr}           ;426
000264  f7ffbffe          B.W      BEEP_Tiggr
                  |L1.616|
000268  a074              ADR      r0,|L1.1084|
00026a  f7fffffe          BL       INPUT_C
00026e  e000              B        |L1.626|
                  |L1.624|
000270  e119              B        |L1.1190|
                  |L1.626|
000272  81ac              STRH     r4,[r5,#0xc]          ;417
000274  e8bd5ff0          POP      {r4-r12,lr}           ;418
000278  f7ffbffe          B.W      BEEP_Tiggr
00027c  a06f              ADR      r0,|L1.1084|
00027e  f7fffffe          BL       INPUT_CDC
000282  81ac              STRH     r4,[r5,#0xc]          ;432
000284  e8bd5ff0          POP      {r4-r12,lr}           ;433
000288  f7ffbffe          B.W      BEEP_Tiggr
00028c  7810              LDRB     r0,[r2,#0]            ;438  ; admin
00028e  2801              CMP      r0,#1                 ;438
000290  d102              BNE      |L1.664|
000292  2004              MOVS     r0,#4                 ;440
000294  f7fffffe          BL       INPUT_INFO
                  |L1.664|
000298  81ac              STRH     r4,[r5,#0xc]          ;442
00029a  e8bd5ff0          POP      {r4-r12,lr}           ;443
00029e  f7ffbffe          B.W      BEEP_Tiggr
                  |L1.674|
0002a2  4862              LDR      r0,|L1.1068|
0002a4  7800              LDRB     r0,[r0,#0]            ;452  ; page_sw
0002a6  2808              CMP      r0,#8                 ;452
                  |L1.680|
0002a8  d2be              BCS      |L1.552|
0002aa  e8dff000          TBB      [pc,r0]               ;452
0002ae  fc25              DCB      0xfc,0x25
0002b0  0412150a          DCB      0x04,0x12,0x15,0x0a
0002b4  fc2d              DCB      0xfc,0x2d
0002b6  a062              ADR      r0,|L1.1088|
0002b8  f7fffffe          BL       INPUT_POW
0002bc  81ac              STRH     r4,[r5,#0xc]          ;456
0002be  f7fffffe          BL       BEEP_Tiggr
0002c2  a05f              ADR      r0,|L1.1088|
0002c4  f7fffffe          BL       INPUT_NUM
0002c8  81ac              STRH     r4,[r5,#0xc]          ;462
0002ca  e8bd5ff0          POP      {r4-r12,lr}           ;463
0002ce  f7ffbffe          B.W      BEEP_Tiggr
0002d2  7808              LDRB     r0,[r1,#0]            ;468  ; para_set2
0002d4  28ff              CMP      r0,#0xff              ;468
0002d6  d007              BEQ      |L1.744|
0002d8  a059              ADR      r0,|L1.1088|
0002da  f7fffffe          BL       INPUT_LOAD
0002de  81ac              STRH     r4,[r5,#0xc]          ;479
0002e0  e8bd5ff0          POP      {r4-r12,lr}           ;480
0002e4  f7ffbffe          B.W      BEEP_Tiggr
                  |L1.744|
0002e8  a055              ADR      r0,|L1.1088|
0002ea  f7fffffe          BL       INPUT_C
0002ee  81ac              STRH     r4,[r5,#0xc]          ;471
0002f0  e8bd5ff0          POP      {r4-r12,lr}           ;472
0002f4  f7ffbffe          B.W      BEEP_Tiggr
0002f8  a051              ADR      r0,|L1.1088|
0002fa  f7fffffe          BL       INPUT_CDC
0002fe  81ac              STRH     r4,[r5,#0xc]          ;486
000300  e8bd5ff0          POP      {r4-r12,lr}           ;487
000304  f7ffbffe          B.W      BEEP_Tiggr
000308  7810              LDRB     r0,[r2,#0]            ;492  ; admin
00030a  2801              CMP      r0,#1                 ;492
00030c  d007              BEQ      |L1.798|
00030e  7828              LDRB     r0,[r5,#0]            ;496  ; pass
000310  1d40              ADDS     r0,r0,#5              ;496
000312  7028              STRB     r0,[r5,#0]            ;496
                  |L1.788|
000314  81ac              STRH     r4,[r5,#0xc]          ;498
000316  e8bd5ff0          POP      {r4-r12,lr}           ;499
00031a  f7ffbffe          B.W      BEEP_Tiggr
                  |L1.798|
00031e  2005              MOVS     r0,#5                 ;494
000320  f7fffffe          BL       INPUT_INFO
000324  e7f6              B        |L1.788|
                  |L1.806|
000326  4841              LDR      r0,|L1.1068|
000328  7800              LDRB     r0,[r0,#0]            ;508  ; page_sw
00032a  2808              CMP      r0,#8                 ;508
                  |L1.812|
00032c  d2bc              BCS      |L1.680|
00032e  e8dff000          TBB      [pc,r0]               ;508
000332  ba25              DCB      0xba,0x25
000334  0412150a          DCB      0x04,0x12,0x15,0x0a
000338  ba2d              DCB      0xba,0x2d
00033a  a042              ADR      r0,|L1.1092|
00033c  f7fffffe          BL       INPUT_POW
000340  81ac              STRH     r4,[r5,#0xc]          ;512
000342  f7fffffe          BL       BEEP_Tiggr
000346  a03f              ADR      r0,|L1.1092|
000348  f7fffffe          BL       INPUT_NUM
00034c  81ac              STRH     r4,[r5,#0xc]          ;518
00034e  e8bd5ff0          POP      {r4-r12,lr}           ;519
000352  f7ffbffe          B.W      BEEP_Tiggr
000356  7808              LDRB     r0,[r1,#0]            ;524  ; para_set2
000358  28ff              CMP      r0,#0xff              ;524
00035a  d007              BEQ      |L1.876|
00035c  a039              ADR      r0,|L1.1092|
00035e  f7fffffe          BL       INPUT_LOAD
000362  81ac              STRH     r4,[r5,#0xc]          ;535
000364  e8bd5ff0          POP      {r4-r12,lr}           ;536
000368  f7ffbffe          B.W      BEEP_Tiggr
                  |L1.876|
00036c  a035              ADR      r0,|L1.1092|
00036e  f7fffffe          BL       INPUT_C
000372  81ac              STRH     r4,[r5,#0xc]          ;527
000374  e8bd5ff0          POP      {r4-r12,lr}           ;528
000378  f7ffbffe          B.W      BEEP_Tiggr
00037c  a031              ADR      r0,|L1.1092|
00037e  f7fffffe          BL       INPUT_CDC
000382  81ac              STRH     r4,[r5,#0xc]          ;542
000384  e8bd5ff0          POP      {r4-r12,lr}           ;543
000388  f7ffbffe          B.W      BEEP_Tiggr
00038c  7810              LDRB     r0,[r2,#0]            ;548  ; admin
00038e  2801              CMP      r0,#1                 ;548
000390  d102              BNE      |L1.920|
000392  2006              MOVS     r0,#6                 ;550
000394  f7fffffe          BL       INPUT_INFO
                  |L1.920|
000398  81ac              STRH     r4,[r5,#0xc]          ;552
00039a  e8bd5ff0          POP      {r4-r12,lr}           ;553
00039e  f7ffbffe          B.W      BEEP_Tiggr
                  |L1.930|
0003a2  4822              LDR      r0,|L1.1068|
0003a4  7800              LDRB     r0,[r0,#0]            ;562  ; page_sw
0003a6  2808              CMP      r0,#8                 ;562
                  |L1.936|
0003a8  d2c0              BCS      |L1.812|
0003aa  e8dff000          TBB      [pc,r0]               ;562
0003ae  7c25              DCB      0x7c,0x25
0003b0  0412150a          DCB      0x04,0x12,0x15,0x0a
0003b4  7c54              DCB      0x7c,0x54
0003b6  a024              ADR      r0,|L1.1096|
0003b8  f7fffffe          BL       INPUT_POW
0003bc  81ac              STRH     r4,[r5,#0xc]          ;566
0003be  f7fffffe          BL       BEEP_Tiggr
0003c2  a021              ADR      r0,|L1.1096|
0003c4  f7fffffe          BL       INPUT_NUM
0003c8  81ac              STRH     r4,[r5,#0xc]          ;572
0003ca  e8bd5ff0          POP      {r4-r12,lr}           ;573
0003ce  f7ffbffe          B.W      BEEP_Tiggr
0003d2  7808              LDRB     r0,[r1,#0]            ;578  ; para_set2
0003d4  28ff              CMP      r0,#0xff              ;578
0003d6  d007              BEQ      |L1.1000|
0003d8  a01b              ADR      r0,|L1.1096|
0003da  f7fffffe          BL       INPUT_LOAD
0003de  81ac              STRH     r4,[r5,#0xc]          ;589
0003e0  e8bd5ff0          POP      {r4-r12,lr}           ;590
0003e4  f7ffbffe          B.W      BEEP_Tiggr
                  |L1.1000|
0003e8  a017              ADR      r0,|L1.1096|
0003ea  f7fffffe          BL       INPUT_C
0003ee  81ac              STRH     r4,[r5,#0xc]          ;581
0003f0  e8bd5ff0          POP      {r4-r12,lr}           ;582
0003f4  f7ffbffe          B.W      BEEP_Tiggr
0003f8  a013              ADR      r0,|L1.1096|
0003fa  f7fffffe          BL       INPUT_CDC
0003fe  e025              B        |L1.1100|
                  |L1.1024|
                          DCD      flagA
                  |L1.1028|
                          DCD      para_set2
                  |L1.1032|
                          DCD      admin
                  |L1.1036|
                          DCD      hWinR
                  |L1.1040|
                          DCD      hWinWind
                  |L1.1044|
                          DCD      hWinG
                  |L1.1048|
                          DCD      load_wind
                  |L1.1052|
                          DCD      hWinsysinfo
                  |L1.1056|
                          DCD      hWincdc
                  |L1.1060|
                          DCD      hWinset
                  |L1.1064|
                          DCD      ||.data||
                  |L1.1068|
                          DCD      page_sw
                  |L1.1072|
000430  3100              DCB      "1",0
000432  00                DCB      0
000433  00                DCB      0
                  |L1.1076|
000434  3200              DCB      "2",0
000436  00                DCB      0
000437  00                DCB      0
                  |L1.1080|
000438  3300              DCB      "3",0
00043a  00                DCB      0
00043b  00                DCB      0
                  |L1.1084|
00043c  3400              DCB      "4",0
00043e  00                DCB      0
00043f  00                DCB      0
                  |L1.1088|
000440  3500              DCB      "5",0
000442  00                DCB      0
000443  00                DCB      0
                  |L1.1092|
000444  3600              DCB      "6",0
000446  00                DCB      0
000447  00                DCB      0
                  |L1.1096|
000448  3700              DCB      "7",0
00044a  00                DCB      0
00044b  00                DCB      0
                  |L1.1100|
00044c  81ac              STRH     r4,[r5,#0xc]          ;596
00044e  e8bd5ff0          POP      {r4-r12,lr}           ;597
000452  f7ffbffe          B.W      BEEP_Tiggr
000456  7810              LDRB     r0,[r2,#0]            ;602  ; admin
000458  2801              CMP      r0,#1                 ;602
00045a  d102              BNE      |L1.1122|
00045c  2007              MOVS     r0,#7                 ;604
00045e  f7fffffe          BL       INPUT_INFO
                  |L1.1122|
000462  81ac              STRH     r4,[r5,#0xc]          ;606
000464  e8bd5ff0          POP      {r4-r12,lr}           ;607
000468  f7ffbffe          B.W      BEEP_Tiggr
                  |L1.1132|
00046c  48fe              LDR      r0,|L1.2152|
00046e  7800              LDRB     r0,[r0,#0]            ;616  ; page_sw
000470  2808              CMP      r0,#8                 ;616
                  |L1.1138|
000472  d299              BCS      |L1.936|
000474  e8dff000          TBB      [pc,r0]               ;616
000478  ef270412          DCB      0xef,0x27,0x04,0x12
00047c  150aef2f          DCB      0x15,0x0a,0xef,0x2f
000480  a0fa              ADR      r0,|L1.2156|
000482  f7fffffe          BL       INPUT_POW
000486  81ac              STRH     r4,[r5,#0xc]          ;620
000488  f7fffffe          BL       BEEP_Tiggr
00048c  a0f7              ADR      r0,|L1.2156|
00048e  f7fffffe          BL       INPUT_NUM
000492  81ac              STRH     r4,[r5,#0xc]          ;626
000494  e8bd5ff0          POP      {r4-r12,lr}           ;627
000498  f7ffbffe          B.W      BEEP_Tiggr
00049c  7808              LDRB     r0,[r1,#0]            ;632  ; para_set2
00049e  28ff              CMP      r0,#0xff              ;632
0004a0  d009              BEQ      |L1.1206|
0004a2  a0f2              ADR      r0,|L1.2156|
0004a4  e000              B        |L1.1192|
                  |L1.1190|
0004a6  e0d6              B        |L1.1622|
                  |L1.1192|
0004a8  f7fffffe          BL       INPUT_LOAD
0004ac  81ac              STRH     r4,[r5,#0xc]          ;643
0004ae  e8bd5ff0          POP      {r4-r12,lr}           ;644
0004b2  f7ffbffe          B.W      BEEP_Tiggr
                  |L1.1206|
0004b6  a0ed              ADR      r0,|L1.2156|
0004b8  f7fffffe          BL       INPUT_C
0004bc  81ac              STRH     r4,[r5,#0xc]          ;635
0004be  e8bd5ff0          POP      {r4-r12,lr}           ;636
0004c2  f7ffbffe          B.W      BEEP_Tiggr
0004c6  a0e9              ADR      r0,|L1.2156|
0004c8  f7fffffe          BL       INPUT_CDC
0004cc  81ac              STRH     r4,[r5,#0xc]          ;650
0004ce  e8bd5ff0          POP      {r4-r12,lr}           ;651
0004d2  f7ffbffe          B.W      BEEP_Tiggr
0004d6  7810              LDRB     r0,[r2,#0]            ;656  ; admin
0004d8  2801              CMP      r0,#1                 ;656
0004da  d102              BNE      |L1.1250|
0004dc  2008              MOVS     r0,#8                 ;658
0004de  f7fffffe          BL       INPUT_INFO
                  |L1.1250|
0004e2  81ac              STRH     r4,[r5,#0xc]          ;660
0004e4  e8bd5ff0          POP      {r4-r12,lr}           ;661
0004e8  f7ffbffe          B.W      BEEP_Tiggr
                  |L1.1260|
0004ec  48de              LDR      r0,|L1.2152|
0004ee  7800              LDRB     r0,[r0,#0]            ;670  ; page_sw
0004f0  2808              CMP      r0,#8                 ;670
0004f2  d2be              BCS      |L1.1138|
0004f4  e8dff000          TBB      [pc,r0]               ;670
0004f8  af250412          DCB      0xaf,0x25,0x04,0x12
0004fc  150aaf2d          DCB      0x15,0x0a,0xaf,0x2d
000500  a0db              ADR      r0,|L1.2160|
000502  f7fffffe          BL       INPUT_POW
000506  81ac              STRH     r4,[r5,#0xc]          ;674
000508  f7fffffe          BL       BEEP_Tiggr
00050c  a0d8              ADR      r0,|L1.2160|
00050e  f7fffffe          BL       INPUT_NUM
000512  81ac              STRH     r4,[r5,#0xc]          ;680
000514  e8bd5ff0          POP      {r4-r12,lr}           ;681
000518  f7ffbffe          B.W      BEEP_Tiggr
00051c  7808              LDRB     r0,[r1,#0]            ;686  ; para_set2
00051e  28ff              CMP      r0,#0xff              ;686
000520  d007              BEQ      |L1.1330|
000522  a0d3              ADR      r0,|L1.2160|
000524  f7fffffe          BL       INPUT_LOAD
000528  81ac              STRH     r4,[r5,#0xc]          ;697
00052a  e8bd5ff0          POP      {r4-r12,lr}           ;698
00052e  f7ffbffe          B.W      BEEP_Tiggr
                  |L1.1330|
000532  a0cf              ADR      r0,|L1.2160|
000534  f7fffffe          BL       INPUT_C
000538  81ac              STRH     r4,[r5,#0xc]          ;689
00053a  e8bd5ff0          POP      {r4-r12,lr}           ;690
00053e  f7ffbffe          B.W      BEEP_Tiggr
000542  a0cb              ADR      r0,|L1.2160|
000544  f7fffffe          BL       INPUT_CDC
000548  81ac              STRH     r4,[r5,#0xc]          ;704
00054a  e8bd5ff0          POP      {r4-r12,lr}           ;705
00054e  f7ffbffe          B.W      BEEP_Tiggr
000552  7810              LDRB     r0,[r2,#0]            ;710  ; admin
000554  2801              CMP      r0,#1                 ;710
000556  d102              BNE      |L1.1374|
000558  2009              MOVS     r0,#9                 ;712
00055a  f7fffffe          BL       INPUT_INFO
                  |L1.1374|
00055e  81ac              STRH     r4,[r5,#0xc]          ;714
000560  e8bd5ff0          POP      {r4-r12,lr}           ;715
000564  f7ffbffe          B.W      BEEP_Tiggr
                  |L1.1384|
000568  48bf              LDR      r0,|L1.2152|
00056a  7800              LDRB     r0,[r0,#0]            ;724  ; page_sw
00056c  2808              CMP      r0,#8                 ;724
00056e  d272              BCS      |L1.1622|
000570  e8dff000          TBB      [pc,r0]               ;724
000574  71250412          DCB      0x71,0x25,0x04,0x12
000578  150a712d          DCB      0x15,0x0a,0x71,0x2d
00057c  a0bd              ADR      r0,|L1.2164|
00057e  f7fffffe          BL       INPUT_POW
000582  81ac              STRH     r4,[r5,#0xc]          ;728
000584  f7fffffe          BL       BEEP_Tiggr
000588  a0ba              ADR      r0,|L1.2164|
00058a  f7fffffe          BL       INPUT_NUM
00058e  81ac              STRH     r4,[r5,#0xc]          ;734
000590  e8bd5ff0          POP      {r4-r12,lr}           ;735
000594  f7ffbffe          B.W      BEEP_Tiggr
000598  7808              LDRB     r0,[r1,#0]            ;740  ; para_set2
00059a  28ff              CMP      r0,#0xff              ;740
00059c  d007              BEQ      |L1.1454|
00059e  a0b5              ADR      r0,|L1.2164|
0005a0  f7fffffe          BL       INPUT_LOAD
0005a4  81ac              STRH     r4,[r5,#0xc]          ;751
0005a6  e8bd5ff0          POP      {r4-r12,lr}           ;752
0005aa  f7ffbffe          B.W      BEEP_Tiggr
                  |L1.1454|
0005ae  a0b1              ADR      r0,|L1.2164|
0005b0  f7fffffe          BL       INPUT_C
0005b4  81ac              STRH     r4,[r5,#0xc]          ;743
0005b6  e8bd5ff0          POP      {r4-r12,lr}           ;744
0005ba  f7ffbffe          B.W      BEEP_Tiggr
0005be  a0ad              ADR      r0,|L1.2164|
0005c0  f7fffffe          BL       INPUT_CDC
0005c4  81ac              STRH     r4,[r5,#0xc]          ;758
0005c6  e8bd5ff0          POP      {r4-r12,lr}           ;759
0005ca  f7ffbffe          B.W      BEEP_Tiggr
0005ce  7810              LDRB     r0,[r2,#0]            ;764  ; admin
0005d0  2801              CMP      r0,#1                 ;764
0005d2  d007              BEQ      |L1.1508|
0005d4  7828              LDRB     r0,[r5,#0]            ;768  ; pass
0005d6  1c40              ADDS     r0,r0,#1              ;768
0005d8  7028              STRB     r0,[r5,#0]            ;768
                  |L1.1498|
0005da  81ac              STRH     r4,[r5,#0xc]          ;770
0005dc  e8bd5ff0          POP      {r4-r12,lr}           ;771
0005e0  f7ffbffe          B.W      BEEP_Tiggr
                  |L1.1508|
0005e4  2000              MOVS     r0,#0                 ;766
0005e6  f7fffffe          BL       INPUT_INFO
0005ea  e7f6              B        |L1.1498|
                  |L1.1516|
0005ec  489e              LDR      r0,|L1.2152|
0005ee  7800              LDRB     r0,[r0,#0]            ;780  ; page_sw
0005f0  2806              CMP      r0,#6                 ;780
0005f2  d230              BCS      |L1.1622|
0005f4  e8dff000          TBB      [pc,r0]               ;780
0005f8  2f1e031b          DCB      0x2f,0x1e,0x03,0x1b
0005fc  130b              DCB      0x13,0x0b
0005fe  a09e              ADR      r0,|L1.2168|
000600  f7fffffe          BL       INPUT_POW
000604  81ac              STRH     r4,[r5,#0xc]          ;784
000606  e8bd5ff0          POP      {r4-r12,lr}           ;785
00060a  f7ffbffe          B.W      BEEP_Tiggr
00060e  a09a              ADR      r0,|L1.2168|
000610  f7fffffe          BL       INPUT_NUM
000614  81ac              STRH     r4,[r5,#0xc]          ;791
000616  e8bd5ff0          POP      {r4-r12,lr}           ;792
00061a  f7ffbffe          B.W      BEEP_Tiggr
00061e  a096              ADR      r0,|L1.2168|
000620  f7fffffe          BL       INPUT_LOAD
000624  81ac              STRH     r4,[r5,#0xc]          ;798
000626  e8bd5ff0          POP      {r4-r12,lr}           ;799
00062a  f7ffbffe          B.W      BEEP_Tiggr
00062e  7808              LDRB     r0,[r1,#0]            ;804  ; para_set2
000630  28ff              CMP      r0,#0xff              ;804
000632  d007              BEQ      |L1.1604|
000634  a090              ADR      r0,|L1.2168|
000636  f7fffffe          BL       INPUT_CDC
00063a  81ac              STRH     r4,[r5,#0xc]          ;815
00063c  e8bd5ff0          POP      {r4-r12,lr}           ;816
000640  f7ffbffe          B.W      BEEP_Tiggr
                  |L1.1604|
000644  a08c              ADR      r0,|L1.2168|
000646  f7fffffe          BL       INPUT_C
00064a  81ac              STRH     r4,[r5,#0xc]          ;807
00064c  e8bd5ff0          POP      {r4-r12,lr}           ;808
000650  f7ffbffe          B.W      BEEP_Tiggr
                  |L1.1620|
000654  81ac              STRH     r4,[r5,#0xc]          ;828
                  |L1.1622|
;;;1069                           CreateR();
;;;1070                           KeyCounter = 0;
;;;1071                           BEEP_Tiggr();//瑙﹀彂铚傞福鍣?
;;;1072                           break;
;;;1073                       }
;;;1074                       case face_load:
;;;1075                       {
;;;1076                           WM_DeleteWindow(hWinR);
;;;1077                           WM_DeleteWindow(hWinWind);
;;;1078                           WM_DeleteWindow(hWinG);
;;;1079                           WM_DeleteWindow(load_wind);
;;;1080                           WM_DeleteWindow(hWinsysinfo);
;;;1081                           WM_DeleteWindow(hWincdc);
;;;1082                           WM_DeleteWindow(hWinset);
;;;1083                           CreateWindow2();
;;;1084                           KeyCounter = 0;
;;;1085                           BEEP_Tiggr();//瑙﹀彂铚傞福鍣?
;;;1086                           break;
;;;1087                       }
;;;1088                       case face_menu:
;;;1089                       {
;;;1090                           WM_DeleteWindow(hWinR);
;;;1091                           WM_DeleteWindow(hWinWind);
;;;1092                           WM_DeleteWindow(hWinG);
;;;1093                           WM_DeleteWindow(load_wind);
;;;1094                           WM_DeleteWindow(hWinsysinfo);
;;;1095                           WM_DeleteWindow(hWincdc);
;;;1096                           WM_DeleteWindow(hWinset); 
;;;1097                           CreateWindow();
;;;1098                           KeyCounter = 0;
;;;1099                           BEEP_Tiggr();//瑙﹀彂铚傞福鍣?
;;;1100                           break;
;;;1101                       }
;;;1102                       case face_graph:
;;;1103                       {
;;;1104                           WM_DeleteWindow(hWinR);
;;;1105                           WM_DeleteWindow(hWinWind);
;;;1106                           WM_DeleteWindow(hWinG);
;;;1107                           WM_DeleteWindow(load_wind);
;;;1108                           WM_DeleteWindow(hWinsysinfo);
;;;1109                           WM_DeleteWindow(hWincdc);
;;;1110                           WM_DeleteWindow(hWinset); 
;;;1111                           CreateG();
;;;1112                           KeyCounter = 0;
;;;1113                           BEEP_Tiggr();//瑙﹀彂铚傞福鍣?
;;;1114                           break;
;;;1115                       }
;;;1116                       case face_cdc:
;;;1117                       {
;;;1118                           WM_DeleteWindow(hWinR);
;;;1119                           WM_DeleteWindow(hWinWind);
;;;1120                           WM_DeleteWindow(hWinG);
;;;1121                           WM_DeleteWindow(load_wind);
;;;1122                           WM_DeleteWindow(hWinsysinfo);
;;;1123                           WM_DeleteWindow(hWincdc);
;;;1124                           WM_DeleteWindow(hWinset);
;;;1125                           CreateCDC();
;;;1126                           KeyCounter = 0;
;;;1127                           BEEP_Tiggr();//瑙﹀彂铚傞福鍣?
;;;1128                           break;
;;;1129                       }
;;;1130                   }
;;;1131   			}
;;;1132   			break;
;;;1133   			case PUSH_SETUP :
;;;1134   			{
;;;1135   // 				KeyCounter = 0;
;;;1136   // 				BEEP_Tiggr();//
;;;1137   // 				t_MODE++;
;;;1138   // 				if(t_MODE>1)
;;;1139   // 				{
;;;1140   // 					t_MODE=0;
;;;1141   // 				}
;;;1142   // 				if(t_MODE==0)
;;;1143   // 				{
;;;1144   // 					flag_Load_CC=1;//CC模式
;;;1145   // 					GPIO_ResetBits(GPIOC,GPIO_Pin_12);//CC
;;;1146   // 					
;;;1147   // 				}
;;;1148   // 				else if(t_MODE==1)
;;;1149   // 				{
;;;1150   // 					flag_Load_CC=0;//CV模式
;;;1151   // 					GPIO_SetBits(GPIOC,GPIO_Pin_12);//CV
;;;1152   // 				}
;;;1153                   WM_DeleteWindow(hWinR);
;;;1154                   WM_DeleteWindow(hWinWind);
;;;1155                   WM_DeleteWindow(hWinG);
;;;1156                   WM_DeleteWindow(load_wind);
;;;1157                   WM_DeleteWindow(hWinsysinfo);
;;;1158                   WM_DeleteWindow(hWincdc);
;;;1159                   WM_DeleteWindow(hWinset); 
;;;1160                   CreateSET();
;;;1161                   KeyCounter = 0;
;;;1162                   BEEP_Tiggr();//瑙﹀彂铚傞福鍣
;;;1163   			}
;;;1164   			break;
;;;1165   			case KEY_TRIG://电子负载/电源ON/OFF
;;;1166   			{
;;;1167                   switch(page_sw)
;;;1168                   {
;;;1169                       case face_r:
;;;1170                       {
;;;1171   //                         if(para_set2 == set_2_on)
;;;1172   //                         {
;;;1173   // //                            static vu8 LOAD_t;
;;;1174   //                             Mode_SW_CONT(0x02);
;;;1175   //                             LOAD_t++;
;;;1176   //                             if(LOAD_t>1)
;;;1177   //                             {
;;;1178   //                                 LOAD_t=0;
;;;1179   //                             }
;;;1180   //                             if(LOAD_t==0)
;;;1181   //                             {
;;;1182   //                                 oct_sw = oct_off;
;;;1183   //                                 set_add_c = 0;
;;;1184   //                                 Flag_Swtich_ON=0;
;;;1185   //                                 GPIO_SetBits(GPIOC,GPIO_Pin_1);//OFF
;;;1186   //                                  
;;;1187   //                             }
;;;1188   //                             else if(LOAD_t==1)
;;;1189   //                             {
;;;1190   //                                 oct_sw = oct_on;
;;;1191   //                                 Flag_Swtich_ON=1;
;;;1192   //                                 GPIO_ResetBits(GPIOC,GPIO_Pin_1);//On
;;;1193   //                             }
;;;1194   //                          }
;;;1195                            if(r_test == 0 && DISS_Voltage > gate_v)
;;;1196                            {
;;;1197                               r_test = 1;
;;;1198                            }else{
;;;1199                                r_test = 0;
;;;1200                            }
;;;1201                            KeyCounter = 0;
;;;1202                            BEEP_Tiggr();//触发蜂鸣器
;;;1203                            break;
;;;1204                       }
;;;1205                       case face_load:
;;;1206                       {
;;;1207                           t_onoff++;
;;;1208                           if(t_onoff>1)
;;;1209                           {
;;;1210                               t_onoff=0;
;;;1211                           }
;;;1212                           if(t_onoff==0)
;;;1213                           {
;;;1214                               Flag_Swtich_ON=0;
;;;1215                               GPIO_SetBits(GPIOA,GPIO_Pin_15);//电子负载OFF
;;;1216                               mode_sw = 0;
;;;1217                               load_sw = load_off;
;;;1218                           }
;;;1219                           else if(t_onoff==1)
;;;1220                           {
;;;1221                               Flag_Swtich_ON=1;
;;;1222                               GPIO_ResetBits(GPIOA,GPIO_Pin_15);//电子负载On
;;;1223                               mode_sw = mode_load;
;;;1224                               load_sw = load_on;
;;;1225                           }
;;;1226                           KeyCounter = 0;
;;;1227                           BEEP_Tiggr();//
;;;1228                       }break;
;;;1229                       case face_menu:
;;;1230                       {
;;;1231                           static vu8 POW_t;
;;;1232                           POW_t++;
;;;1233                           if(POW_t>1)
;;;1234                           {
;;;1235                               POW_t=0;
;;;1236                           }
;;;1237                           if(POW_t==0)
;;;1238                           {
;;;1239                               GPIO_ResetBits(GPIOC,GPIO_Pin_1);//关闭电源输出
;;;1240                               USART_SendData(USART3,0);//关闭电源
;;;1241                               mode_sw = 0;
;;;1242                               pow_sw = pow_off;
;;;1243                           }
;;;1244                           else if(POW_t==1)
;;;1245                           {
;;;1246                               USART_SendData(USART3,1);//连接电源
;;;1247                               GPIO_SetBits(GPIOC,GPIO_Pin_1);//打开电源输出
;;;1248                               mode_sw = mode_pow;
;;;1249                               pow_sw = pow_on;
;;;1250                           }
;;;1251                           KeyCounter = 0;
;;;1252                           BEEP_Tiggr();//
;;;1253                       }break;
;;;1254                        case face_cdc:
;;;1255                       {
;;;1256                           if(cdc_sw == cdc_off)
;;;1257                           {
;;;1258                              SET_Voltage = opv1;
;;;1259                              SET_Current = opc1;
;;;1260                              cutoff_flag = 0;
;;;1261   //                           Mode_SW_CONT(0x03);
;;;1262                              
;;;1263                              charge_step = 1;
;;;1264                               USART_SendData(USART3,1);//连接电源
;;;1265                              GPIO_SetBits(GPIOC,GPIO_Pin_1);//打开电源输出
;;;1266                              mode_sw = mode_pow;
;;;1267                              cdc_sw = cdc_on;
;;;1268                           }else{
;;;1269                              
;;;1270                              GPIO_ResetBits(GPIOC,GPIO_Pin_1);//关闭电源输出
;;;1271                              USART_SendData(USART3,0);//关闭电源
;;;1272                              cdc_sw = cdc_off;
;;;1273                              paused = 0;
;;;1274                              mode_sw = 0;
;;;1275                           }
;;;1276                           KeyCounter = 0;
;;;1277                           BEEP_Tiggr();//瑙﹀彂铚傞福鍣?
;;;1278                          
;;;1279                       }break;
;;;1280                   }
;;;1281   				
;;;1282   			}
;;;1283   			break;
;;;1284   			case KEY_Reset://电阻高低档位切换
;;;1285   			{
;;;1286                   static vu8 at = 0;
;;;1287                   switch(page_sw)
;;;1288                   {
;;;1289                       case face_r:
;;;1290                       {
;;;1291                           if(at == 0)
;;;1292                           {
;;;1293                               USART_SendData(USART3,0);//关闭电源
;;;1294                               GPIO_ResetBits(GPIOB,GPIO_Pin_13);//R_RALY低档位                           
;;;1295                               at++;
;;;1296                               r_raly=0;
;;;1297                               manual = 1;//手动换档
;;;1298                           }else if(at == 1){
;;;1299                               USART_SendData(USART3,0);//关闭电源
;;;1300                               GPIO_SetBits(GPIOB,GPIO_Pin_13);//R_RALY高档位
;;;1301                               r_raly=1;
;;;1302                               at++;
;;;1303                               manual = 1;//手动换档
;;;1304                           }else if(at == 2){
;;;1305                               at = 0;
;;;1306                               manual =0;
;;;1307                           }
;;;1308                       }
;;;1309                   }
;;;1310                   KeyCounter = 0;
;;;1311   				BEEP_Tiggr();//
;;;1312               }
;;;1313   			break;
;;;1314   			case KEY_Powe :
;;;1315   			{
;;;1316   				
;;;1317   				KeyCounter = 0;
;;;1318   				BEEP_Tiggr();//
;;;1319   			}
;;;1320   			break;
;;;1321   			case KEY_Face1 :
;;;1322   			{
;;;1323   				WM_DeleteWindow(hWinR);
;;;1324                   WM_DeleteWindow(hWinWind);
;;;1325                   WM_DeleteWindow(hWinG);
;;;1326                   WM_DeleteWindow(load_wind);
;;;1327                   WM_DeleteWindow(hWinsysinfo);
;;;1328                   WM_DeleteWindow(hWincdc);
;;;1329                   WM_DeleteWindow(hWinset);
;;;1330                   GPIO_SetBits(GPIOA,GPIO_Pin_15);//电子负载OFF
;;;1331                   GPIO_ResetBits(GPIOC,GPIO_Pin_1);//关闭电源输出
;;;1332                   CreateR();
;;;1333   				KeyCounter = 0;
;;;1334   				BEEP_Tiggr();//
;;;1335   			}
;;;1336   			break;
;;;1337   			case KEY_Face2 :
;;;1338   			{
;;;1339   				WM_DeleteWindow(hWinR);
;;;1340                   WM_DeleteWindow(hWinWind);
;;;1341                   WM_DeleteWindow(hWinG);
;;;1342                   WM_DeleteWindow(load_wind);
;;;1343                   WM_DeleteWindow(hWinsysinfo);
;;;1344                   WM_DeleteWindow(hWincdc);
;;;1345                   WM_DeleteWindow(hWinset);
;;;1346   				CreateWindow2();
;;;1347                   t_onoff = 0;
;;;1348                   GPIO_ResetBits(GPIOC,GPIO_Pin_1);//关闭电源输出
;;;1349   				KeyCounter = 0;
;;;1350   				BEEP_Tiggr();//
;;;1351   			}
;;;1352   			break;
;;;1353   			case KEY_Face3 :
;;;1354   			{
;;;1355   				WM_DeleteWindow(hWinR);
;;;1356                   WM_DeleteWindow(hWinWind);
;;;1357                   WM_DeleteWindow(hWinG);
;;;1358                   WM_DeleteWindow(load_wind);
;;;1359                   WM_DeleteWindow(hWinsysinfo);
;;;1360                   WM_DeleteWindow(hWincdc);
;;;1361                   WM_DeleteWindow(hWinset);
;;;1362   				CreateWindow();
;;;1363                   GPIO_SetBits(GPIOA,GPIO_Pin_15);//电子负载OFF
;;;1364   				KeyCounter = 0;
;;;1365   				BEEP_Tiggr();//
;;;1366   			}
;;;1367   			break;
;;;1368   			case KEY_Face4 :
;;;1369   			{
;;;1370                   WM_DeleteWindow(hWinR);
;;;1371                   WM_DeleteWindow(hWinWind);
;;;1372                   WM_DeleteWindow(hWinG);
;;;1373                   WM_DeleteWindow(load_wind);
;;;1374                   WM_DeleteWindow(hWinsysinfo);
;;;1375                   WM_DeleteWindow(hWincdc);
;;;1376                   WM_DeleteWindow(hWinset);
;;;1377                   CreateCDC(); 
;;;1378   				KeyCounter = 0;
;;;1379   				BEEP_Tiggr();//
;;;1380   			}
;;;1381   			break;
;;;1382   			case KEY_Face5 :
;;;1383   			{
;;;1384                   WM_DeleteWindow(hWinR);
;;;1385                   WM_DeleteWindow(hWinWind);
;;;1386                   WM_DeleteWindow(hWinG);
;;;1387                   WM_DeleteWindow(load_wind);
;;;1388                   WM_DeleteWindow(hWinsysinfo);
;;;1389                   WM_DeleteWindow(hWincdc);
;;;1390                   WM_DeleteWindow(hWinset);
;;;1391                   CreateG();
;;;1392   				KeyCounter = 0;
;;;1393   				BEEP_Tiggr();//
;;;1394   			}
;;;1395   			break;
;;;1396               case KEY_BIAS :
;;;1397   			{
;;;1398   				WM_DeleteWindow(hWinR);
;;;1399                   WM_DeleteWindow(hWinWind);
;;;1400                   WM_DeleteWindow(hWinG);
;;;1401                   WM_DeleteWindow(load_wind);
;;;1402                   WM_DeleteWindow(hWinsysinfo);
;;;1403                   WM_DeleteWindow(hWincdc);
;;;1404                   WM_DeleteWindow(hWinset);
;;;1405                   Createsysinfo();
;;;1406                   KeyCounter = 0;
;;;1407                   BEEP_Tiggr();//瑙﹀彂铚傞福鍣?
;;;1408   			}
;;;1409   			break;
;;;1410   
;;;1411                       
;;;1412               
;;;1413   			default:
;;;1414   			break;
;;;1415   		}	
;;;1416   	}
;;;1417   }
000656  e8bd9ff0          POP      {r4-r12,pc}
                  |L1.1626|
00065a  4883              LDR      r0,|L1.2152|
00065c  7800              LDRB     r0,[r0,#0]            ;835  ; page_sw
00065e  2801              CMP      r0,#1                 ;835
000660  d015              BEQ      |L1.1678|
000662  2805              CMP      r0,#5                 ;835
000664  d005              BEQ      |L1.1650|
000666  2807              CMP      r0,#7                 ;835
000668  d1f5              BNE      |L1.1622|
00066a  7810              LDRB     r0,[r2,#0]            ;845  ; admin
00066c  2801              CMP      r0,#1                 ;845
00066e  d007              BEQ      |L1.1664|
000670  e008              B        |L1.1668|
                  |L1.1650|
000672  f7fffffe          BL       SET_OP_LEFT
000676  81ac              STRH     r4,[r5,#0xc]          ;839
000678  e8bd5ff0          POP      {r4-r12,lr}           ;840
00067c  f7ffbffe          B.W      BEEP_Tiggr
                  |L1.1664|
000680  f7fffffe          BL       SYS_INFO_LEFT
                  |L1.1668|
000684  81ac              STRH     r4,[r5,#0xc]          ;849
000686  e8bd5ff0          POP      {r4-r12,lr}           ;850
00068a  f7ffbffe          B.W      BEEP_Tiggr
                  |L1.1678|
00068e  f7fffffe          BL       CDC_OP_LEFT
000692  81ac              STRH     r4,[r5,#0xc]          ;856
000694  e8bd5ff0          POP      {r4-r12,lr}           ;857
000698  f7ffbffe          B.W      BEEP_Tiggr
                  |L1.1692|
00069c  4872              LDR      r0,|L1.2152|
00069e  7800              LDRB     r0,[r0,#0]            ;865  ; page_sw
0006a0  2801              CMP      r0,#1                 ;865
0006a2  d015              BEQ      |L1.1744|
0006a4  2805              CMP      r0,#5                 ;865
0006a6  d005              BEQ      |L1.1716|
0006a8  2807              CMP      r0,#7                 ;865
0006aa  d1d4              BNE      |L1.1622|
0006ac  7810              LDRB     r0,[r2,#0]            ;875  ; admin
0006ae  2801              CMP      r0,#1                 ;875
0006b0  d007              BEQ      |L1.1730|
0006b2  e008              B        |L1.1734|
                  |L1.1716|
0006b4  f7fffffe          BL       SET_OP_RIGHT
0006b8  81ac              STRH     r4,[r5,#0xc]          ;869
0006ba  e8bd5ff0          POP      {r4-r12,lr}           ;870
0006be  f7ffbffe          B.W      BEEP_Tiggr
                  |L1.1730|
0006c2  f7fffffe          BL       SYS_INFO_RIGHT
                  |L1.1734|
0006c6  81ac              STRH     r4,[r5,#0xc]          ;879
0006c8  e8bd5ff0          POP      {r4-r12,lr}           ;880
0006cc  f7ffbffe          B.W      BEEP_Tiggr
                  |L1.1744|
0006d0  f7fffffe          BL       CDC_OP_RIGHT
0006d4  81ac              STRH     r4,[r5,#0xc]          ;886
0006d6  e8bd5ff0          POP      {r4-r12,lr}           ;887
0006da  f7ffbffe          B.W      BEEP_Tiggr
                  |L1.1758|
0006de  4862              LDR      r0,|L1.2152|
0006e0  7800              LDRB     r0,[r0,#0]            ;895  ; page_sw
0006e2  2808              CMP      r0,#8                 ;895
0006e4  d2b7              BCS      |L1.1622|
0006e6  e8dff000          TBB      [pc,r0]               ;895
0006ea  041d              DCB      0x04,0x1d
0006ec  051a0c13          DCB      0x05,0x1a,0x0c,0x13
0006f0  042b              DCB      0x04,0x2b
                  |L1.1778|
0006f2  e7b0              B        |L1.1622|
0006f4  81ac              STRH     r4,[r5,#0xc]          ;898
0006f6  f7fffffe          BL       BEEP_Tiggr
0006fa  e8bd5ff0          POP      {r4-r12,lr}           ;900
0006fe  f7ffbffe          B.W      MENU_OP_UP
000702  81ac              STRH     r4,[r5,#0xc]          ;905
000704  f7fffffe          BL       BEEP_Tiggr
000708  e8bd5ff0          POP      {r4-r12,lr}           ;907
00070c  f7ffbffe          B.W      LOAD_OP_UP
000710  f7fffffe          BL       SET_OP_UP
000714  81ac              STRH     r4,[r5,#0xc]          ;913
000716  e8bd5ff0          POP      {r4-r12,lr}           ;914
00071a  f7ffbffe          B.W      BEEP_Tiggr
00071e  7808              LDRB     r0,[r1,#0]            ;919  ; para_set2
000720  28ff              CMP      r0,#0xff              ;919
000722  d006              BEQ      |L1.1842|
000724  f7fffffe          BL       CDC_OP_UP
000728  81ac              STRH     r4,[r5,#0xc]          ;931
00072a  e8bd5ff0          POP      {r4-r12,lr}           ;932
00072e  f7ffbffe          B.W      BEEP_Tiggr
                  |L1.1842|
000732  f7fffffe          BL       OC_OP_UP
000736  81ac              STRH     r4,[r5,#0xc]          ;922
000738  e8bd5ff0          POP      {r4-r12,lr}           ;923
00073c  f7ffbffe          B.W      BEEP_Tiggr
000740  7810              LDRB     r0,[r2,#0]            ;937  ; admin
000742  2801              CMP      r0,#1                 ;937
000744  d101              BNE      |L1.1866|
000746  f7fffffe          BL       SYS_INFO_UP
                  |L1.1866|
00074a  81ac              STRH     r4,[r5,#0xc]          ;941
00074c  e8bd5ff0          POP      {r4-r12,lr}           ;942
000750  f7ffbffe          B.W      BEEP_Tiggr
                  |L1.1876|
000754  4844              LDR      r0,|L1.2152|
000756  7800              LDRB     r0,[r0,#0]            ;951  ; page_sw
000758  2808              CMP      r0,#8                 ;951
00075a  d2ca              BCS      |L1.1778|
00075c  e8dff000          TBB      [pc,r0]               ;951
000760  041d051a          DCB      0x04,0x1d,0x05,0x1a
000764  0c13042b          DCB      0x0c,0x13,0x04,0x2b
                  |L1.1896|
000768  e775              B        |L1.1622|
00076a  81ac              STRH     r4,[r5,#0xc]          ;954
00076c  f7fffffe          BL       BEEP_Tiggr
000770  e8bd5ff0          POP      {r4-r12,lr}           ;956
000774  f7ffbffe          B.W      MENU_OP_DOWN
000778  81ac              STRH     r4,[r5,#0xc]          ;961
00077a  f7fffffe          BL       BEEP_Tiggr
00077e  e8bd5ff0          POP      {r4-r12,lr}           ;963
000782  f7ffbffe          B.W      LOAD_OP_DOWN
000786  f7fffffe          BL       SET_OP_DOWN
00078a  81ac              STRH     r4,[r5,#0xc]          ;969
00078c  e8bd5ff0          POP      {r4-r12,lr}           ;970
000790  f7ffbffe          B.W      BEEP_Tiggr
000794  7808              LDRB     r0,[r1,#0]            ;975  ; para_set2
000796  28ff              CMP      r0,#0xff              ;975
000798  d006              BEQ      |L1.1960|
00079a  f7fffffe          BL       CDC_OP_DOWN
00079e  81ac              STRH     r4,[r5,#0xc]          ;986
0007a0  e8bd5ff0          POP      {r4-r12,lr}           ;987
0007a4  f7ffbffe          B.W      BEEP_Tiggr
                  |L1.1960|
0007a8  f7fffffe          BL       OC_OP_DOWN
0007ac  81ac              STRH     r4,[r5,#0xc]          ;978
0007ae  e8bd5ff0          POP      {r4-r12,lr}           ;979
0007b2  f7ffbffe          B.W      BEEP_Tiggr
0007b6  7810              LDRB     r0,[r2,#0]            ;992  ; admin
0007b8  2801              CMP      r0,#1                 ;992
0007ba  d101              BNE      |L1.1984|
0007bc  f7fffffe          BL       SYS_INFO_DOWN
                  |L1.1984|
0007c0  81ac              STRH     r4,[r5,#0xc]          ;996
0007c2  e8bd5ff0          POP      {r4-r12,lr}           ;997
0007c6  f7ffbffe          B.W      BEEP_Tiggr
                  |L1.1994|
0007ca  4827              LDR      r0,|L1.2152|
0007cc  7800              LDRB     r0,[r0,#0]            ;1007  ; page_sw
0007ce  2808              CMP      r0,#8                 ;1007
0007d0  d28f              BCS      |L1.1778|
0007d2  e8dff000          TBB      [pc,r0]               ;1007
0007d6  0424              DCB      0x04,0x24
0007d8  0513160c          DCB      0x05,0x13,0x16,0x0c
0007dc  042b              DCB      0x04,0x2b
0007de  e73a              B        |L1.1622|
0007e0  f7fffffe          BL       MENU_SET
0007e4  81ac              STRH     r4,[r5,#0xc]          ;1011
0007e6  e8bd5ff0          POP      {r4-r12,lr}           ;1012
0007ea  f7ffbffe          B.W      BEEP_Tiggr
0007ee  f7fffffe          BL       PARA_SET
0007f2  81ac              STRH     r4,[r5,#0xc]          ;1018
0007f4  e8bd5ff0          POP      {r4-r12,lr}           ;1019
0007f8  f7ffbffe          B.W      BEEP_Tiggr
0007fc  7808              LDRB     r0,[r1,#0]            ;1024  ; para_set2
0007fe  28ff              CMP      r0,#0xff              ;1024
000800  d006              BEQ      |L1.2064|
000802  f7fffffe          BL       LOAD_SET
000806  81ac              STRH     r4,[r5,#0xc]          ;1035
000808  e8bd5ff0          POP      {r4-r12,lr}           ;1036
00080c  f7ffbffe          B.W      BEEP_Tiggr
                  |L1.2064|
000810  f7fffffe          BL       OC_SET
000814  81ac              STRH     r4,[r5,#0xc]          ;1027
000816  e8bd5ff0          POP      {r4-r12,lr}           ;1028
00081a  f7ffbffe          B.W      BEEP_Tiggr
00081e  f7fffffe          BL       CDC_SET
000822  81ac              STRH     r4,[r5,#0xc]          ;1042
000824  e8bd5ff0          POP      {r4-r12,lr}           ;1043
000828  f7ffbffe          B.W      BEEP_Tiggr
00082c  f7fffffe          BL       CFM_PASS
000830  81ac              STRH     r4,[r5,#0xc]          ;1049
000832  e8bd5ff0          POP      {r4-r12,lr}           ;1050
000836  f7ffbffe          B.W      BEEP_Tiggr
                  |L1.2106|
00083a  7868              LDRB     r0,[r5,#1]            ;1058  ; track
00083c  2805              CMP      r0,#5                 ;1058
00083e  d293              BCS      |L1.1896|
000840  e8dff000          TBB      [pc,r0]               ;1058
000844  6f8f4f03          DCB      0x6f,0x8f,0x4f,0x03
000848  2f00              DCB      0x2f,0x00
00084a  6818              LDR      r0,[r3,#0]            ;1062  ; hWinR
00084c  f7fffffe          BL       WM_DeleteWindow
000850  6830              LDR      r0,[r6,#0]            ;1063  ; hWinWind
000852  f7fffffe          BL       WM_DeleteWindow
000856  6838              LDR      r0,[r7,#0]            ;1064  ; hWinG
000858  f7fffffe          BL       WM_DeleteWindow
00085c  f8d80000          LDR      r0,[r8,#0]            ;1065  ; load_wind
000860  f7fffffe          BL       WM_DeleteWindow
000864  e00a              B        |L1.2172|
000866  0000              DCW      0x0000
                  |L1.2152|
                          DCD      page_sw
                  |L1.2156|
00086c  3800              DCB      "8",0
00086e  00                DCB      0
00086f  00                DCB      0
                  |L1.2160|
000870  3900              DCB      "9",0
000872  00                DCB      0
000873  00                DCB      0
                  |L1.2164|
000874  3000              DCB      "0",0
000876  00                DCB      0
000877  00                DCB      0
                  |L1.2168|
000878  2e00              DCB      ".",0
00087a  00                DCB      0
00087b  00                DCB      0
                  |L1.2172|
00087c  f8d90000          LDR      r0,[r9,#0]            ;1066  ; hWinsysinfo
000880  f7fffffe          BL       WM_DeleteWindow
000884  f8da0000          LDR      r0,[r10,#0]           ;1067  ; hWincdc
000888  f7fffffe          BL       WM_DeleteWindow
00088c  f8db0000          LDR      r0,[r11,#0]           ;1068  ; hWinset
000890  f7fffffe          BL       WM_DeleteWindow
000894  f7fffffe          BL       CreateR
000898  81ac              STRH     r4,[r5,#0xc]          ;1070
00089a  e8bd5ff0          POP      {r4-r12,lr}           ;1071
00089e  f7ffbffe          B.W      BEEP_Tiggr
0008a2  6818              LDR      r0,[r3,#0]            ;1076  ; hWinR
0008a4  f7fffffe          BL       WM_DeleteWindow
0008a8  6830              LDR      r0,[r6,#0]            ;1077  ; hWinWind
0008aa  f7fffffe          BL       WM_DeleteWindow
0008ae  6838              LDR      r0,[r7,#0]            ;1078  ; hWinG
0008b0  f7fffffe          BL       WM_DeleteWindow
0008b4  f8d80000          LDR      r0,[r8,#0]            ;1079  ; load_wind
0008b8  f7fffffe          BL       WM_DeleteWindow
0008bc  f8d90000          LDR      r0,[r9,#0]            ;1080  ; hWinsysinfo
0008c0  f7fffffe          BL       WM_DeleteWindow
0008c4  f8da0000          LDR      r0,[r10,#0]           ;1081  ; hWincdc
0008c8  f7fffffe          BL       WM_DeleteWindow
0008cc  f8db0000          LDR      r0,[r11,#0]           ;1082  ; hWinset
0008d0  f7fffffe          BL       WM_DeleteWindow
0008d4  f7fffffe          BL       CreateWindow2
0008d8  81ac              STRH     r4,[r5,#0xc]          ;1084
0008da  e8bd5ff0          POP      {r4-r12,lr}           ;1085
0008de  f7ffbffe          B.W      BEEP_Tiggr
0008e2  6818              LDR      r0,[r3,#0]            ;1090  ; hWinR
0008e4  f7fffffe          BL       WM_DeleteWindow
0008e8  6830              LDR      r0,[r6,#0]            ;1091  ; hWinWind
0008ea  f7fffffe          BL       WM_DeleteWindow
0008ee  6838              LDR      r0,[r7,#0]            ;1092  ; hWinG
0008f0  f7fffffe          BL       WM_DeleteWindow
0008f4  f8d80000          LDR      r0,[r8,#0]            ;1093  ; load_wind
0008f8  f7fffffe          BL       WM_DeleteWindow
0008fc  f8d90000          LDR      r0,[r9,#0]            ;1094  ; hWinsysinfo
000900  f7fffffe          BL       WM_DeleteWindow
000904  f8da0000          LDR      r0,[r10,#0]           ;1095  ; hWincdc
000908  f7fffffe          BL       WM_DeleteWindow
00090c  f8db0000          LDR      r0,[r11,#0]           ;1096  ; hWinset
000910  f7fffffe          BL       WM_DeleteWindow
000914  f7fffffe          BL       CreateWindow
000918  81ac              STRH     r4,[r5,#0xc]          ;1098
00091a  e8bd5ff0          POP      {r4-r12,lr}           ;1099
00091e  f7ffbffe          B.W      BEEP_Tiggr
000922  6818              LDR      r0,[r3,#0]            ;1104  ; hWinR
000924  f7fffffe          BL       WM_DeleteWindow
000928  6830              LDR      r0,[r6,#0]            ;1105  ; hWinWind
00092a  f7fffffe          BL       WM_DeleteWindow
00092e  6838              LDR      r0,[r7,#0]            ;1106  ; hWinG
000930  f7fffffe          BL       WM_DeleteWindow
000934  f8d80000          LDR      r0,[r8,#0]            ;1107  ; load_wind
000938  f7fffffe          BL       WM_DeleteWindow
00093c  f8d90000          LDR      r0,[r9,#0]            ;1108  ; hWinsysinfo
000940  f7fffffe          BL       WM_DeleteWindow
000944  f8da0000          LDR      r0,[r10,#0]           ;1109  ; hWincdc
000948  f7fffffe          BL       WM_DeleteWindow
00094c  f8db0000          LDR      r0,[r11,#0]           ;1110  ; hWinset
000950  f7fffffe          BL       WM_DeleteWindow
000954  f7fffffe          BL       CreateG
000958  81ac              STRH     r4,[r5,#0xc]          ;1112
00095a  e8bd5ff0          POP      {r4-r12,lr}           ;1113
00095e  f7ffbffe          B.W      BEEP_Tiggr
000962  6818              LDR      r0,[r3,#0]            ;1118  ; hWinR
000964  f7fffffe          BL       WM_DeleteWindow
000968  6830              LDR      r0,[r6,#0]            ;1119  ; hWinWind
00096a  f7fffffe          BL       WM_DeleteWindow
00096e  6838              LDR      r0,[r7,#0]            ;1120  ; hWinG
000970  f7fffffe          BL       WM_DeleteWindow
000974  f8d80000          LDR      r0,[r8,#0]            ;1121  ; load_wind
000978  f7fffffe          BL       WM_DeleteWindow
00097c  f8d90000          LDR      r0,[r9,#0]            ;1122  ; hWinsysinfo
000980  f7fffffe          BL       WM_DeleteWindow
000984  f8da0000          LDR      r0,[r10,#0]           ;1123  ; hWincdc
000988  f7fffffe          BL       WM_DeleteWindow
00098c  f8db0000          LDR      r0,[r11,#0]           ;1124  ; hWinset
000990  f7fffffe          BL       WM_DeleteWindow
000994  f7fffffe          BL       CreateCDC
000998  81ac              STRH     r4,[r5,#0xc]          ;1126
00099a  e8bd5ff0          POP      {r4-r12,lr}           ;1127
00099e  f7ffbffe          B.W      BEEP_Tiggr
                  |L1.2466|
0009a2  6818              LDR      r0,[r3,#0]            ;1153  ; hWinR
0009a4  f7fffffe          BL       WM_DeleteWindow
0009a8  6830              LDR      r0,[r6,#0]            ;1154  ; hWinWind
0009aa  f7fffffe          BL       WM_DeleteWindow
0009ae  6838              LDR      r0,[r7,#0]            ;1155  ; hWinG
0009b0  f7fffffe          BL       WM_DeleteWindow
0009b4  f8d80000          LDR      r0,[r8,#0]            ;1156  ; load_wind
0009b8  f7fffffe          BL       WM_DeleteWindow
0009bc  f8d90000          LDR      r0,[r9,#0]            ;1157  ; hWinsysinfo
0009c0  f7fffffe          BL       WM_DeleteWindow
0009c4  f8da0000          LDR      r0,[r10,#0]           ;1158  ; hWincdc
0009c8  f7fffffe          BL       WM_DeleteWindow
0009cc  f8db0000          LDR      r0,[r11,#0]           ;1159  ; hWinset
0009d0  f7fffffe          BL       WM_DeleteWindow
0009d4  f7fffffe          BL       CreateSET
0009d8  81ac              STRH     r4,[r5,#0xc]          ;1161
0009da  e8bd5ff0          POP      {r4-r12,lr}           ;1162
0009de  f7ffbffe          B.W      BEEP_Tiggr
                  |L1.2530|
0009e2  48e3              LDR      r0,|L1.3440|
0009e4  7800              LDRB     r0,[r0,#0]            ;1167  ; page_sw
0009e6  2703              MOVS     r7,#3                 ;384
0009e8  4ee2              LDR      r6,|L1.3444|
0009ea  2801              CMP      r0,#1                 ;1167
0009ec  d07e              BEQ      |L1.2796|
0009ee  2802              CMP      r0,#2                 ;1167
0009f0  d051              BEQ      |L1.2710|
0009f2  2803              CMP      r0,#3                 ;1167
0009f4  d019              BEQ      |L1.2602|
0009f6  e007              B        |L1.2568|
                  |L1.2552|
0009f8  e19a              B        |L1.3376|
                  |L1.2554|
0009fa  e0e1              B        |L1.3008|
                  |L1.2556|
0009fc  e0a9              B        |L1.2898|
                  |L1.2558|
0009fe  e0e4              B        |L1.3018|
                  |L1.2560|
000a00  e10c              B        |L1.3100|
                  |L1.2562|
000a02  e130              B        |L1.3174|
                  |L1.2564|
000a04  e154              B        |L1.3248|
                  |L1.2566|
000a06  e173              B        |L1.3312|
                  |L1.2568|
000a08  2804              CMP      r0,#4                 ;1167
000a0a  f47fae72          BNE      |L1.1778|
000a0e  7aa8              LDRB     r0,[r5,#0xa]          ;1207  ; t_onoff
000a10  1c40              ADDS     r0,r0,#1              ;1207
000a12  72a8              STRB     r0,[r5,#0xa]          ;1207
000a14  7aa8              LDRB     r0,[r5,#0xa]          ;1208  ; t_onoff
000a16  2801              CMP      r0,#1                 ;1208
000a18  d900              BLS      |L1.2588|
000a1a  72ac              STRB     r4,[r5,#0xa]          ;1210
                  |L1.2588|
000a1c  7aa8              LDRB     r0,[r5,#0xa]          ;1212  ; t_onoff
000a1e  4fd6              LDR      r7,|L1.3448|
000a20  b1c8              CBZ      r0,|L1.2646|
000a22  7aa8              LDRB     r0,[r5,#0xa]          ;1219  ; t_onoff
000a24  2801              CMP      r0,#1                 ;1219
000a26  d023              BEQ      |L1.2672|
000a28  e030              B        |L1.2700|
                  |L1.2602|
000a2a  78a8              LDRB     r0,[r5,#2]            ;1195  ; r_test
000a2c  b968              CBNZ     r0,|L1.2634|
000a2e  48d3              LDR      r0,|L1.3452|
000a30  ed900a00          VLDR     s0,[r0,#0]            ;1195
000a34  48d2              LDR      r0,|L1.3456|
000a36  edd00a00          VLDR     s1,[r0,#0]            ;1195
000a3a  eeb40ae0          VCMPE.F32 s0,s1                 ;1195
000a3e  eef1fa10          VMRS     APSR_nzcv,FPSCR       ;1195
000a42  dd02              BLE      |L1.2634|
000a44  2001              MOVS     r0,#1                 ;1197
000a46  70a8              STRB     r0,[r5,#2]            ;1197
000a48  e000              B        |L1.2636|
                  |L1.2634|
000a4a  70ac              STRB     r4,[r5,#2]            ;1199
                  |L1.2636|
000a4c  81ac              STRH     r4,[r5,#0xc]          ;1201
000a4e  e8bd5ff0          POP      {r4-r12,lr}           ;1202
000a52  f7ffbffe          B.W      BEEP_Tiggr
                  |L1.2646|
000a56  48cb              LDR      r0,|L1.3460|
000a58  6801              LDR      r1,[r0,#0]            ;1214  ; flagA
000a5a  f0210140          BIC      r1,r1,#0x40           ;1214
000a5e  6001              STR      r1,[r0,#0]            ;1214  ; flagA
000a60  f44f4100          MOV      r1,#0x8000            ;1215
000a64  48c8              LDR      r0,|L1.3464|
000a66  f7fffffe          BL       GPIO_SetBits
000a6a  7034              STRB     r4,[r6,#0]            ;1216
000a6c  703c              STRB     r4,[r7,#0]            ;1217
000a6e  e00d              B        |L1.2700|
                  |L1.2672|
000a70  48c4              LDR      r0,|L1.3460|
000a72  6801              LDR      r1,[r0,#0]            ;1221  ; flagA
000a74  f0410140          ORR      r1,r1,#0x40           ;1221
000a78  6001              STR      r1,[r0,#0]            ;1221  ; flagA
000a7a  f44f4100          MOV      r1,#0x8000            ;1222
000a7e  48c2              LDR      r0,|L1.3464|
000a80  f7fffffe          BL       GPIO_ResetBits
000a84  2002              MOVS     r0,#2                 ;1223
000a86  7030              STRB     r0,[r6,#0]            ;1223
000a88  2001              MOVS     r0,#1                 ;1224
000a8a  7038              STRB     r0,[r7,#0]            ;1224
                  |L1.2700|
000a8c  81ac              STRH     r4,[r5,#0xc]          ;1226
000a8e  e8bd5ff0          POP      {r4-r12,lr}           ;1227
000a92  f7ffbffe          B.W      BEEP_Tiggr
                  |L1.2710|
000a96  79e8              LDRB     r0,[r5,#7]            ;1232  ; POW_t
000a98  1c40              ADDS     r0,r0,#1              ;1232
000a9a  71e8              STRB     r0,[r5,#7]            ;1232
000a9c  79e8              LDRB     r0,[r5,#7]            ;1233  ; POW_t
000a9e  2801              CMP      r0,#1                 ;1233
000aa0  d900              BLS      |L1.2724|
000aa2  71ec              STRB     r4,[r5,#7]            ;1235
                  |L1.2724|
000aa4  79e8              LDRB     r0,[r5,#7]            ;1237  ; POW_t
000aa6  f8df82e4          LDR      r8,|L1.3468|
000aaa  b118              CBZ      r0,|L1.2740|
000aac  79e8              LDRB     r0,[r5,#7]            ;1244  ; POW_t
000aae  2801              CMP      r0,#1                 ;1244
000ab0  d00c              BEQ      |L1.2764|
000ab2  e017              B        |L1.2788|
                  |L1.2740|
000ab4  2102              MOVS     r1,#2                 ;1239
000ab6  48b6              LDR      r0,|L1.3472|
000ab8  f7fffffe          BL       GPIO_ResetBits
000abc  2100              MOVS     r1,#0                 ;1240
000abe  48b5              LDR      r0,|L1.3476|
000ac0  f7fffffe          BL       USART_SendData
000ac4  7034              STRB     r4,[r6,#0]            ;1241
000ac6  f8884000          STRB     r4,[r8,#0]            ;1242
000aca  e00b              B        |L1.2788|
                  |L1.2764|
000acc  2101              MOVS     r1,#1                 ;1246
000ace  48b1              LDR      r0,|L1.3476|
000ad0  f7fffffe          BL       USART_SendData
000ad4  2102              MOVS     r1,#2                 ;1247
000ad6  48ae              LDR      r0,|L1.3472|
000ad8  f7fffffe          BL       GPIO_SetBits
000adc  7037              STRB     r7,[r6,#0]            ;1248
000ade  2001              MOVS     r0,#1                 ;1249
000ae0  f8880000          STRB     r0,[r8,#0]            ;1249
                  |L1.2788|
000ae4  81ac              STRH     r4,[r5,#0xc]          ;1251
000ae6  e8bd5ff0          POP      {r4-r12,lr}           ;1252
000aea  e000              B        |L1.2798|
                  |L1.2796|
000aec  e001              B        |L1.2802|
                  |L1.2798|
000aee  f7ffbffe          B.W      BEEP_Tiggr
                  |L1.2802|
000af2  f8df82a4          LDR      r8,|L1.3480|
000af6  f8980000          LDRB     r0,[r8,#0]            ;1256  ; cdc_sw
000afa  b188              CBZ      r0,|L1.2848|
000afc  2102              MOVS     r1,#2                 ;1270
000afe  48a4              LDR      r0,|L1.3472|
000b00  f7fffffe          BL       GPIO_ResetBits
000b04  2100              MOVS     r1,#0                 ;1271
000b06  48a3              LDR      r0,|L1.3476|
000b08  f7fffffe          BL       USART_SendData
000b0c  f8884000          STRB     r4,[r8,#0]            ;1272
000b10  48a2              LDR      r0,|L1.3484|
000b12  7004              STRB     r4,[r0,#0]            ;1273
000b14  7034              STRB     r4,[r6,#0]            ;1274
                  |L1.2838|
000b16  81ac              STRH     r4,[r5,#0xc]          ;1276
000b18  e8bd5ff0          POP      {r4-r12,lr}           ;1277
000b1c  f7ffbffe          B.W      BEEP_Tiggr
                  |L1.2848|
000b20  489f              LDR      r0,|L1.3488|
000b22  6fc1              LDR      r1,[r0,#0x7c]         ;1258  ; Run_Control
000b24  6041              STR      r1,[r0,#4]            ;1258  ; Run_Control
000b26  f8d01088          LDR      r1,[r0,#0x88]         ;1259  ; Run_Control
000b2a  6081              STR      r1,[r0,#8]            ;1259  ; Run_Control
000b2c  489d              LDR      r0,|L1.3492|
000b2e  7004              STRB     r4,[r0,#0]            ;1260
000b30  489d              LDR      r0,|L1.3496|
000b32  f04f0901          MOV      r9,#1                 ;1263
000b36  f8809000          STRB     r9,[r0,#0]            ;1263
000b3a  2101              MOVS     r1,#1                 ;1264
000b3c  4895              LDR      r0,|L1.3476|
000b3e  f7fffffe          BL       USART_SendData
000b42  2102              MOVS     r1,#2                 ;1265
000b44  4892              LDR      r0,|L1.3472|
000b46  f7fffffe          BL       GPIO_SetBits
000b4a  7037              STRB     r7,[r6,#0]            ;1266
000b4c  f8889000          STRB     r9,[r8,#0]            ;1267
000b50  e7e1              B        |L1.2838|
                  |L1.2898|
000b52  4887              LDR      r0,|L1.3440|
000b54  7800              LDRB     r0,[r0,#0]            ;1287  ; page_sw
000b56  2803              CMP      r0,#3                 ;1287
000b58  d12d              BNE      |L1.2998|
000b5a  7a28              LDRB     r0,[r5,#8]            ;1291  ; at
000b5c  f8df824c          LDR      r8,|L1.3500|
000b60  4e93              LDR      r6,|L1.3504|
000b62  f44f5700          MOV      r7,#0x2000            ;1294
000b66  b130              CBZ      r0,|L1.2934|
000b68  7a28              LDRB     r0,[r5,#8]            ;1298  ; at
000b6a  2801              CMP      r0,#1                 ;1298
000b6c  d012              BEQ      |L1.2964|
000b6e  7a28              LDRB     r0,[r5,#8]            ;1304  ; at
000b70  2802              CMP      r0,#2                 ;1304
000b72  d01e              BEQ      |L1.2994|
000b74  e01f              B        |L1.2998|
                  |L1.2934|
000b76  2100              MOVS     r1,#0                 ;1293
000b78  4886              LDR      r0,|L1.3476|
000b7a  f7fffffe          BL       USART_SendData
000b7e  4639              MOV      r1,r7                 ;1294
000b80  4640              MOV      r0,r8                 ;1294
000b82  f7fffffe          BL       GPIO_ResetBits
000b86  7a28              LDRB     r0,[r5,#8]            ;1295  ; at
000b88  1c40              ADDS     r0,r0,#1              ;1295
000b8a  7228              STRB     r0,[r5,#8]            ;1295
000b8c  70ec              STRB     r4,[r5,#3]            ;1296
000b8e  2001              MOVS     r0,#1                 ;1297
000b90  7030              STRB     r0,[r6,#0]            ;1297
000b92  e010              B        |L1.2998|
                  |L1.2964|
000b94  2100              MOVS     r1,#0                 ;1299
000b96  487f              LDR      r0,|L1.3476|
000b98  f7fffffe          BL       USART_SendData
000b9c  4639              MOV      r1,r7                 ;1300
000b9e  4640              MOV      r0,r8                 ;1300
000ba0  f7fffffe          BL       GPIO_SetBits
000ba4  2001              MOVS     r0,#1                 ;1301
000ba6  70e8              STRB     r0,[r5,#3]            ;1301
000ba8  7a29              LDRB     r1,[r5,#8]            ;1302  ; at
000baa  1c49              ADDS     r1,r1,#1              ;1302
000bac  7229              STRB     r1,[r5,#8]            ;1302
000bae  7030              STRB     r0,[r6,#0]            ;1303
000bb0  e001              B        |L1.2998|
                  |L1.2994|
000bb2  722c              STRB     r4,[r5,#8]            ;1305
000bb4  7034              STRB     r4,[r6,#0]            ;1306
                  |L1.2998|
000bb6  81ac              STRH     r4,[r5,#0xc]          ;1310
000bb8  e8bd5ff0          POP      {r4-r12,lr}           ;1311
000bbc  f7ffbffe          B.W      BEEP_Tiggr
                  |L1.3008|
000bc0  81ac              STRH     r4,[r5,#0xc]          ;1317
000bc2  e8bd5ff0          POP      {r4-r12,lr}           ;1318
000bc6  f7ffbffe          B.W      BEEP_Tiggr
                  |L1.3018|
000bca  6818              LDR      r0,[r3,#0]            ;1323  ; hWinR
000bcc  f7fffffe          BL       WM_DeleteWindow
000bd0  6830              LDR      r0,[r6,#0]            ;1324  ; hWinWind
000bd2  f7fffffe          BL       WM_DeleteWindow
000bd6  6838              LDR      r0,[r7,#0]            ;1325  ; hWinG
000bd8  f7fffffe          BL       WM_DeleteWindow
000bdc  f8d80000          LDR      r0,[r8,#0]            ;1326  ; load_wind
000be0  f7fffffe          BL       WM_DeleteWindow
000be4  f8d90000          LDR      r0,[r9,#0]            ;1327  ; hWinsysinfo
000be8  f7fffffe          BL       WM_DeleteWindow
000bec  f8da0000          LDR      r0,[r10,#0]           ;1328  ; hWincdc
000bf0  f7fffffe          BL       WM_DeleteWindow
000bf4  f8db0000          LDR      r0,[r11,#0]           ;1329  ; hWinset
000bf8  f7fffffe          BL       WM_DeleteWindow
000bfc  f44f4100          MOV      r1,#0x8000            ;1330
000c00  4861              LDR      r0,|L1.3464|
000c02  f7fffffe          BL       GPIO_SetBits
000c06  2102              MOVS     r1,#2                 ;1331
000c08  4861              LDR      r0,|L1.3472|
000c0a  f7fffffe          BL       GPIO_ResetBits
000c0e  f7fffffe          BL       CreateR
000c12  81ac              STRH     r4,[r5,#0xc]          ;1333
000c14  e8bd5ff0          POP      {r4-r12,lr}           ;1334
000c18  f7ffbffe          B.W      BEEP_Tiggr
                  |L1.3100|
000c1c  6818              LDR      r0,[r3,#0]            ;1339  ; hWinR
000c1e  f7fffffe          BL       WM_DeleteWindow
000c22  6830              LDR      r0,[r6,#0]            ;1340  ; hWinWind
000c24  f7fffffe          BL       WM_DeleteWindow
000c28  6838              LDR      r0,[r7,#0]            ;1341  ; hWinG
000c2a  f7fffffe          BL       WM_DeleteWindow
000c2e  f8d80000          LDR      r0,[r8,#0]            ;1342  ; load_wind
000c32  f7fffffe          BL       WM_DeleteWindow
000c36  f8d90000          LDR      r0,[r9,#0]            ;1343  ; hWinsysinfo
000c3a  f7fffffe          BL       WM_DeleteWindow
000c3e  f8da0000          LDR      r0,[r10,#0]           ;1344  ; hWincdc
000c42  f7fffffe          BL       WM_DeleteWindow
000c46  f8db0000          LDR      r0,[r11,#0]           ;1345  ; hWinset
000c4a  f7fffffe          BL       WM_DeleteWindow
000c4e  f7fffffe          BL       CreateWindow2
000c52  72ac              STRB     r4,[r5,#0xa]          ;1347
000c54  2102              MOVS     r1,#2                 ;1348
000c56  484e              LDR      r0,|L1.3472|
000c58  f7fffffe          BL       GPIO_ResetBits
000c5c  81ac              STRH     r4,[r5,#0xc]          ;1349
000c5e  e8bd5ff0          POP      {r4-r12,lr}           ;1350
000c62  f7ffbffe          B.W      BEEP_Tiggr
                  |L1.3174|
000c66  6818              LDR      r0,[r3,#0]            ;1355  ; hWinR
000c68  f7fffffe          BL       WM_DeleteWindow
000c6c  6830              LDR      r0,[r6,#0]            ;1356  ; hWinWind
000c6e  f7fffffe          BL       WM_DeleteWindow
000c72  6838              LDR      r0,[r7,#0]            ;1357  ; hWinG
000c74  f7fffffe          BL       WM_DeleteWindow
000c78  f8d80000          LDR      r0,[r8,#0]            ;1358  ; load_wind
000c7c  f7fffffe          BL       WM_DeleteWindow
000c80  f8d90000          LDR      r0,[r9,#0]            ;1359  ; hWinsysinfo
000c84  f7fffffe          BL       WM_DeleteWindow
000c88  f8da0000          LDR      r0,[r10,#0]           ;1360  ; hWincdc
000c8c  f7fffffe          BL       WM_DeleteWindow
000c90  f8db0000          LDR      r0,[r11,#0]           ;1361  ; hWinset
000c94  f7fffffe          BL       WM_DeleteWindow
000c98  f7fffffe          BL       CreateWindow
000c9c  f44f4100          MOV      r1,#0x8000            ;1363
000ca0  4839              LDR      r0,|L1.3464|
000ca2  f7fffffe          BL       GPIO_SetBits
000ca6  81ac              STRH     r4,[r5,#0xc]          ;1364
000ca8  e8bd5ff0          POP      {r4-r12,lr}           ;1365
000cac  f7ffbffe          B.W      BEEP_Tiggr
                  |L1.3248|
000cb0  6818              LDR      r0,[r3,#0]            ;1370  ; hWinR
000cb2  f7fffffe          BL       WM_DeleteWindow
000cb6  6830              LDR      r0,[r6,#0]            ;1371  ; hWinWind
000cb8  f7fffffe          BL       WM_DeleteWindow
000cbc  6838              LDR      r0,[r7,#0]            ;1372  ; hWinG
000cbe  f7fffffe          BL       WM_DeleteWindow
000cc2  f8d80000          LDR      r0,[r8,#0]            ;1373  ; load_wind
000cc6  f7fffffe          BL       WM_DeleteWindow
000cca  f8d90000          LDR      r0,[r9,#0]            ;1374  ; hWinsysinfo
000cce  f7fffffe          BL       WM_DeleteWindow
000cd2  f8da0000          LDR      r0,[r10,#0]           ;1375  ; hWincdc
000cd6  f7fffffe          BL       WM_DeleteWindow
000cda  f8db0000          LDR      r0,[r11,#0]           ;1376  ; hWinset
000cde  f7fffffe          BL       WM_DeleteWindow
000ce2  f7fffffe          BL       CreateCDC
000ce6  81ac              STRH     r4,[r5,#0xc]          ;1378
000ce8  e8bd5ff0          POP      {r4-r12,lr}           ;1379
000cec  f7ffbffe          B.W      BEEP_Tiggr
                  |L1.3312|
000cf0  6818              LDR      r0,[r3,#0]            ;1384  ; hWinR
000cf2  f7fffffe          BL       WM_DeleteWindow
000cf6  6830              LDR      r0,[r6,#0]            ;1385  ; hWinWind
000cf8  f7fffffe          BL       WM_DeleteWindow
000cfc  6838              LDR      r0,[r7,#0]            ;1386  ; hWinG
000cfe  f7fffffe          BL       WM_DeleteWindow
000d02  f8d80000          LDR      r0,[r8,#0]            ;1387  ; load_wind
000d06  f7fffffe          BL       WM_DeleteWindow
000d0a  f8d90000          LDR      r0,[r9,#0]            ;1388  ; hWinsysinfo
000d0e  f7fffffe          BL       WM_DeleteWindow
000d12  f8da0000          LDR      r0,[r10,#0]           ;1389  ; hWincdc
000d16  f7fffffe          BL       WM_DeleteWindow
000d1a  f8db0000          LDR      r0,[r11,#0]           ;1390  ; hWinset
000d1e  f7fffffe          BL       WM_DeleteWindow
000d22  f7fffffe          BL       CreateG
000d26  81ac              STRH     r4,[r5,#0xc]          ;1392
000d28  e8bd5ff0          POP      {r4-r12,lr}           ;1393
000d2c  f7ffbffe          B.W      BEEP_Tiggr
                  |L1.3376|
000d30  6818              LDR      r0,[r3,#0]            ;1398  ; hWinR
000d32  f7fffffe          BL       WM_DeleteWindow
000d36  6830              LDR      r0,[r6,#0]            ;1399  ; hWinWind
000d38  f7fffffe          BL       WM_DeleteWindow
000d3c  6838              LDR      r0,[r7,#0]            ;1400  ; hWinG
000d3e  f7fffffe          BL       WM_DeleteWindow
000d42  f8d80000          LDR      r0,[r8,#0]            ;1401  ; load_wind
000d46  f7fffffe          BL       WM_DeleteWindow
000d4a  f8d90000          LDR      r0,[r9,#0]            ;1402  ; hWinsysinfo
000d4e  f7fffffe          BL       WM_DeleteWindow
000d52  f8da0000          LDR      r0,[r10,#0]           ;1403  ; hWincdc
000d56  f7fffffe          BL       WM_DeleteWindow
000d5a  f8db0000          LDR      r0,[r11,#0]           ;1404  ; hWinset
000d5e  f7fffffe          BL       WM_DeleteWindow
000d62  f7fffffe          BL       Createsysinfo
000d66  81ac              STRH     r4,[r5,#0xc]          ;1406
000d68  e8bd5ff0          POP      {r4-r12,lr}           ;1407
000d6c  f7ffbffe          B.W      BEEP_Tiggr
;;;1418   //USART_SendData(USART3,1);//打开电源
                          ENDP

                  |L1.3440|
                          DCD      page_sw
                  |L1.3444|
                          DCD      mode_sw
                  |L1.3448|
                          DCD      load_sw
                  |L1.3452|
                          DCD      DISS_Voltage
                  |L1.3456|
                          DCD      gate_v
                  |L1.3460|
                          DCD      flagA
                  |L1.3464|
                          DCD      0x40020000
                  |L1.3468|
                          DCD      pow_sw
                  |L1.3472|
                          DCD      0x40020800
                  |L1.3476|
                          DCD      0x40004800
                  |L1.3480|
                          DCD      cdc_sw
                  |L1.3484|
                          DCD      paused
                  |L1.3488|
                          DCD      Run_Control
                  |L1.3492|
                          DCD      cutoff_flag
                  |L1.3496|
                          DCD      charge_step
                  |L1.3500|
                          DCD      0x40020400
                  |L1.3504|
                          DCD      manual

                          AREA ||i.Key_Scan||, CODE, READONLY, ALIGN=2

                  Key_Scan PROC
;;;157    /************************************************************************************************************************/
;;;158    vu32 Key_Scan(void)
000000  b530              PUSH     {r4,r5,lr}
;;;159    {
;;;160    	static vu8 KeyState = KEY_INIT_STATE;
;;;161    	static vu8 IsKeyRelease = 1;
;;;162    
;;;163    	static vu8 KeyValueTemp = 0;
;;;164    	vu8 KeyValue ;
;;;165    	KeyValue= KEY_NULL_VALUE;
;;;166    	
;;;167    	if((NewKey>0x37)&&(IsKeyRelease==1))
000002  4922              LDR      r1,|L2.140|
000004  7a4d              LDRB     r5,[r1,#9]  ; NewKey
;;;168    	{
;;;169    		if(KeyState == KEY_INIT_STATE)                    /*无按键按下*/
;;;170    		{
;;;171    			KeyState = KEY_WOBBLE_STATE;
;;;172    			return KEY_NULL_VALUE;
;;;173    		}
;;;174    		else if(KeyState == KEY_WOBBLE_STATE)                /* 消抖 */
;;;175    		{
;;;176    			KeyState = KEY_PRESS_STATE;
;;;177    			return KEY_NULL_VALUE;
;;;178    		}
;;;179    		else if(KeyState == KEY_PRESS_STATE)                /* 有按键按下，返回按键值 */
;;;180    		{
;;;181    			KeyValue = NewKey;
;;;182    			KeyValueTemp = KeyValue;
;;;183    			KeyState = KEY_CONTINUE_STATE;
;;;184    			return KeyValue;
;;;185    		}
;;;186    		else if(KeyState == KEY_CONTINUE_STATE)           /*双击按键*/
;;;187    		{
;;;188    			KeyCounter ++;
;;;189    			if(KeyCounter == KEY_CONTINUE_PERIOD)
;;;190    			{
;;;191    				 KeyCounter = 0;
;;;192    				 KeyState = KEY_LONG_STATE;
;;;193    			}
;;;194    		}
;;;195    		else if(KeyState == KEY_LONG_STATE)                        /* 长按按键 */
;;;196    		{
;;;197    			KeyCounter ++;
;;;198    			if(KeyCounter == KEY_LONG_PERIOD)
;;;199    			{
;;;200    				KeyCounter = 0;
;;;201    				Flag_Long=1; //长按触发标志位
000006  4a22              LDR      r2,|L2.144|
000008  2300              MOVS     r3,#0                 ;165
00000a  2401              MOVS     r4,#1                 ;171
00000c  6810              LDR      r0,[r2,#0]            ;167
00000e  2d37              CMP      r5,#0x37              ;167
000010  d902              BLS      |L2.24|
000012  794d              LDRB     r5,[r1,#5]            ;167  ; IsKeyRelease
000014  2d01              CMP      r5,#1                 ;167
000016  d009              BEQ      |L2.44|
                  |L2.24|
;;;202    			}
;;;203    		}
;;;204    	}
;;;205    	else if(NewKey<=0x37)
000018  7a4d              LDRB     r5,[r1,#9]  ; NewKey
00001a  2d37              CMP      r5,#0x37
00001c  d804              BHI      |L2.40|
;;;206    	{
;;;207    		KeyState = KEY_INIT_STATE;        /* 误触发，返回到初始状态 */
00001e  710b              STRB     r3,[r1,#4]
;;;208    		IsKeyRelease = 1;
000020  714c              STRB     r4,[r1,#5]
;;;209    		Flag_Long=0;
000022  f0200004          BIC      r0,r0,#4
000026  6010              STR      r0,[r2,#0]  ; flagB
                  |L2.40|
;;;210    	}
;;;211    	return KEY_NULL_VALUE;
000028  2000              MOVS     r0,#0
;;;212    }
00002a  bd30              POP      {r4,r5,pc}
                  |L2.44|
00002c  790d              LDRB     r5,[r1,#4]            ;169  ; KeyState
00002e  b1b5              CBZ      r5,|L2.94|
000030  790c              LDRB     r4,[r1,#4]            ;174  ; KeyState
000032  2c01              CMP      r4,#1                 ;174
000034  d016              BEQ      |L2.100|
000036  790c              LDRB     r4,[r1,#4]            ;179  ; KeyState
000038  2c02              CMP      r4,#2                 ;179
00003a  d017              BEQ      |L2.108|
00003c  790c              LDRB     r4,[r1,#4]            ;186  ; KeyState
00003e  2c04              CMP      r4,#4                 ;186
000040  d019              BEQ      |L2.118|
000042  790c              LDRB     r4,[r1,#4]            ;195  ; KeyState
000044  2c03              CMP      r4,#3                 ;195
000046  d1ef              BNE      |L2.40|
000048  898c              LDRH     r4,[r1,#0xc]          ;197  ; KeyCounter
00004a  1c64              ADDS     r4,r4,#1              ;197
00004c  818c              STRH     r4,[r1,#0xc]          ;197
00004e  898c              LDRH     r4,[r1,#0xc]          ;198  ; KeyCounter
000050  2c32              CMP      r4,#0x32              ;198
000052  d1e9              BNE      |L2.40|
000054  818b              STRH     r3,[r1,#0xc]          ;200
000056  f0400004          ORR      r0,r0,#4              ;201
00005a  6010              STR      r0,[r2,#0]            ;201  ; flagB
00005c  e7e4              B        |L2.40|
                  |L2.94|
00005e  710c              STRB     r4,[r1,#4]            ;171
000060  2000              MOVS     r0,#0                 ;172
000062  bd30              POP      {r4,r5,pc}
                  |L2.100|
000064  2002              MOVS     r0,#2                 ;176
000066  7108              STRB     r0,[r1,#4]            ;176
000068  2000              MOVS     r0,#0                 ;177
00006a  bd30              POP      {r4,r5,pc}
                  |L2.108|
00006c  7a48              LDRB     r0,[r1,#9]            ;181  ; NewKey
00006e  7188              STRB     r0,[r1,#6]            ;182
000070  2204              MOVS     r2,#4                 ;183
000072  710a              STRB     r2,[r1,#4]            ;183
000074  bd30              POP      {r4,r5,pc}
                  |L2.118|
000076  8988              LDRH     r0,[r1,#0xc]          ;188  ; KeyCounter
000078  1c40              ADDS     r0,r0,#1              ;188
00007a  8188              STRH     r0,[r1,#0xc]          ;188
00007c  8988              LDRH     r0,[r1,#0xc]          ;189  ; KeyCounter
00007e  280a              CMP      r0,#0xa               ;189
000080  d1d2              BNE      |L2.40|
000082  818b              STRH     r3,[r1,#0xc]          ;191
000084  2003              MOVS     r0,#3                 ;192
000086  7108              STRB     r0,[r1,#4]            ;192
000088  e7ce              B        |L2.40|
;;;213    /***************************************************************************************************************************/
                          ENDP

00008a  0000              DCW      0x0000
                  |L2.140|
                          DCD      ||.data||
                  |L2.144|
                          DCD      flagB

                          AREA ||i.setmode_r||, CODE, READONLY, ALIGN=2

                  setmode_r PROC
;;;1418   //USART_SendData(USART3,1);//打开电源
;;;1419   void setmode_r(void)
000000  b510              PUSH     {r4,lr}
;;;1420   {
;;;1421       USART_SendData(USART3,0);//关闭电源
000002  2100              MOVS     r1,#0
000004  4807              LDR      r0,|L3.36|
000006  f7fffffe          BL       USART_SendData
;;;1422       GPIO_SetBits(GPIOA,GPIO_Pin_15);//电子负载OFF
00000a  f44f4100          MOV      r1,#0x8000
00000e  4806              LDR      r0,|L3.40|
000010  f7fffffe          BL       GPIO_SetBits
;;;1423       GPIO_ResetBits(GPIOC,GPIO_Pin_1);//关闭电源输出
000014  2102              MOVS     r1,#2
000016  4805              LDR      r0,|L3.44|
000018  f7fffffe          BL       GPIO_ResetBits
;;;1424       mode_sw = mode_r;
00001c  4904              LDR      r1,|L3.48|
00001e  2001              MOVS     r0,#1
000020  7008              STRB     r0,[r1,#0]
;;;1425   }
000022  bd10              POP      {r4,pc}
                          ENDP

                  |L3.36|
                          DCD      0x40004800
                  |L3.40|
                          DCD      0x40020000
                  |L3.44|
                          DCD      0x40020800
                  |L3.48|
                          DCD      mode_sw

                          AREA ||.data||, DATA, ALIGN=1

                  pass
000000  00                DCB      0x00
                  track
000001  03                DCB      0x03
                  r_test
000002  00                DCB      0x00
                  r_raly
000003  00                DCB      0x00
                  KeyState
000004  00                DCB      0x00
                  IsKeyRelease
000005  01                DCB      0x01
                  KeyValueTemp
000006  00                DCB      0x00
                  POW_t
000007  00                DCB      0x00
                  ||at||
000008  00                DCB      0x00
                  NewKey
000009  00                DCB      0x00
                  t_onoff
00000a  0000              DCB      0x00,0x00
                  KeyCounter
00000c  0000              DCB      0x00,0x00

                          AREA ||area_number.7||, DATA, ALIGN=0

                          EXPORTAS ||area_number.7||, ||.data||
                  clear_flag1
000000  00                DCB      0x00

                          AREA ||area_number.8||, DATA, ALIGN=0

                          EXPORTAS ||area_number.8||, ||.data||
                  clear_flag2
000000  00                DCB      0x00

                          AREA ||area_number.9||, DATA, ALIGN=0

                          EXPORTAS ||area_number.9||, ||.data||
                  clear_flag3
000000  00                DCB      0x00

                          AREA ||area_number.10||, DATA, ALIGN=2

                          EXPORTAS ||area_number.10||, ||.data||
                  clear_v
000000  00000000          DCFS     0x00000000 ; 0

                          AREA ||area_number.11||, DATA, ALIGN=2

                          EXPORTAS ||area_number.11||, ||.data||
                  clear_pv
000000  00000000          DCFS     0x00000000 ; 0

                          AREA ||area_number.12||, DATA, ALIGN=2

                          EXPORTAS ||area_number.12||, ||.data||
                  clear_lv
000000  00000000          DCFS     0x00000000 ; 0

                          AREA ||area_number.13||, DATA, ALIGN=0

                          EXPORTAS ||area_number.13||, ||.data||
                  clear_r
000000  00                DCB      0x00

                          AREA ||area_number.14||, DATA, ALIGN=0

                          EXPORTAS ||area_number.14||, ||.data||
                  t_MODE
000000  00                DCB      0x00

                          AREA ||area_number.15||, DATA, ALIGN=0

                          EXPORTAS ||area_number.15||, ||.data||
                  LOAD_t
000000  00                DCB      0x00

                          AREA ||area_number.16||, DATA, ALIGN=1

                          EXPORTAS ||area_number.16||, ||.data||
                  menu_time
000000  0000              DCB      0x00,0x00

                          AREA ||area_number.17||, DATA, ALIGN=1

                          EXPORTAS ||area_number.17||, ||.data||
                  load_time
000000  0000              DCB      0x00,0x00

                          AREA ||area_number.18||, DATA, ALIGN=0

                          EXPORTAS ||area_number.18||, ||.data||
                  t_KeyScan
000000  00                DCB      0x00

                          AREA ||area_number.19||, DATA, ALIGN=0

                          EXPORTAS ||area_number.19||, ||.data||
                  t_wei
000000  00                DCB      0x00

                          AREA ||area_number.20||, DATA, ALIGN=0

                          EXPORTAS ||area_number.20||, ||.data||
                  t_beep
000000  00                DCB      0x00

                          AREA ||area_number.21||, DATA, ALIGN=0

                          EXPORTAS ||area_number.21||, ||.data||
                  t_Str
000000  00                DCB      0x00

                          AREA ||area_number.22||, DATA, ALIGN=0

                          EXPORTAS ||area_number.22||, ||.data||
                  t_lock
000000  00                DCB      0x00

                          AREA ||area_number.23||, DATA, ALIGN=0

                          EXPORTAS ||area_number.23||, ||.data||
                  t_doub
000000  00                DCB      0x00

                          AREA ||area_number.24||, DATA, ALIGN=0

                          EXPORTAS ||area_number.24||, ||.data||
                  t_key_step
000000  00                DCB      0x00

                          AREA ||area_number.25||, DATA, ALIGN=1

                          EXPORTAS ||area_number.25||, ||.data||
                  Key1
000000  0000              DCB      0x00,0x00

                          AREA ||area_number.26||, DATA, ALIGN=1

                          EXPORTAS ||area_number.26||, ||.data||
                  Key2
000000  0000              DCB      0x00,0x00

                          AREA ||area_number.27||, DATA, ALIGN=1

                          EXPORTAS ||area_number.27||, ||.data||
                  Key3
000000  0000              DCB      0x00,0x00

                          AREA ||area_number.28||, DATA, ALIGN=1

                          EXPORTAS ||area_number.28||, ||.data||
                  Key4
000000  0000              DCB      0x00,0x00

                          AREA ||area_number.29||, DATA, ALIGN=1

                          EXPORTAS ||area_number.29||, ||.data||
                  Key5
000000  0000              DCB      0x00,0x00

                          AREA ||area_number.30||, DATA, ALIGN=1

                          EXPORTAS ||area_number.30||, ||.data||
                  Key6
000000  0000              DCB      0x00,0x00

                          AREA ||area_number.31||, DATA, ALIGN=1

                          EXPORTAS ||area_number.31||, ||.data||
                  Key7
000000  0000              DCB      0x00,0x00

                          AREA ||area_number.32||, DATA, ALIGN=1

                          EXPORTAS ||area_number.32||, ||.data||
                  Key8
000000  0000              DCB      0x00,0x00

                          AREA ||area_number.33||, DATA, ALIGN=2

                          EXPORTAS ||area_number.33||, ||.data||
                  Key9
                          DCD      0x00000000

                          AREA ||area_number.34||, DATA, ALIGN=1

                          EXPORTAS ||area_number.34||, ||.data||
                  MAX_limit
000000  0000              DCB      0x00,0x00

                          AREA ||area_number.35||, DATA, ALIGN=1

                          EXPORTAS ||area_number.35||, ||.data||
                  MIN_limit
000000  0000              DCB      0x00,0x00

                          AREA ||area_number.36||, DATA, ALIGN=1

                          EXPORTAS ||area_number.36||, ||.data||
                  Test_Time
000000  0000              DCB      0x00,0x00

                          AREA ||area_number.37||, DATA, ALIGN=1

                          EXPORTAS ||area_number.37||, ||.data||
                  Test_Time1
000000  0000              DCB      0x00,0x00

                          AREA ||area_number.38||, DATA, ALIGN=1

                          EXPORTAS ||area_number.38||, ||.data||
                  Time_sw
000000  0000              DCB      0x00,0x00

                          AREA ||area_number.39||, DATA, ALIGN=1

                          EXPORTAS ||area_number.39||, ||.data||
                  Test_Daley
000000  0000              DCB      0x00,0x00

                          AREA ||area_number.40||, DATA, ALIGN=1

                          EXPORTAS ||area_number.40||, ||.data||
                  Test_C_Door
000000  0000              DCB      0x00,0x00

                          AREA ||area_number.41||, DATA, ALIGN=0

                          EXPORTAS ||area_number.41||, ||.data||
                  OFFSET_Zore
000000  00                DCB      0x00

;*** Start embedded assembler ***

#line 1 "..\\drive\\key.c"
	AREA ||.rev16_text||, CODE, READONLY
	THUMB
	EXPORT |__asm___5_key_c_pass____REV16|
#line 114 "D:\\Keil\\ARM\\CMSIS\\Include\\core_cmInstr.h"
|__asm___5_key_c_pass____REV16| PROC
#line 115

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE, READONLY
	THUMB
	EXPORT |__asm___5_key_c_pass____REVSH|
#line 128
|__asm___5_key_c_pass____REVSH| PROC
#line 129

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
