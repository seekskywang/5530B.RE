; generated by ARM C/C++ Compiler, 4.1 [Build 894]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o..\Output\key.o --asm_dir=..\Listing\ --list_dir=..\Listing\ --depend=..\Output\key.d --cpu=Cortex-M4.fp --apcs=interwork -O1 --diag_suppress=870 -I..\APP -I..\drive -I..\Include -I..\Libraries\CMSIS\inc -I..\Libraries\CMSIS\src -I..\Libraries\FWlib\inc -I..\Libraries\FWlib\src -I..\Listing -I..\Output -I..\Project -I..\STemWinLibrary522\Config -I..\STemWinLibrary522\emWinTask -I..\STemWinLibrary522\GUILib -I..\STemWinLibrary522\inc -I..\User -I..\USB\STM32_USB_HOST_Library\Class\HID\inc -I..\USB\STM32_USB_HOST_Library\Class\MSC\src -I..\USB\STM32_USB_HOST_Library\Core\src -I..\USB\USB_APP -I..\USB\STM32_USB_HOST_Library\Class\HID\src -I..\USB\STM32_USB_HOST_Library\Class\MSC\inc -I..\USB\STM32_USB_HOST_Library\Core\inc -I..\USB\STM32_USB_OTG_Driver\inc -I..\FATFS\exfuns -I..\FATFS\src\option -I..\FATFS\src -I..\MALLOC -ID:\Keil\ARM\RV31\Inc -ID:\Keil\ARM\CMSIS\Include -ID:\Keil\ARM\Inc\ST\STM32F4xx -DUSE_STDPERIPH_DRIVER -DSTM32F40XX -DUSE_USB_OTG_FS -DUSE_EMBEDDED_PHY -DUSE_USB_OTG_HS -DSTM32F40XX --omf_browse=..\Output\key.crf ..\drive\key.c]
                          THUMB

                          AREA ||i.Key_Funtion||, CODE, READONLY, ALIGN=2

                  Key_Funtion PROC
;;;212    /***************************************************************************************************************************/
;;;213    void Key_Funtion(void)
000000  e92d5ff0          PUSH     {r4-r12,lr}
;;;214    {
;;;215    	vu32 KeyValue = 0;
;;;216    	static vu8 t_KEYON;
;;;217    	static vu8 a,b;
;;;218    /****************************************************鐭寜鍔熻兘************************************************************/
;;;219    	if(Flag_Key_Scan==1)
000004  48fe              LDR      r0,|L1.1024|
000006  6800              LDR      r0,[r0,#0]  ; flagA
000008  0701              LSLS     r1,r0,#28
00000a  d575              BPL      |L1.248|
;;;220    	{
;;;221    		Flag_Key_Scan = 0;
00000c  49fc              LDR      r1,|L1.1024|
00000e  f0200008          BIC      r0,r0,#8
000012  6008              STR      r0,[r1,#0]  ; flagA
;;;222    		KeyValue = Key_Scan();
000014  f7fffffe          BL       Key_Scan
;;;223    		switch(KeyValue)
000018  3844              SUBS     r0,r0,#0x44
;;;224    		{
;;;225    			case KEY_1 ://
;;;226    			{
;;;227    				switch(page_sw){
;;;228                        case face_menu: 
;;;229                        {
;;;230                            INPUT_POW("1");
;;;231                            KeyCounter = 0;
;;;232                            BEEP_Tiggr();//瑙﹀彂铚傞福鍣?
;;;233                            break;
;;;234                        }
;;;235                        case face_set:
;;;236                        {
;;;237                             INPUT_NUM("1");
;;;238                             KeyCounter = 0;
;;;239                             BEEP_Tiggr();//瑙﹀彂铚傞福鍣?
;;;240                             break;
;;;241                        }
;;;242                        case face_r:
;;;243                        {
;;;244                            if(para_set2 == set_2_on)
00001a  49fa              LDR      r1,|L1.1028|
;;;245                            {
;;;246                                INPUT_C("1");
;;;247                                KeyCounter = 0;
;;;248                                BEEP_Tiggr();//瑙﹀彂铚傞福鍣?
;;;249                                break;
;;;250                            }
;;;251                        }   
;;;252                        case face_load:
;;;253                        {
;;;254                            INPUT_LOAD("1");
;;;255                            KeyCounter = 0;
;;;256                            BEEP_Tiggr();//瑙﹀彂铚傞福鍣?
;;;257                            break;
;;;258                        }
;;;259                        case face_cdc:
;;;260                        {
;;;261                            INPUT_CDC("1");
;;;262                            KeyCounter = 0;
;;;263                            BEEP_Tiggr();//瑙﹀彂铚傞福鍣?
;;;264                            break;
;;;265                        }
;;;266                        case face_sys_info:
;;;267                        {
;;;268                            if(admin == 1)
00001c  4afa              LDR      r2,|L1.1032|
;;;269                            {
;;;270                                INPUT_INFO(1);    
;;;271                            }
;;;272                            KeyCounter = 0;
;;;273                            BEEP_Tiggr();//瑙﹀彂铚傞福鍣?
;;;274                            break;
;;;275                        }  
;;;276                    }
;;;277    				KeyCounter = 0;
;;;278    				BEEP_Tiggr();//
;;;279    			}
;;;280    			break;
;;;281    			
;;;282    			case KEY_2 ://
;;;283    			{
;;;284    				switch(page_sw){
;;;285                        case face_menu:  
;;;286                        {
;;;287                            INPUT_POW("2");
;;;288                            KeyCounter = 0;
;;;289                            BEEP_Tiggr();//瑙﹀彂铚傞福鍣?
;;;290                        }
;;;291                        case face_set:
;;;292                        {
;;;293                            INPUT_NUM("2");
;;;294                            KeyCounter = 0;
;;;295                            BEEP_Tiggr();//瑙﹀彂铚傞福鍣?
;;;296                            break;
;;;297                        }
;;;298                        case face_r:
;;;299                        {
;;;300                            if(para_set2 == set_2_on)
;;;301                            {
;;;302                                INPUT_C("2");
;;;303                                KeyCounter = 0;
;;;304                                BEEP_Tiggr();//瑙﹀彂铚傞福鍣?
;;;305                                break;
;;;306                            }
;;;307                        }
;;;308                        case face_load:
;;;309                        {
;;;310                            INPUT_LOAD("2");
;;;311                            KeyCounter = 0;
;;;312                            BEEP_Tiggr();//瑙﹀彂铚傞福鍣?
;;;313                            break;
;;;314                        }
;;;315                        case face_cdc:
;;;316                        {
;;;317                            INPUT_CDC("2");
;;;318                            KeyCounter = 0;
;;;319                            BEEP_Tiggr();//瑙﹀彂铚傞福鍣?
;;;320                            break;
;;;321                        }
;;;322                        case face_sys_info:
;;;323                        {
;;;324                            if(admin == 1)
;;;325                            {
;;;326                                INPUT_INFO(2);    
;;;327                            }
;;;328                            KeyCounter = 0;
;;;329                            BEEP_Tiggr();//瑙﹀彂铚傞福鍣?
;;;330                            break;
;;;331                        }
;;;332       
;;;333                    }
;;;334    				KeyCounter = 0;
;;;335    				BEEP_Tiggr();//
;;;336    			}
;;;337    			break;
;;;338    			
;;;339    			case KEY_3 ://
;;;340    			{
;;;341                    switch(page_sw){
;;;342                        case face_menu:  
;;;343                        {
;;;344                            INPUT_POW("3");
;;;345                            KeyCounter = 0;
;;;346                            BEEP_Tiggr();//瑙﹀彂铚傞福鍣?
;;;347                        }
;;;348                        case face_set:
;;;349                        {
;;;350                            INPUT_NUM("3");
;;;351                            KeyCounter = 0;
;;;352                            BEEP_Tiggr();//瑙﹀彂铚傞福鍣?
;;;353                            break;
;;;354                        }
;;;355                        case face_r:
;;;356                        {
;;;357                            if(para_set2 == set_2_on)
;;;358                            {
;;;359                                INPUT_C("3");
;;;360                                KeyCounter = 0;
;;;361                                BEEP_Tiggr();//瑙﹀彂铚傞福鍣?
;;;362                                break;
;;;363                            }
;;;364                        }
;;;365                        case face_load:
;;;366                        {
;;;367                            INPUT_LOAD("3");
;;;368                            KeyCounter = 0;
;;;369                            BEEP_Tiggr();//瑙﹀彂铚傞福鍣?
;;;370                            break;
;;;371                        }
;;;372                        case face_cdc:
;;;373                        {
;;;374                            INPUT_CDC("3");
;;;375                            KeyCounter = 0;
;;;376                            BEEP_Tiggr();//瑙﹀彂铚傞福鍣?
;;;377                            break;
;;;378                        }
;;;379                        case face_sys_info:
;;;380                        {
;;;381                            if(admin == 1)
;;;382                            {
;;;383                                INPUT_INFO(3);    
;;;384                            }else{
;;;385                                pass += 3;
;;;386                            }
;;;387                            KeyCounter = 0;
;;;388                            BEEP_Tiggr();//瑙﹀彂铚傞福鍣?
;;;389                            break;
;;;390                        }
;;;391                    }
;;;392    			}
;;;393    			break;
;;;394    			
;;;395    			case KEY_4 ://
;;;396    			{
;;;397    				switch(page_sw){
;;;398                        case face_menu:  
;;;399                        {
;;;400                            INPUT_POW("4");
;;;401                            KeyCounter = 0;
;;;402                            BEEP_Tiggr();//瑙﹀彂铚傞福鍣?
;;;403                        }
;;;404                        case face_set:
;;;405                        {
;;;406                            INPUT_NUM("4");
;;;407                            KeyCounter = 0;
;;;408                            BEEP_Tiggr();//瑙﹀彂铚傞福鍣?
;;;409                            break;
;;;410                        }
;;;411                        case face_r:
;;;412                        {
;;;413                            if(para_set2 == set_2_on)
;;;414                            {
;;;415                                INPUT_C("4");
;;;416                                KeyCounter = 0;
;;;417                                BEEP_Tiggr();//瑙﹀彂铚傞福鍣?
;;;418                                break;
;;;419                            }
;;;420                        }
;;;421                        case face_load:
;;;422                        {
;;;423                            INPUT_LOAD("4");
;;;424                            KeyCounter = 0;
;;;425                            BEEP_Tiggr();//瑙﹀彂铚傞福鍣?
;;;426                            break;
;;;427                        }
;;;428                        case face_cdc:
;;;429                        {
;;;430                            INPUT_CDC("4");
;;;431                            KeyCounter = 0;
;;;432                            BEEP_Tiggr();//瑙﹀彂铚傞福鍣?
;;;433                            break;
;;;434                        }
;;;435                        case face_sys_info:
;;;436                        {
;;;437                            if(admin == 1)
;;;438                            {
;;;439                                INPUT_INFO(4);    
;;;440                            }
;;;441                            KeyCounter = 0;
;;;442                            BEEP_Tiggr();//瑙﹀彂铚傞福鍣?
;;;443                            break;
;;;444                        }
;;;445                    }
;;;446    			}
;;;447    			break;
;;;448    			
;;;449    			case KEY_5 ://
;;;450    			{
;;;451    				switch(page_sw){
;;;452                        case face_menu:  
;;;453                        {
;;;454                            INPUT_POW("5");
;;;455                            KeyCounter = 0;
;;;456                            BEEP_Tiggr();//瑙﹀彂铚傞福鍣?
;;;457                        }
;;;458                        case face_set:
;;;459                        {
;;;460                            INPUT_NUM("5");
;;;461                            KeyCounter = 0;
;;;462                            BEEP_Tiggr();//瑙﹀彂铚傞福鍣?
;;;463                            break;
;;;464                        }
;;;465                        case face_r:
;;;466                        {
;;;467                            if(para_set2 == set_2_on)
;;;468                            {
;;;469                                INPUT_C("5");
;;;470                                KeyCounter = 0;
;;;471                                BEEP_Tiggr();//瑙﹀彂铚傞福鍣?
;;;472                                break;
;;;473                            }
;;;474                        }
;;;475                        case face_load:
;;;476                        {
;;;477                            INPUT_LOAD("5");
;;;478                            KeyCounter = 0;
;;;479                            BEEP_Tiggr();//瑙﹀彂铚傞福鍣?
;;;480                            break;
;;;481                        }
;;;482                        case face_cdc:
;;;483                        {
;;;484                            INPUT_CDC("5");
;;;485                            KeyCounter = 0;
;;;486                            BEEP_Tiggr();//瑙﹀彂铚傞福鍣?
;;;487                            break;
;;;488                        }
;;;489                        case face_sys_info:
;;;490                        {
;;;491                            if(admin == 1)
;;;492                            {
;;;493                                INPUT_INFO(5);    
;;;494                            }else{
;;;495                                pass += 5;
;;;496                            }
;;;497                            KeyCounter = 0;
;;;498                            BEEP_Tiggr();//瑙﹀彂铚傞福鍣?
;;;499                            break;
;;;500                        }
;;;501                    }
;;;502    			}
;;;503    			break;	
;;;504    			
;;;505    			case KEY_6 ://
;;;506    			{
;;;507    				switch(page_sw){
;;;508                        case face_menu:  
;;;509                        {
;;;510                            INPUT_POW("6");
;;;511                            KeyCounter = 0;
;;;512                            BEEP_Tiggr();//瑙﹀彂铚傞福鍣?
;;;513                        }
;;;514                        case face_set:
;;;515                        {
;;;516                            INPUT_NUM("6");
;;;517                            KeyCounter = 0;
;;;518                            BEEP_Tiggr();//瑙﹀彂铚傞福鍣?
;;;519                            break;
;;;520                        }
;;;521                        case face_r:
;;;522                        {
;;;523                            if(para_set2 == set_2_on)
;;;524                            {
;;;525                                INPUT_C("6");
;;;526                                KeyCounter = 0;
;;;527                                BEEP_Tiggr();//瑙﹀彂铚傞福鍣?
;;;528                                break;
;;;529                            }
;;;530                        }
;;;531                        case face_load:
;;;532                        {
;;;533                            INPUT_LOAD("6");
;;;534                            KeyCounter = 0;
;;;535                            BEEP_Tiggr();//瑙﹀彂铚傞福鍣?
;;;536                            break;
;;;537                        }
;;;538                        case face_cdc:
;;;539                        {
;;;540                            INPUT_CDC("6");
;;;541                            KeyCounter = 0;
;;;542                            BEEP_Tiggr();//瑙﹀彂铚傞福鍣?
;;;543                            break;
;;;544                        } 
;;;545                        case face_sys_info:
;;;546                        {
;;;547                            if(admin == 1)
;;;548                            {
;;;549                                INPUT_INFO(6);    
;;;550                            }
;;;551                            KeyCounter = 0;
;;;552                            BEEP_Tiggr();//瑙﹀彂铚傞福鍣?
;;;553                            break;
;;;554                        }
;;;555                    }
;;;556    			}
;;;557    			break;
;;;558    			
;;;559    			case KEY_7 ://
;;;560    			{
;;;561    				switch(page_sw){
;;;562                        case face_menu:  
;;;563                        {
;;;564                            INPUT_POW("7");
;;;565                            KeyCounter = 0;
;;;566                            BEEP_Tiggr();//瑙﹀彂铚傞福鍣?
;;;567                        }
;;;568                        case face_set:
;;;569                        {
;;;570                            INPUT_NUM("7");
;;;571                            KeyCounter = 0;
;;;572                            BEEP_Tiggr();//瑙﹀彂铚傞福鍣?
;;;573                            break;
;;;574                        }
;;;575                        case face_r:
;;;576                        {
;;;577                            if(para_set2 == set_2_on)
;;;578                            {
;;;579                                INPUT_C("7");
;;;580                                KeyCounter = 0;
;;;581                                BEEP_Tiggr();//瑙﹀彂铚傞福鍣?
;;;582                                break;
;;;583                            }
;;;584                        }
;;;585                        case face_load:
;;;586                        {
;;;587                            INPUT_LOAD("7");
;;;588                            KeyCounter = 0;
;;;589                            BEEP_Tiggr();//瑙﹀彂铚傞福鍣?
;;;590                            break;
;;;591                        }
;;;592                        case face_cdc:
;;;593                        {
;;;594                            INPUT_CDC("7");
;;;595                            KeyCounter = 0;
;;;596                            BEEP_Tiggr();//瑙﹀彂铚傞福鍣?
;;;597                            break;
;;;598                        }
;;;599                        case face_sys_info:
;;;600                        {
;;;601                            if(admin == 1)
;;;602                            {
;;;603                                INPUT_INFO(7);    
;;;604                            }
;;;605                            KeyCounter = 0;
;;;606                            BEEP_Tiggr();//瑙﹀彂铚傞福鍣?
;;;607                            break;
;;;608                        }
;;;609                    }
;;;610    			}
;;;611    			break;
;;;612    			
;;;613    			case KEY_8 ://
;;;614    			{
;;;615    				switch(page_sw){
;;;616                        case face_menu:  
;;;617                        {
;;;618                            INPUT_POW("8");
;;;619                            KeyCounter = 0;
;;;620                            BEEP_Tiggr();//瑙﹀彂铚傞福鍣?
;;;621                        }
;;;622                        case face_set:
;;;623                        {
;;;624                            INPUT_NUM("8");
;;;625                            KeyCounter = 0;
;;;626                            BEEP_Tiggr();//瑙﹀彂铚傞福鍣?
;;;627                            break;
;;;628                        }
;;;629                        case face_r:
;;;630                        {
;;;631                            if(para_set2 == set_2_on)
;;;632                            {
;;;633                                INPUT_C("8");
;;;634                                KeyCounter = 0;
;;;635                                BEEP_Tiggr();//瑙﹀彂铚傞福鍣?
;;;636                                break;
;;;637                            }
;;;638                        }
;;;639                        case face_load:
;;;640                        {
;;;641                            INPUT_LOAD("8");
;;;642                            KeyCounter = 0;
;;;643                            BEEP_Tiggr();//瑙﹀彂铚傞福鍣?
;;;644                            break;
;;;645                        }
;;;646                        case face_cdc:
;;;647                        {
;;;648                            INPUT_CDC("8");
;;;649                            KeyCounter = 0;
;;;650                            BEEP_Tiggr();//瑙﹀彂铚傞福鍣?
;;;651                            break;
;;;652                        }
;;;653                        case face_sys_info:
;;;654                        {
;;;655                            if(admin == 1)
;;;656                            {
;;;657                                INPUT_INFO(8);    
;;;658                            }
;;;659                            KeyCounter = 0;
;;;660                            BEEP_Tiggr();//瑙﹀彂铚傞福鍣?
;;;661                            break;
;;;662                        }
;;;663                    }
;;;664    			}
;;;665    			break;
;;;666    			
;;;667    			case KEY_9 ://
;;;668    			{
;;;669    				switch(page_sw){
;;;670                        case face_menu:  
;;;671                        {
;;;672                            INPUT_POW("9");
;;;673                            KeyCounter = 0;
;;;674                            BEEP_Tiggr();//瑙﹀彂铚傞福鍣?
;;;675                        }
;;;676                        case face_set:
;;;677                        {
;;;678                            INPUT_NUM("9");
;;;679                            KeyCounter = 0;
;;;680                            BEEP_Tiggr();//瑙﹀彂铚傞福鍣?
;;;681                            break;
;;;682                        }
;;;683                        case face_r:
;;;684                        {
;;;685                            if(para_set2 == set_2_on)
;;;686                            {
;;;687                                INPUT_C("9");
;;;688                                KeyCounter = 0;
;;;689                                BEEP_Tiggr();//瑙﹀彂铚傞福鍣?
;;;690                                break;
;;;691                            }
;;;692                        }
;;;693                        case face_load:
;;;694                        {
;;;695                            INPUT_LOAD("9");
;;;696                            KeyCounter = 0;
;;;697                            BEEP_Tiggr();//瑙﹀彂铚傞福鍣?
;;;698                            break;
;;;699                        }
;;;700                        case face_cdc:
;;;701                        {
;;;702                            INPUT_CDC("9");
;;;703                            KeyCounter = 0;
;;;704                            BEEP_Tiggr();//瑙﹀彂铚傞福鍣?
;;;705                            break;
;;;706                        }
;;;707                        case face_sys_info:
;;;708                        {
;;;709                            if(admin == 1)
;;;710                            {
;;;711                                INPUT_INFO(9);    
;;;712                            }
;;;713                            KeyCounter = 0;
;;;714                            BEEP_Tiggr();//瑙﹀彂铚傞福鍣?
;;;715                            break;
;;;716                        }
;;;717                    }
;;;718    			}
;;;719    			break;
;;;720    			
;;;721    			case KEY_0 ://
;;;722    			{
;;;723    				switch(page_sw){
;;;724                        case face_menu:  
;;;725                        {
;;;726                            INPUT_POW("0");
;;;727                            KeyCounter = 0;
;;;728                            BEEP_Tiggr();//瑙﹀彂铚傞福鍣?
;;;729                        }
;;;730                        case face_set:
;;;731                        {
;;;732                            INPUT_NUM("0");
;;;733                            KeyCounter = 0;
;;;734                            BEEP_Tiggr();//瑙﹀彂铚傞福鍣?
;;;735                            break;
;;;736                        }
;;;737                        case face_r:
;;;738                        {
;;;739                            if(para_set2 == set_2_on)
;;;740                            {
;;;741                                INPUT_C("0");
;;;742                                KeyCounter = 0;
;;;743                                BEEP_Tiggr();//瑙﹀彂铚傞福鍣?
;;;744                                break;
;;;745                            }
;;;746                        }
;;;747                        case face_load:
;;;748                        {
;;;749                            INPUT_LOAD("0");
;;;750                            KeyCounter = 0;
;;;751                            BEEP_Tiggr();//瑙﹀彂铚傞福鍣?
;;;752                            break;
;;;753                        }
;;;754                        case face_cdc:
;;;755                        {
;;;756                            INPUT_CDC("0");
;;;757                            KeyCounter = 0;
;;;758                            BEEP_Tiggr();//瑙﹀彂铚傞福鍣?
;;;759                            break;
;;;760                        }
;;;761                        case face_sys_info:
;;;762                        {
;;;763                            if(admin == 1)
;;;764                            {
;;;765                                INPUT_INFO(0);    
;;;766                            }else{
;;;767                                pass += 1;
;;;768                            }
;;;769                            KeyCounter = 0;
;;;770                            BEEP_Tiggr();//瑙﹀彂铚傞福鍣?
;;;771                            break;
;;;772                        }                    
;;;773                    }
;;;774    			}
;;;775    			break;
;;;776    			
;;;777    			case KEY_dian ://
;;;778    			{
;;;779    				switch(page_sw){
;;;780                        case face_menu:
;;;781                        {
;;;782                            INPUT_POW(".");
;;;783                            KeyCounter = 0;
;;;784                            BEEP_Tiggr();//瑙﹀彂铚傞福鍣?
;;;785                            break;
;;;786                        }
;;;787                        case face_set:
;;;788                        {
;;;789                            INPUT_NUM(".");
;;;790                            KeyCounter = 0;
;;;791                            BEEP_Tiggr();//瑙﹀彂铚傞福鍣?
;;;792                            break;
;;;793                        }
;;;794                        case face_load:
;;;795                        {
;;;796                            INPUT_LOAD(".");
;;;797                            KeyCounter = 0;
;;;798                            BEEP_Tiggr();//瑙﹀彂铚傞福鍣?
;;;799                            break;
;;;800                        }
;;;801                        case face_r:
;;;802                        {
;;;803                            if(para_set2 == set_2_on)
;;;804                            {
;;;805                                INPUT_C(".");
;;;806                                KeyCounter = 0;
;;;807                                BEEP_Tiggr();//瑙﹀彂铚傞福鍣?
;;;808                                break;
;;;809                            }
;;;810                        }
;;;811                        case face_cdc:
;;;812                        {
;;;813                            INPUT_CDC(".");
;;;814                            KeyCounter = 0;
;;;815                            BEEP_Tiggr();//瑙﹀彂铚傞福鍣?
;;;816                            break;
;;;817                        }                     
;;;818                    }
;;;819    			}
;;;820    			break;
;;;821    			
;;;822    			case KEY_ESC :
;;;823    			{
;;;824                    sLCD_WR_REG(0x01);
;;;825    //                main();
;;;826    				timer_sw = 0;
;;;827    				KeyCounter = 0;
;;;828    //				BEEP_Tiggr();//瑙﹀彂铚傞福鍣
;;;829    			}
;;;830    			break;
;;;831    			
;;;832    			case PUSH_Lift :
;;;833    			{
;;;834    				switch(page_sw){
;;;835                        case face_set:  //绯荤粺璁剧疆
;;;836                        {
;;;837                            SET_OP_LEFT();  //璁剧疆閫夐」鍒囨崲
;;;838                            KeyCounter = 0;
;;;839                            BEEP_Tiggr();//瑙﹀彂铚傞福鍣?
;;;840                            break;
;;;841                        }
;;;842                        case face_sys_info:
;;;843                        {
;;;844                            if(admin == 1)
;;;845                            {
;;;846                                SYS_INFO_LEFT();  //璁剧疆閫夐」鍒囨崲
;;;847                            } 
;;;848                            KeyCounter = 0;
;;;849                            BEEP_Tiggr();//瑙﹀彂铚傞福鍣?
;;;850                            break;
;;;851                        }
;;;852                        case face_cdc:  //绯荤粺璁剧疆
;;;853                        {
;;;854                            CDC_OP_LEFT();  //璁剧疆閫夐」鍒囨崲
;;;855                            KeyCounter = 0;
;;;856                            BEEP_Tiggr();//瑙﹀彂铚傞福鍣?
;;;857                            break;
;;;858                        }
;;;859                    }
;;;860    			}
;;;861    			break;
;;;862    			case PUSH_Right :
;;;863    			{
;;;864    				switch(page_sw){
;;;865                        case face_set:  //绯荤粺璁剧疆
;;;866                        {
;;;867                            SET_OP_RIGHT();  //璁剧疆閫夐」鍒囨崲
;;;868                            KeyCounter = 0;
;;;869                            BEEP_Tiggr();//瑙﹀彂铚傞福鍣?
;;;870                            break;
;;;871                        }
;;;872                        case face_sys_info:
;;;873                        {
;;;874                            if(admin == 1)
;;;875                            {
;;;876                                SYS_INFO_RIGHT();  //璁剧疆閫夐」鍒囨崲
;;;877                            } 
;;;878                            KeyCounter = 0;
;;;879                            BEEP_Tiggr();//瑙﹀彂铚傞福鍣?
;;;880                            break;
;;;881                        }
;;;882                        case face_cdc:  //绯荤粺璁剧疆
;;;883                        {
;;;884                            CDC_OP_RIGHT();  //璁剧疆閫夐」鍒囨崲
;;;885                            KeyCounter = 0;
;;;886                            BEEP_Tiggr();//瑙﹀彂铚傞福鍣?
;;;887                            break;
;;;888                        }
;;;889                    }
;;;890    			}
;;;891    			break;
;;;892    			case PUSH_Up :
;;;893    			{
;;;894    				switch(page_sw){
;;;895                        case face_menu:
;;;896                        {
;;;897                            KeyCounter = 0;
;;;898                            BEEP_Tiggr();//瑙﹀彂铚傞福鍣?
;;;899                            MENU_OP_UP();
;;;900                            break;
;;;901                        }                    
;;;902                        case face_load:
;;;903                        {
;;;904                            KeyCounter = 0;
;;;905                            BEEP_Tiggr();//瑙﹀彂铚傞福鍣?
;;;906                            LOAD_OP_UP();
;;;907                            break;
;;;908                        }
;;;909                        case face_set:
;;;910                        {
;;;911                            SET_OP_UP();  //璁剧疆閫夐」鍒囨崲
;;;912                            KeyCounter = 0;
;;;913                            BEEP_Tiggr();//瑙﹀彂铚傞福鍣?
;;;914                            break;
;;;915                        }
;;;916                        case face_r:
;;;917                        {
;;;918                            if(para_set2 == set_2_on)
;;;919                            {
;;;920                                OC_OP_UP();
;;;921                                KeyCounter = 0;
;;;922                                BEEP_Tiggr();//瑙﹀彂铚傞福鍣?
;;;923                                break;
;;;924                            }
;;;925    
;;;926                        }
;;;927                        case face_cdc:
;;;928                        {
;;;929                            CDC_OP_UP();
;;;930                            KeyCounter = 0;
;;;931                            BEEP_Tiggr();//瑙﹀彂铚傞福鍣?
;;;932                            break;
;;;933                        }
;;;934                        case face_sys_info:
;;;935                        {
;;;936                            if(admin == 1)
;;;937                            {
;;;938                                SYS_INFO_UP();  //璁剧疆閫夐」鍒囨崲
;;;939                            }                        
;;;940                            KeyCounter = 0;
;;;941                            BEEP_Tiggr();//瑙﹀彂铚傞福鍣?
;;;942                            break;
;;;943                        }
;;;944    
;;;945                    }
;;;946    			}
;;;947    			break;
;;;948    			case PUSH_Down :
;;;949    			{
;;;950    				switch(page_sw){
;;;951                        case face_menu:
;;;952                        {
;;;953                            KeyCounter = 0;
;;;954                            BEEP_Tiggr();//瑙﹀彂铚傞福鍣?
;;;955                            MENU_OP_DOWN();
;;;956                            break;
;;;957                        }  
;;;958                        case face_load:
;;;959                        {
;;;960                           	KeyCounter = 0;
;;;961                            BEEP_Tiggr();//瑙﹀彂铚傞福鍣?
;;;962                            LOAD_OP_DOWN();
;;;963                            break;
;;;964                        }
;;;965                        case face_set:  //绯荤粺璁剧疆
;;;966                        {
;;;967                            SET_OP_DOWN();  //璁剧疆閫夐」鍒囨崲
;;;968                            KeyCounter = 0;
;;;969                            BEEP_Tiggr();//瑙﹀彂铚傞福鍣?
;;;970                            break;
;;;971                        }
;;;972                        case face_r:
;;;973                        {
;;;974                            if(para_set2 == set_2_on)
;;;975                            {
;;;976                                OC_OP_DOWN();
;;;977                                KeyCounter = 0;
;;;978                                BEEP_Tiggr();//瑙﹀彂铚傞福鍣?
;;;979                                break;
;;;980                            }
;;;981                        }
;;;982                        case face_cdc:
;;;983                        {
;;;984                            CDC_OP_DOWN();
;;;985                            KeyCounter = 0;
;;;986                            BEEP_Tiggr();//瑙﹀彂铚傞福鍣?
;;;987                            break;
;;;988                        }
;;;989                        case face_sys_info:
;;;990                        {
;;;991                            if(admin == 1)
;;;992                            {
;;;993                                SYS_INFO_DOWN();  //璁剧疆閫夐」鍒囨崲
;;;994                            } 
;;;995                            KeyCounter = 0;
;;;996                            BEEP_Tiggr();//瑙﹀彂铚傞福鍣?
;;;997                            break;
;;;998                        }
;;;999       
;;;1000                   }
;;;1001   			}
;;;1002   			break;
;;;1003   			
;;;1004   			case ENTER ://
;;;1005   			{
;;;1006   				switch(page_sw){
;;;1007                       case face_menu:
;;;1008                       {
;;;1009                           MENU_SET();
;;;1010                           KeyCounter = 0;
;;;1011                           BEEP_Tiggr();//瑙﹀彂铚傞福鍣?
;;;1012                           break;
;;;1013                       }  
;;;1014                       case face_set:
;;;1015                       {
;;;1016                           PARA_SET();  //鍙傛暟璁剧疆
;;;1017                           KeyCounter = 0;
;;;1018                           BEEP_Tiggr();//瑙﹀彂铚傞福鍣?
;;;1019                           break;                        
;;;1020                       }
;;;1021                       case face_r:
;;;1022                       {
;;;1023                           if(para_set2 == set_2_on)
;;;1024                           {
;;;1025                               OC_SET();
;;;1026                               KeyCounter = 0;
;;;1027                               BEEP_Tiggr();//瑙﹀彂铚傞福鍣?
;;;1028                               break;
;;;1029                           }
;;;1030                       }
;;;1031                       case face_load:
;;;1032                       {
;;;1033                           LOAD_SET();
;;;1034                           KeyCounter = 0;
;;;1035                           BEEP_Tiggr();//瑙﹀彂铚傞福鍣?
;;;1036                           break;
;;;1037                       }
;;;1038                       case face_cdc:
;;;1039                       {
;;;1040                           CDC_SET();
;;;1041                           KeyCounter = 0;
;;;1042                           BEEP_Tiggr();//瑙﹀彂铚傞福鍣?
;;;1043                           break;
;;;1044                       }
;;;1045                       case face_sys_info:
;;;1046                       {
;;;1047                           CFM_PASS();
;;;1048                           KeyCounter = 0;
;;;1049                           BEEP_Tiggr();//瑙﹀彂铚傞福鍣?
;;;1050                           break;
;;;1051                       }
;;;1052                   }
;;;1053   			}
;;;1054   			break;
;;;1055   			case PUSH_DISP :
;;;1056   			{
;;;1057   				switch(track)
;;;1058                   {
;;;1059                       case face_r:
;;;1060                       {
;;;1061                           WM_DeleteWindow(hWinR);
00001e  4bfb              LDR      r3,|L1.1036|
;;;1062                           WM_DeleteWindow(hWinWind);
000020  4efb              LDR      r6,|L1.1040|
;;;1063                           WM_DeleteWindow(hWinG);
000022  4ffc              LDR      r7,|L1.1044|
;;;1064                           WM_DeleteWindow(load_wind);
000024  f8df83f0          LDR      r8,|L1.1048|
;;;1065                           WM_DeleteWindow(hWinsysinfo);
000028  f8df93f0          LDR      r9,|L1.1052|
;;;1066                           WM_DeleteWindow(hWincdc);
00002c  f8dfa3f0          LDR      r10,|L1.1056|
;;;1067                           WM_DeleteWindow(hWinset);                       
000030  f8dfb3f0          LDR      r11,|L1.1060|
000034  2400              MOVS     r4,#0                 ;215
000036  4dfc              LDR      r5,|L1.1064|
000038  2834              CMP      r0,#0x34              ;223
00003a  d25d              BCS      |L1.248|
00003c  e8dff000          TBB      [pc,r0]               ;223
000040  f0efeeed          DCB      0xf0,0xef,0xee,0xed
000044  5c5c5c5c          DCB      0x5c,0x5c,0x5c,0x5c
000048  eceb1aea          DCB      0xec,0xeb,0x1a,0xea
00004c  5c5c5c5c          DCB      0x5c,0x5c,0x5c,0x5c
000050  e9e857f1          DCB      0xe9,0xe8,0x57,0xf1
000054  5c5c5c5c          DCB      0x5c,0x5c,0x5c,0x5c
000058  e6e596e4          DCB      0xe6,0xe5,0x96,0xe4
00005c  5c5c5c5c          DCB      0x5c,0x5c,0x5c,0x5c
000060  e3e2e1e0          DCB      0xe3,0xe2,0xe1,0xe0
000064  5c5c5c5c          DCB      0x5c,0x5c,0x5c,0x5c
000068  dfdedddc          DCB      0xdf,0xde,0xdd,0xdc
00006c  5c5c5c5c          DCB      0x5c,0x5c,0x5c,0x5c
000070  dbdad9d8          DCB      0xdb,0xda,0xd9,0xd8
000074  48ed              LDR      r0,|L1.1068|
000076  7800              LDRB     r0,[r0,#0]            ;227  ; page_sw
000078  2808              CMP      r0,#8                 ;227
00007a  d233              BCS      |L1.228|
00007c  e8dff000          TBB      [pc,r0]               ;227
000080  32230412          DCB      0x32,0x23,0x04,0x12
000084  150b322a          DCB      0x15,0x0b,0x32,0x2a
000088  a0e9              ADR      r0,|L1.1072|
00008a  f7fffffe          BL       INPUT_POW
00008e  81ac              STRH     r4,[r5,#0xc]          ;231
000090  f7fffffe          BL       BEEP_Tiggr
000094  e026              B        |L1.228|
000096  a0e6              ADR      r0,|L1.1072|
000098  f7fffffe          BL       INPUT_NUM
00009c  81ac              STRH     r4,[r5,#0xc]          ;238
00009e  f7fffffe          BL       BEEP_Tiggr
0000a2  e01f              B        |L1.228|
0000a4  7808              LDRB     r0,[r1,#0]            ;244  ; para_set2
0000a6  28ff              CMP      r0,#0xff              ;244
0000a8  d006              BEQ      |L1.184|
0000aa  a0e1              ADR      r0,|L1.1072|
0000ac  f7fffffe          BL       INPUT_LOAD
0000b0  81ac              STRH     r4,[r5,#0xc]          ;255
0000b2  f7fffffe          BL       BEEP_Tiggr
0000b6  e015              B        |L1.228|
                  |L1.184|
0000b8  a0dd              ADR      r0,|L1.1072|
0000ba  f7fffffe          BL       INPUT_C
0000be  81ac              STRH     r4,[r5,#0xc]          ;247
0000c0  f7fffffe          BL       BEEP_Tiggr
0000c4  e00e              B        |L1.228|
0000c6  a0da              ADR      r0,|L1.1072|
0000c8  f7fffffe          BL       INPUT_CDC
0000cc  81ac              STRH     r4,[r5,#0xc]          ;262
0000ce  f7fffffe          BL       BEEP_Tiggr
0000d2  e007              B        |L1.228|
0000d4  7810              LDRB     r0,[r2,#0]            ;268  ; admin
0000d6  2801              CMP      r0,#1                 ;268
0000d8  d101              BNE      |L1.222|
0000da  f7fffffe          BL       INPUT_INFO
                  |L1.222|
0000de  81ac              STRH     r4,[r5,#0xc]          ;272
0000e0  f7fffffe          BL       BEEP_Tiggr
                  |L1.228|
0000e4  81ac              STRH     r4,[r5,#0xc]          ;277
0000e6  e8bd5ff0          POP      {r4-r12,lr}           ;278
0000ea  f7ffbffe          B.W      BEEP_Tiggr
0000ee  48cf              LDR      r0,|L1.1068|
0000f0  7800              LDRB     r0,[r0,#0]            ;284  ; page_sw
0000f2  2808              CMP      r0,#8                 ;284
0000f4  d235              BCS      |L1.354|
0000f6  e000              B        |L1.250|
                  |L1.248|
0000f8  e0ba              B        |L1.624|
                  |L1.250|
0000fa  e8dff000          TBB      [pc,r0]               ;284
0000fe  3222              DCB      0x32,0x22
000100  0411140a          DCB      0x04,0x11,0x14,0x0a
000104  3229              DCB      0x32,0x29
000106  a0cb              ADR      r0,|L1.1076|
000108  f7fffffe          BL       INPUT_POW
00010c  81ac              STRH     r4,[r5,#0xc]          ;288
00010e  f7fffffe          BL       BEEP_Tiggr
000112  a0c8              ADR      r0,|L1.1076|
000114  f7fffffe          BL       INPUT_NUM
000118  81ac              STRH     r4,[r5,#0xc]          ;294
00011a  f7fffffe          BL       BEEP_Tiggr
00011e  e020              B        |L1.354|
000120  7808              LDRB     r0,[r1,#0]            ;300  ; para_set2
000122  28ff              CMP      r0,#0xff              ;300
000124  d006              BEQ      |L1.308|
000126  a0c3              ADR      r0,|L1.1076|
000128  f7fffffe          BL       INPUT_LOAD
00012c  81ac              STRH     r4,[r5,#0xc]          ;311
00012e  f7fffffe          BL       BEEP_Tiggr
000132  e016              B        |L1.354|
                  |L1.308|
000134  a0bf              ADR      r0,|L1.1076|
000136  f7fffffe          BL       INPUT_C
00013a  81ac              STRH     r4,[r5,#0xc]          ;303
00013c  f7fffffe          BL       BEEP_Tiggr
000140  e00f              B        |L1.354|
000142  a0bc              ADR      r0,|L1.1076|
000144  f7fffffe          BL       INPUT_CDC
000148  81ac              STRH     r4,[r5,#0xc]          ;318
00014a  f7fffffe          BL       BEEP_Tiggr
00014e  e008              B        |L1.354|
000150  7810              LDRB     r0,[r2,#0]            ;324  ; admin
000152  2801              CMP      r0,#1                 ;324
000154  d102              BNE      |L1.348|
000156  2002              MOVS     r0,#2                 ;326
000158  f7fffffe          BL       INPUT_INFO
                  |L1.348|
00015c  81ac              STRH     r4,[r5,#0xc]          ;328
00015e  f7fffffe          BL       BEEP_Tiggr
                  |L1.354|
000162  81ac              STRH     r4,[r5,#0xc]          ;334
000164  e8bd5ff0          POP      {r4-r12,lr}           ;335
000168  f7ffbffe          B.W      BEEP_Tiggr
00016c  48af              LDR      r0,|L1.1068|
00016e  7800              LDRB     r0,[r0,#0]            ;341  ; page_sw
000170  2808              CMP      r0,#8                 ;341
                  |L1.370|
000172  d27d              BCS      |L1.624|
000174  e8dff000          TBB      [pc,r0]               ;341
000178  7c250412          DCB      0x7c,0x25,0x04,0x12
00017c  150a7c2d          DCB      0x15,0x0a,0x7c,0x2d
000180  a0ad              ADR      r0,|L1.1080|
000182  f7fffffe          BL       INPUT_POW
000186  81ac              STRH     r4,[r5,#0xc]          ;345
000188  f7fffffe          BL       BEEP_Tiggr
00018c  a0aa              ADR      r0,|L1.1080|
00018e  f7fffffe          BL       INPUT_NUM
000192  81ac              STRH     r4,[r5,#0xc]          ;351
000194  e8bd5ff0          POP      {r4-r12,lr}           ;352
000198  f7ffbffe          B.W      BEEP_Tiggr
00019c  7808              LDRB     r0,[r1,#0]            ;357  ; para_set2
00019e  28ff              CMP      r0,#0xff              ;357
0001a0  d007              BEQ      |L1.434|
0001a2  a0a5              ADR      r0,|L1.1080|
0001a4  f7fffffe          BL       INPUT_LOAD
0001a8  81ac              STRH     r4,[r5,#0xc]          ;368
0001aa  e8bd5ff0          POP      {r4-r12,lr}           ;369
0001ae  f7ffbffe          B.W      BEEP_Tiggr
                  |L1.434|
0001b2  a0a1              ADR      r0,|L1.1080|
0001b4  f7fffffe          BL       INPUT_C
0001b8  81ac              STRH     r4,[r5,#0xc]          ;360
0001ba  e8bd5ff0          POP      {r4-r12,lr}           ;361
0001be  f7ffbffe          B.W      BEEP_Tiggr
0001c2  a09d              ADR      r0,|L1.1080|
0001c4  f7fffffe          BL       INPUT_CDC
0001c8  81ac              STRH     r4,[r5,#0xc]          ;375
0001ca  e8bd5ff0          POP      {r4-r12,lr}           ;376
0001ce  f7ffbffe          B.W      BEEP_Tiggr
0001d2  7810              LDRB     r0,[r2,#0]            ;381  ; admin
0001d4  2801              CMP      r0,#1                 ;381
0001d6  d007              BEQ      |L1.488|
0001d8  7828              LDRB     r0,[r5,#0]            ;385  ; pass
0001da  1cc0              ADDS     r0,r0,#3              ;385
0001dc  7028              STRB     r0,[r5,#0]            ;385
                  |L1.478|
0001de  81ac              STRH     r4,[r5,#0xc]          ;387
0001e0  e8bd5ff0          POP      {r4-r12,lr}           ;388
0001e4  f7ffbffe          B.W      BEEP_Tiggr
                  |L1.488|
0001e8  2003              MOVS     r0,#3                 ;383
0001ea  f7fffffe          BL       INPUT_INFO
0001ee  e7f6              B        |L1.478|
0001f0  e17c              B        |L1.1260|
0001f2  e098              B        |L1.806|
0001f4  e3fb              B        |L1.2542|
0001f6  e2b2              B        |L1.1886|
0001f8  e138              B        |L1.1132|
0001fa  e3fd              B        |L1.2552|
0001fc  e22a              B        |L1.1620|
0001fe  e3fc              B        |L1.2554|
000200  e0cf              B        |L1.930|
000202  e3fb              B        |L1.2556|
000204  e1f2              B        |L1.1516|
000206  e3fa              B        |L1.2558|
000208  e04b              B        |L1.674|
00020a  e1ad              B        |L1.1384|
00020c  e3f8              B        |L1.2560|
00020e  e008              B        |L1.546|
000210  e249              B        |L1.1702|
000212  e3f6              B        |L1.2562|
000214  e3cb              B        |L1.2478|
000216  e2dd              B        |L1.2004|
000218  e3f4              B        |L1.2564|
00021a  e313              B        |L1.2116|
00021c  e264              B        |L1.1768|
00021e  e221              B        |L1.1636|
000220  e3f1              B        |L1.2566|
                  |L1.546|
000222  4882              LDR      r0,|L1.1068|
000224  7800              LDRB     r0,[r0,#0]            ;397  ; page_sw
000226  2808              CMP      r0,#8                 ;397
                  |L1.552|
000228  d2a3              BCS      |L1.370|
00022a  e8dff000          TBB      [pc,r0]               ;397
00022e  2127              DCB      0x21,0x27
000230  0412150a          DCB      0x04,0x12,0x15,0x0a
000234  212f              DCB      0x21,0x2f
000236  a081              ADR      r0,|L1.1084|
000238  f7fffffe          BL       INPUT_POW
00023c  81ac              STRH     r4,[r5,#0xc]          ;401
00023e  f7fffffe          BL       BEEP_Tiggr
000242  a07e              ADR      r0,|L1.1084|
000244  f7fffffe          BL       INPUT_NUM
000248  81ac              STRH     r4,[r5,#0xc]          ;407
00024a  e8bd5ff0          POP      {r4-r12,lr}           ;408
00024e  f7ffbffe          B.W      BEEP_Tiggr
000252  7808              LDRB     r0,[r1,#0]            ;413  ; para_set2
000254  28ff              CMP      r0,#0xff              ;413
000256  d007              BEQ      |L1.616|
000258  a078              ADR      r0,|L1.1084|
00025a  f7fffffe          BL       INPUT_LOAD
00025e  81ac              STRH     r4,[r5,#0xc]          ;424
000260  e8bd5ff0          POP      {r4-r12,lr}           ;425
000264  f7ffbffe          B.W      BEEP_Tiggr
                  |L1.616|
000268  a074              ADR      r0,|L1.1084|
00026a  f7fffffe          BL       INPUT_C
00026e  e000              B        |L1.626|
                  |L1.624|
000270  e119              B        |L1.1190|
                  |L1.626|
000272  81ac              STRH     r4,[r5,#0xc]          ;416
000274  e8bd5ff0          POP      {r4-r12,lr}           ;417
000278  f7ffbffe          B.W      BEEP_Tiggr
00027c  a06f              ADR      r0,|L1.1084|
00027e  f7fffffe          BL       INPUT_CDC
000282  81ac              STRH     r4,[r5,#0xc]          ;431
000284  e8bd5ff0          POP      {r4-r12,lr}           ;432
000288  f7ffbffe          B.W      BEEP_Tiggr
00028c  7810              LDRB     r0,[r2,#0]            ;437  ; admin
00028e  2801              CMP      r0,#1                 ;437
000290  d102              BNE      |L1.664|
000292  2004              MOVS     r0,#4                 ;439
000294  f7fffffe          BL       INPUT_INFO
                  |L1.664|
000298  81ac              STRH     r4,[r5,#0xc]          ;441
00029a  e8bd5ff0          POP      {r4-r12,lr}           ;442
00029e  f7ffbffe          B.W      BEEP_Tiggr
                  |L1.674|
0002a2  4862              LDR      r0,|L1.1068|
0002a4  7800              LDRB     r0,[r0,#0]            ;451  ; page_sw
0002a6  2808              CMP      r0,#8                 ;451
                  |L1.680|
0002a8  d2be              BCS      |L1.552|
0002aa  e8dff000          TBB      [pc,r0]               ;451
0002ae  fc25              DCB      0xfc,0x25
0002b0  0412150a          DCB      0x04,0x12,0x15,0x0a
0002b4  fc2d              DCB      0xfc,0x2d
0002b6  a062              ADR      r0,|L1.1088|
0002b8  f7fffffe          BL       INPUT_POW
0002bc  81ac              STRH     r4,[r5,#0xc]          ;455
0002be  f7fffffe          BL       BEEP_Tiggr
0002c2  a05f              ADR      r0,|L1.1088|
0002c4  f7fffffe          BL       INPUT_NUM
0002c8  81ac              STRH     r4,[r5,#0xc]          ;461
0002ca  e8bd5ff0          POP      {r4-r12,lr}           ;462
0002ce  f7ffbffe          B.W      BEEP_Tiggr
0002d2  7808              LDRB     r0,[r1,#0]            ;467  ; para_set2
0002d4  28ff              CMP      r0,#0xff              ;467
0002d6  d007              BEQ      |L1.744|
0002d8  a059              ADR      r0,|L1.1088|
0002da  f7fffffe          BL       INPUT_LOAD
0002de  81ac              STRH     r4,[r5,#0xc]          ;478
0002e0  e8bd5ff0          POP      {r4-r12,lr}           ;479
0002e4  f7ffbffe          B.W      BEEP_Tiggr
                  |L1.744|
0002e8  a055              ADR      r0,|L1.1088|
0002ea  f7fffffe          BL       INPUT_C
0002ee  81ac              STRH     r4,[r5,#0xc]          ;470
0002f0  e8bd5ff0          POP      {r4-r12,lr}           ;471
0002f4  f7ffbffe          B.W      BEEP_Tiggr
0002f8  a051              ADR      r0,|L1.1088|
0002fa  f7fffffe          BL       INPUT_CDC
0002fe  81ac              STRH     r4,[r5,#0xc]          ;485
000300  e8bd5ff0          POP      {r4-r12,lr}           ;486
000304  f7ffbffe          B.W      BEEP_Tiggr
000308  7810              LDRB     r0,[r2,#0]            ;491  ; admin
00030a  2801              CMP      r0,#1                 ;491
00030c  d007              BEQ      |L1.798|
00030e  7828              LDRB     r0,[r5,#0]            ;495  ; pass
000310  1d40              ADDS     r0,r0,#5              ;495
000312  7028              STRB     r0,[r5,#0]            ;495
                  |L1.788|
000314  81ac              STRH     r4,[r5,#0xc]          ;497
000316  e8bd5ff0          POP      {r4-r12,lr}           ;498
00031a  f7ffbffe          B.W      BEEP_Tiggr
                  |L1.798|
00031e  2005              MOVS     r0,#5                 ;493
000320  f7fffffe          BL       INPUT_INFO
000324  e7f6              B        |L1.788|
                  |L1.806|
000326  4841              LDR      r0,|L1.1068|
000328  7800              LDRB     r0,[r0,#0]            ;507  ; page_sw
00032a  2808              CMP      r0,#8                 ;507
                  |L1.812|
00032c  d2bc              BCS      |L1.680|
00032e  e8dff000          TBB      [pc,r0]               ;507
000332  ba25              DCB      0xba,0x25
000334  0412150a          DCB      0x04,0x12,0x15,0x0a
000338  ba2d              DCB      0xba,0x2d
00033a  a042              ADR      r0,|L1.1092|
00033c  f7fffffe          BL       INPUT_POW
000340  81ac              STRH     r4,[r5,#0xc]          ;511
000342  f7fffffe          BL       BEEP_Tiggr
000346  a03f              ADR      r0,|L1.1092|
000348  f7fffffe          BL       INPUT_NUM
00034c  81ac              STRH     r4,[r5,#0xc]          ;517
00034e  e8bd5ff0          POP      {r4-r12,lr}           ;518
000352  f7ffbffe          B.W      BEEP_Tiggr
000356  7808              LDRB     r0,[r1,#0]            ;523  ; para_set2
000358  28ff              CMP      r0,#0xff              ;523
00035a  d007              BEQ      |L1.876|
00035c  a039              ADR      r0,|L1.1092|
00035e  f7fffffe          BL       INPUT_LOAD
000362  81ac              STRH     r4,[r5,#0xc]          ;534
000364  e8bd5ff0          POP      {r4-r12,lr}           ;535
000368  f7ffbffe          B.W      BEEP_Tiggr
                  |L1.876|
00036c  a035              ADR      r0,|L1.1092|
00036e  f7fffffe          BL       INPUT_C
000372  81ac              STRH     r4,[r5,#0xc]          ;526
000374  e8bd5ff0          POP      {r4-r12,lr}           ;527
000378  f7ffbffe          B.W      BEEP_Tiggr
00037c  a031              ADR      r0,|L1.1092|
00037e  f7fffffe          BL       INPUT_CDC
000382  81ac              STRH     r4,[r5,#0xc]          ;541
000384  e8bd5ff0          POP      {r4-r12,lr}           ;542
000388  f7ffbffe          B.W      BEEP_Tiggr
00038c  7810              LDRB     r0,[r2,#0]            ;547  ; admin
00038e  2801              CMP      r0,#1                 ;547
000390  d102              BNE      |L1.920|
000392  2006              MOVS     r0,#6                 ;549
000394  f7fffffe          BL       INPUT_INFO
                  |L1.920|
000398  81ac              STRH     r4,[r5,#0xc]          ;551
00039a  e8bd5ff0          POP      {r4-r12,lr}           ;552
00039e  f7ffbffe          B.W      BEEP_Tiggr
                  |L1.930|
0003a2  4822              LDR      r0,|L1.1068|
0003a4  7800              LDRB     r0,[r0,#0]            ;561  ; page_sw
0003a6  2808              CMP      r0,#8                 ;561
                  |L1.936|
0003a8  d2c0              BCS      |L1.812|
0003aa  e8dff000          TBB      [pc,r0]               ;561
0003ae  7c25              DCB      0x7c,0x25
0003b0  0412150a          DCB      0x04,0x12,0x15,0x0a
0003b4  7c54              DCB      0x7c,0x54
0003b6  a024              ADR      r0,|L1.1096|
0003b8  f7fffffe          BL       INPUT_POW
0003bc  81ac              STRH     r4,[r5,#0xc]          ;565
0003be  f7fffffe          BL       BEEP_Tiggr
0003c2  a021              ADR      r0,|L1.1096|
0003c4  f7fffffe          BL       INPUT_NUM
0003c8  81ac              STRH     r4,[r5,#0xc]          ;571
0003ca  e8bd5ff0          POP      {r4-r12,lr}           ;572
0003ce  f7ffbffe          B.W      BEEP_Tiggr
0003d2  7808              LDRB     r0,[r1,#0]            ;577  ; para_set2
0003d4  28ff              CMP      r0,#0xff              ;577
0003d6  d007              BEQ      |L1.1000|
0003d8  a01b              ADR      r0,|L1.1096|
0003da  f7fffffe          BL       INPUT_LOAD
0003de  81ac              STRH     r4,[r5,#0xc]          ;588
0003e0  e8bd5ff0          POP      {r4-r12,lr}           ;589
0003e4  f7ffbffe          B.W      BEEP_Tiggr
                  |L1.1000|
0003e8  a017              ADR      r0,|L1.1096|
0003ea  f7fffffe          BL       INPUT_C
0003ee  81ac              STRH     r4,[r5,#0xc]          ;580
0003f0  e8bd5ff0          POP      {r4-r12,lr}           ;581
0003f4  f7ffbffe          B.W      BEEP_Tiggr
0003f8  a013              ADR      r0,|L1.1096|
0003fa  f7fffffe          BL       INPUT_CDC
0003fe  e025              B        |L1.1100|
                  |L1.1024|
                          DCD      flagA
                  |L1.1028|
                          DCD      para_set2
                  |L1.1032|
                          DCD      admin
                  |L1.1036|
                          DCD      hWinR
                  |L1.1040|
                          DCD      hWinWind
                  |L1.1044|
                          DCD      hWinG
                  |L1.1048|
                          DCD      load_wind
                  |L1.1052|
                          DCD      hWinsysinfo
                  |L1.1056|
                          DCD      hWincdc
                  |L1.1060|
                          DCD      hWinset
                  |L1.1064|
                          DCD      ||.data||
                  |L1.1068|
                          DCD      page_sw
                  |L1.1072|
000430  3100              DCB      "1",0
000432  00                DCB      0
000433  00                DCB      0
                  |L1.1076|
000434  3200              DCB      "2",0
000436  00                DCB      0
000437  00                DCB      0
                  |L1.1080|
000438  3300              DCB      "3",0
00043a  00                DCB      0
00043b  00                DCB      0
                  |L1.1084|
00043c  3400              DCB      "4",0
00043e  00                DCB      0
00043f  00                DCB      0
                  |L1.1088|
000440  3500              DCB      "5",0
000442  00                DCB      0
000443  00                DCB      0
                  |L1.1092|
000444  3600              DCB      "6",0
000446  00                DCB      0
000447  00                DCB      0
                  |L1.1096|
000448  3700              DCB      "7",0
00044a  00                DCB      0
00044b  00                DCB      0
                  |L1.1100|
00044c  81ac              STRH     r4,[r5,#0xc]          ;595
00044e  e8bd5ff0          POP      {r4-r12,lr}           ;596
000452  f7ffbffe          B.W      BEEP_Tiggr
000456  7810              LDRB     r0,[r2,#0]            ;601  ; admin
000458  2801              CMP      r0,#1                 ;601
00045a  d102              BNE      |L1.1122|
00045c  2007              MOVS     r0,#7                 ;603
00045e  f7fffffe          BL       INPUT_INFO
                  |L1.1122|
000462  81ac              STRH     r4,[r5,#0xc]          ;605
000464  e8bd5ff0          POP      {r4-r12,lr}           ;606
000468  f7ffbffe          B.W      BEEP_Tiggr
                  |L1.1132|
00046c  48fe              LDR      r0,|L1.2152|
00046e  7800              LDRB     r0,[r0,#0]            ;615  ; page_sw
000470  2808              CMP      r0,#8                 ;615
                  |L1.1138|
000472  d299              BCS      |L1.936|
000474  e8dff000          TBB      [pc,r0]               ;615
000478  f4270412          DCB      0xf4,0x27,0x04,0x12
00047c  150af42f          DCB      0x15,0x0a,0xf4,0x2f
000480  a0fa              ADR      r0,|L1.2156|
000482  f7fffffe          BL       INPUT_POW
000486  81ac              STRH     r4,[r5,#0xc]          ;619
000488  f7fffffe          BL       BEEP_Tiggr
00048c  a0f7              ADR      r0,|L1.2156|
00048e  f7fffffe          BL       INPUT_NUM
000492  81ac              STRH     r4,[r5,#0xc]          ;625
000494  e8bd5ff0          POP      {r4-r12,lr}           ;626
000498  f7ffbffe          B.W      BEEP_Tiggr
00049c  7808              LDRB     r0,[r1,#0]            ;631  ; para_set2
00049e  28ff              CMP      r0,#0xff              ;631
0004a0  d009              BEQ      |L1.1206|
0004a2  a0f2              ADR      r0,|L1.2156|
0004a4  e000              B        |L1.1192|
                  |L1.1190|
0004a6  e0db              B        |L1.1632|
                  |L1.1192|
0004a8  f7fffffe          BL       INPUT_LOAD
0004ac  81ac              STRH     r4,[r5,#0xc]          ;642
0004ae  e8bd5ff0          POP      {r4-r12,lr}           ;643
0004b2  f7ffbffe          B.W      BEEP_Tiggr
                  |L1.1206|
0004b6  a0ed              ADR      r0,|L1.2156|
0004b8  f7fffffe          BL       INPUT_C
0004bc  81ac              STRH     r4,[r5,#0xc]          ;634
0004be  e8bd5ff0          POP      {r4-r12,lr}           ;635
0004c2  f7ffbffe          B.W      BEEP_Tiggr
0004c6  a0e9              ADR      r0,|L1.2156|
0004c8  f7fffffe          BL       INPUT_CDC
0004cc  81ac              STRH     r4,[r5,#0xc]          ;649
0004ce  e8bd5ff0          POP      {r4-r12,lr}           ;650
0004d2  f7ffbffe          B.W      BEEP_Tiggr
0004d6  7810              LDRB     r0,[r2,#0]            ;655  ; admin
0004d8  2801              CMP      r0,#1                 ;655
0004da  d102              BNE      |L1.1250|
0004dc  2008              MOVS     r0,#8                 ;657
0004de  f7fffffe          BL       INPUT_INFO
                  |L1.1250|
0004e2  81ac              STRH     r4,[r5,#0xc]          ;659
0004e4  e8bd5ff0          POP      {r4-r12,lr}           ;660
0004e8  f7ffbffe          B.W      BEEP_Tiggr
                  |L1.1260|
0004ec  48de              LDR      r0,|L1.2152|
0004ee  7800              LDRB     r0,[r0,#0]            ;669  ; page_sw
0004f0  2808              CMP      r0,#8                 ;669
0004f2  d2be              BCS      |L1.1138|
0004f4  e8dff000          TBB      [pc,r0]               ;669
0004f8  b4250412          DCB      0xb4,0x25,0x04,0x12
0004fc  150ab42d          DCB      0x15,0x0a,0xb4,0x2d
000500  a0db              ADR      r0,|L1.2160|
000502  f7fffffe          BL       INPUT_POW
000506  81ac              STRH     r4,[r5,#0xc]          ;673
000508  f7fffffe          BL       BEEP_Tiggr
00050c  a0d8              ADR      r0,|L1.2160|
00050e  f7fffffe          BL       INPUT_NUM
000512  81ac              STRH     r4,[r5,#0xc]          ;679
000514  e8bd5ff0          POP      {r4-r12,lr}           ;680
000518  f7ffbffe          B.W      BEEP_Tiggr
00051c  7808              LDRB     r0,[r1,#0]            ;685  ; para_set2
00051e  28ff              CMP      r0,#0xff              ;685
000520  d007              BEQ      |L1.1330|
000522  a0d3              ADR      r0,|L1.2160|
000524  f7fffffe          BL       INPUT_LOAD
000528  81ac              STRH     r4,[r5,#0xc]          ;696
00052a  e8bd5ff0          POP      {r4-r12,lr}           ;697
00052e  f7ffbffe          B.W      BEEP_Tiggr
                  |L1.1330|
000532  a0cf              ADR      r0,|L1.2160|
000534  f7fffffe          BL       INPUT_C
000538  81ac              STRH     r4,[r5,#0xc]          ;688
00053a  e8bd5ff0          POP      {r4-r12,lr}           ;689
00053e  f7ffbffe          B.W      BEEP_Tiggr
000542  a0cb              ADR      r0,|L1.2160|
000544  f7fffffe          BL       INPUT_CDC
000548  81ac              STRH     r4,[r5,#0xc]          ;703
00054a  e8bd5ff0          POP      {r4-r12,lr}           ;704
00054e  f7ffbffe          B.W      BEEP_Tiggr
000552  7810              LDRB     r0,[r2,#0]            ;709  ; admin
000554  2801              CMP      r0,#1                 ;709
000556  d102              BNE      |L1.1374|
000558  2009              MOVS     r0,#9                 ;711
00055a  f7fffffe          BL       INPUT_INFO
                  |L1.1374|
00055e  81ac              STRH     r4,[r5,#0xc]          ;713
000560  e8bd5ff0          POP      {r4-r12,lr}           ;714
000564  f7ffbffe          B.W      BEEP_Tiggr
                  |L1.1384|
000568  48bf              LDR      r0,|L1.2152|
00056a  7800              LDRB     r0,[r0,#0]            ;723  ; page_sw
00056c  2808              CMP      r0,#8                 ;723
00056e  d277              BCS      |L1.1632|
000570  e8dff000          TBB      [pc,r0]               ;723
000574  76250412          DCB      0x76,0x25,0x04,0x12
000578  150a762d          DCB      0x15,0x0a,0x76,0x2d
00057c  a0bd              ADR      r0,|L1.2164|
00057e  f7fffffe          BL       INPUT_POW
000582  81ac              STRH     r4,[r5,#0xc]          ;727
000584  f7fffffe          BL       BEEP_Tiggr
000588  a0ba              ADR      r0,|L1.2164|
00058a  f7fffffe          BL       INPUT_NUM
00058e  81ac              STRH     r4,[r5,#0xc]          ;733
000590  e8bd5ff0          POP      {r4-r12,lr}           ;734
000594  f7ffbffe          B.W      BEEP_Tiggr
000598  7808              LDRB     r0,[r1,#0]            ;739  ; para_set2
00059a  28ff              CMP      r0,#0xff              ;739
00059c  d007              BEQ      |L1.1454|
00059e  a0b5              ADR      r0,|L1.2164|
0005a0  f7fffffe          BL       INPUT_LOAD
0005a4  81ac              STRH     r4,[r5,#0xc]          ;750
0005a6  e8bd5ff0          POP      {r4-r12,lr}           ;751
0005aa  f7ffbffe          B.W      BEEP_Tiggr
                  |L1.1454|
0005ae  a0b1              ADR      r0,|L1.2164|
0005b0  f7fffffe          BL       INPUT_C
0005b4  81ac              STRH     r4,[r5,#0xc]          ;742
0005b6  e8bd5ff0          POP      {r4-r12,lr}           ;743
0005ba  f7ffbffe          B.W      BEEP_Tiggr
0005be  a0ad              ADR      r0,|L1.2164|
0005c0  f7fffffe          BL       INPUT_CDC
0005c4  81ac              STRH     r4,[r5,#0xc]          ;757
0005c6  e8bd5ff0          POP      {r4-r12,lr}           ;758
0005ca  f7ffbffe          B.W      BEEP_Tiggr
0005ce  7810              LDRB     r0,[r2,#0]            ;763  ; admin
0005d0  2801              CMP      r0,#1                 ;763
0005d2  d007              BEQ      |L1.1508|
0005d4  7828              LDRB     r0,[r5,#0]            ;767  ; pass
0005d6  1c40              ADDS     r0,r0,#1              ;767
0005d8  7028              STRB     r0,[r5,#0]            ;767
                  |L1.1498|
0005da  81ac              STRH     r4,[r5,#0xc]          ;769
0005dc  e8bd5ff0          POP      {r4-r12,lr}           ;770
0005e0  f7ffbffe          B.W      BEEP_Tiggr
                  |L1.1508|
0005e4  2000              MOVS     r0,#0                 ;765
0005e6  f7fffffe          BL       INPUT_INFO
0005ea  e7f6              B        |L1.1498|
                  |L1.1516|
0005ec  489e              LDR      r0,|L1.2152|
0005ee  7800              LDRB     r0,[r0,#0]            ;779  ; page_sw
0005f0  2806              CMP      r0,#6                 ;779
0005f2  d235              BCS      |L1.1632|
0005f4  e8dff000          TBB      [pc,r0]               ;779
0005f8  341e031b          DCB      0x34,0x1e,0x03,0x1b
0005fc  130b              DCB      0x13,0x0b
0005fe  a09e              ADR      r0,|L1.2168|
000600  f7fffffe          BL       INPUT_POW
000604  81ac              STRH     r4,[r5,#0xc]          ;783
000606  e8bd5ff0          POP      {r4-r12,lr}           ;784
00060a  f7ffbffe          B.W      BEEP_Tiggr
00060e  a09a              ADR      r0,|L1.2168|
000610  f7fffffe          BL       INPUT_NUM
000614  81ac              STRH     r4,[r5,#0xc]          ;790
000616  e8bd5ff0          POP      {r4-r12,lr}           ;791
00061a  f7ffbffe          B.W      BEEP_Tiggr
00061e  a096              ADR      r0,|L1.2168|
000620  f7fffffe          BL       INPUT_LOAD
000624  81ac              STRH     r4,[r5,#0xc]          ;797
000626  e8bd5ff0          POP      {r4-r12,lr}           ;798
00062a  f7ffbffe          B.W      BEEP_Tiggr
00062e  7808              LDRB     r0,[r1,#0]            ;803  ; para_set2
000630  28ff              CMP      r0,#0xff              ;803
000632  d007              BEQ      |L1.1604|
000634  a090              ADR      r0,|L1.2168|
000636  f7fffffe          BL       INPUT_CDC
00063a  81ac              STRH     r4,[r5,#0xc]          ;814
00063c  e8bd5ff0          POP      {r4-r12,lr}           ;815
000640  f7ffbffe          B.W      BEEP_Tiggr
                  |L1.1604|
000644  a08c              ADR      r0,|L1.2168|
000646  f7fffffe          BL       INPUT_C
00064a  81ac              STRH     r4,[r5,#0xc]          ;806
00064c  e8bd5ff0          POP      {r4-r12,lr}           ;807
000650  f7ffbffe          B.W      BEEP_Tiggr
                  |L1.1620|
000654  2001              MOVS     r0,#1                 ;824
000656  f7fffffe          BL       sLCD_WR_REG
00065a  4888              LDR      r0,|L1.2172|
00065c  7004              STRB     r4,[r0,#0]            ;826
00065e  81ac              STRH     r4,[r5,#0xc]          ;827
                  |L1.1632|
;;;1068                           CreateR();
;;;1069                           KeyCounter = 0;
;;;1070                           BEEP_Tiggr();//瑙﹀彂铚傞福鍣?
;;;1071                           break;
;;;1072                       }
;;;1073                       case face_load:
;;;1074                       {
;;;1075                           WM_DeleteWindow(hWinR);
;;;1076                           WM_DeleteWindow(hWinWind);
;;;1077                           WM_DeleteWindow(hWinG);
;;;1078                           WM_DeleteWindow(load_wind);
;;;1079                           WM_DeleteWindow(hWinsysinfo);
;;;1080                           WM_DeleteWindow(hWincdc);
;;;1081                           WM_DeleteWindow(hWinset);
;;;1082                           CreateWindow2();
;;;1083                           KeyCounter = 0;
;;;1084                           BEEP_Tiggr();//瑙﹀彂铚傞福鍣?
;;;1085                           break;
;;;1086                       }
;;;1087                       case face_menu:
;;;1088                       {
;;;1089                           WM_DeleteWindow(hWinR);
;;;1090                           WM_DeleteWindow(hWinWind);
;;;1091                           WM_DeleteWindow(hWinG);
;;;1092                           WM_DeleteWindow(load_wind);
;;;1093                           WM_DeleteWindow(hWinsysinfo);
;;;1094                           WM_DeleteWindow(hWincdc);
;;;1095                           WM_DeleteWindow(hWinset); 
;;;1096                           CreateWindow();
;;;1097                           KeyCounter = 0;
;;;1098                           BEEP_Tiggr();//瑙﹀彂铚傞福鍣?
;;;1099                           break;
;;;1100                       }
;;;1101                       case face_graph:
;;;1102                       {
;;;1103                           WM_DeleteWindow(hWinR);
;;;1104                           WM_DeleteWindow(hWinWind);
;;;1105                           WM_DeleteWindow(hWinG);
;;;1106                           WM_DeleteWindow(load_wind);
;;;1107                           WM_DeleteWindow(hWinsysinfo);
;;;1108                           WM_DeleteWindow(hWincdc);
;;;1109                           WM_DeleteWindow(hWinset); 
;;;1110                           CreateG();
;;;1111                           KeyCounter = 0;
;;;1112                           BEEP_Tiggr();//瑙﹀彂铚傞福鍣?
;;;1113                           break;
;;;1114                       }
;;;1115                       case face_cdc:
;;;1116                       {
;;;1117                           WM_DeleteWindow(hWinR);
;;;1118                           WM_DeleteWindow(hWinWind);
;;;1119                           WM_DeleteWindow(hWinG);
;;;1120                           WM_DeleteWindow(load_wind);
;;;1121                           WM_DeleteWindow(hWinsysinfo);
;;;1122                           WM_DeleteWindow(hWincdc);
;;;1123                           WM_DeleteWindow(hWinset);
;;;1124                           CreateCDC();
;;;1125                           KeyCounter = 0;
;;;1126                           BEEP_Tiggr();//瑙﹀彂铚傞福鍣?
;;;1127                           break;
;;;1128                       }
;;;1129                   }
;;;1130   			}
;;;1131   			break;
;;;1132   			case PUSH_SETUP :
;;;1133   			{
;;;1134   // 				KeyCounter = 0;
;;;1135   // 				BEEP_Tiggr();//
;;;1136   // 				t_MODE++;
;;;1137   // 				if(t_MODE>1)
;;;1138   // 				{
;;;1139   // 					t_MODE=0;
;;;1140   // 				}
;;;1141   // 				if(t_MODE==0)
;;;1142   // 				{
;;;1143   // 					flag_Load_CC=1;//CC模式
;;;1144   // 					GPIO_ResetBits(GPIOC,GPIO_Pin_12);//CC
;;;1145   // 					
;;;1146   // 				}
;;;1147   // 				else if(t_MODE==1)
;;;1148   // 				{
;;;1149   // 					flag_Load_CC=0;//CV模式
;;;1150   // 					GPIO_SetBits(GPIOC,GPIO_Pin_12);//CV
;;;1151   // 				}
;;;1152                   WM_DeleteWindow(hWinR);
;;;1153                   WM_DeleteWindow(hWinWind);
;;;1154                   WM_DeleteWindow(hWinG);
;;;1155                   WM_DeleteWindow(load_wind);
;;;1156                   WM_DeleteWindow(hWinsysinfo);
;;;1157                   WM_DeleteWindow(hWincdc);
;;;1158                   WM_DeleteWindow(hWinset); 
;;;1159                   CreateSET();
;;;1160                   KeyCounter = 0;
;;;1161                   BEEP_Tiggr();//瑙﹀彂铚傞福鍣
;;;1162   			}
;;;1163   			break;
;;;1164   			case KEY_TRIG://电子负载/电源ON/OFF
;;;1165   			{
;;;1166                   switch(page_sw)
;;;1167                   {
;;;1168                       case face_r:
;;;1169                       {
;;;1170   //                         if(para_set2 == set_2_on)
;;;1171   //                         {
;;;1172   // //                            static vu8 LOAD_t;
;;;1173   //                             Mode_SW_CONT(0x02);
;;;1174   //                             LOAD_t++;
;;;1175   //                             if(LOAD_t>1)
;;;1176   //                             {
;;;1177   //                                 LOAD_t=0;
;;;1178   //                             }
;;;1179   //                             if(LOAD_t==0)
;;;1180   //                             {
;;;1181   //                                 oct_sw = oct_off;
;;;1182   //                                 set_add_c = 0;
;;;1183   //                                 Flag_Swtich_ON=0;
;;;1184   //                                 GPIO_SetBits(GPIOC,GPIO_Pin_1);//OFF
;;;1185   //                                  
;;;1186   //                             }
;;;1187   //                             else if(LOAD_t==1)
;;;1188   //                             {
;;;1189   //                                 oct_sw = oct_on;
;;;1190   //                                 Flag_Swtich_ON=1;
;;;1191   //                                 GPIO_ResetBits(GPIOC,GPIO_Pin_1);//On
;;;1192   //                             }
;;;1193   //                          }
;;;1194                            if(r_test == 0 && DISS_Voltage > gate_v)
;;;1195                            {
;;;1196                               r_test = 1;
;;;1197                            }else{
;;;1198                                r_test = 0;
;;;1199                            }
;;;1200                            KeyCounter = 0;
;;;1201                            BEEP_Tiggr();//触发蜂鸣器
;;;1202                            break;
;;;1203                       }
;;;1204                       case face_load:
;;;1205                       {
;;;1206                           t_onoff++;
;;;1207                           if(t_onoff>1)
;;;1208                           {
;;;1209                               t_onoff=0;
;;;1210                           }
;;;1211                           if(t_onoff==0)
;;;1212                           {
;;;1213                               Flag_Swtich_ON=0;
;;;1214                               GPIO_SetBits(GPIOA,GPIO_Pin_15);//电子负载OFF
;;;1215                               mode_sw = 0;
;;;1216                               load_sw = load_off;
;;;1217                           }
;;;1218                           else if(t_onoff==1)
;;;1219                           {
;;;1220                               Flag_Swtich_ON=1;
;;;1221                               GPIO_ResetBits(GPIOA,GPIO_Pin_15);//电子负载On
;;;1222                               mode_sw = mode_load;
;;;1223                               load_sw = load_on;
;;;1224                           }
;;;1225                           KeyCounter = 0;
;;;1226                           BEEP_Tiggr();//
;;;1227                       }break;
;;;1228                       case face_menu:
;;;1229                       {
;;;1230                           static vu8 POW_t;
;;;1231                           POW_t++;
;;;1232                           if(POW_t>1)
;;;1233                           {
;;;1234                               POW_t=0;
;;;1235                           }
;;;1236                           if(POW_t==0)
;;;1237                           {
;;;1238                               GPIO_ResetBits(GPIOC,GPIO_Pin_1);//关闭电源输出
;;;1239                               USART_SendData(USART3,0);//关闭电源
;;;1240                               mode_sw = 0;
;;;1241                               pow_sw = pow_off;
;;;1242                           }
;;;1243                           else if(POW_t==1)
;;;1244                           {
;;;1245                               USART_SendData(USART3,1);//连接电源
;;;1246                               GPIO_SetBits(GPIOC,GPIO_Pin_1);//打开电源输出
;;;1247                               mode_sw = mode_pow;
;;;1248                               pow_sw = pow_on;
;;;1249                           }
;;;1250                           KeyCounter = 0;
;;;1251                           BEEP_Tiggr();//
;;;1252                       }break;
;;;1253                        case face_cdc:
;;;1254                       {
;;;1255                           if(cdc_sw == cdc_off)
;;;1256                           {
;;;1257                              SET_Voltage = opv1;
;;;1258                              SET_Current = opc1;
;;;1259                              cutoff_flag = 0;
;;;1260   //                           Mode_SW_CONT(0x03);
;;;1261                              
;;;1262                              charge_step = 1;
;;;1263                              GPIO_SetBits(GPIOC,GPIO_Pin_1);//打开电源输出
;;;1264                              mode_sw = mode_pow;
;;;1265                              cdc_sw = cdc_on;
;;;1266                           }else{
;;;1267                              GPIO_ResetBits(GPIOC,GPIO_Pin_1);//关闭电源输出
;;;1268                              cdc_sw = cdc_off;
;;;1269                              paused = 0;
;;;1270                              mode_sw = 0;
;;;1271                           }
;;;1272                           KeyCounter = 0;
;;;1273                           BEEP_Tiggr();//瑙﹀彂铚傞福鍣?
;;;1274                          
;;;1275                       }break;
;;;1276                   }
;;;1277   				
;;;1278   			}
;;;1279   			break;
;;;1280   			case KEY_Reset://电阻高低档位切换
;;;1281   			{
;;;1282                   static vu8 at = 0;
;;;1283                   switch(page_sw)
;;;1284                   {
;;;1285                       case face_r:
;;;1286                       {
;;;1287                           if(at == 0)
;;;1288                           {
;;;1289                               USART_SendData(USART3,0);//关闭电源
;;;1290                               GPIO_ResetBits(GPIOB,GPIO_Pin_13);//R_RALY低档位                           
;;;1291                               at++;
;;;1292                               r_raly=0;
;;;1293                               manual = 1;//手动换档
;;;1294                           }else if(at == 1){
;;;1295                               USART_SendData(USART3,0);//关闭电源
;;;1296                               GPIO_SetBits(GPIOB,GPIO_Pin_13);//R_RALY高档位
;;;1297                               r_raly=1;
;;;1298                               at++;
;;;1299                               manual = 1;//手动换档
;;;1300                           }else if(at == 2){
;;;1301                               at = 0;
;;;1302                               manual =0;
;;;1303                           }
;;;1304                       }
;;;1305                   }
;;;1306                   KeyCounter = 0;
;;;1307   				BEEP_Tiggr();//
;;;1308               }
;;;1309   			break;
;;;1310   			case KEY_Powe :
;;;1311   			{
;;;1312   				
;;;1313   				KeyCounter = 0;
;;;1314   				BEEP_Tiggr();//
;;;1315   			}
;;;1316   			break;
;;;1317   			case KEY_Face1 :
;;;1318   			{
;;;1319   				WM_DeleteWindow(hWinR);
;;;1320                   WM_DeleteWindow(hWinWind);
;;;1321                   WM_DeleteWindow(hWinG);
;;;1322                   WM_DeleteWindow(load_wind);
;;;1323                   WM_DeleteWindow(hWinsysinfo);
;;;1324                   WM_DeleteWindow(hWincdc);
;;;1325                   WM_DeleteWindow(hWinset);
;;;1326                   GPIO_SetBits(GPIOA,GPIO_Pin_15);//电子负载OFF
;;;1327                   GPIO_ResetBits(GPIOC,GPIO_Pin_1);//关闭电源输出
;;;1328                   CreateR();
;;;1329   				KeyCounter = 0;
;;;1330   				BEEP_Tiggr();//
;;;1331   			}
;;;1332   			break;
;;;1333   			case KEY_Face2 :
;;;1334   			{
;;;1335   				WM_DeleteWindow(hWinR);
;;;1336                   WM_DeleteWindow(hWinWind);
;;;1337                   WM_DeleteWindow(hWinG);
;;;1338                   WM_DeleteWindow(load_wind);
;;;1339                   WM_DeleteWindow(hWinsysinfo);
;;;1340                   WM_DeleteWindow(hWincdc);
;;;1341                   WM_DeleteWindow(hWinset);
;;;1342   				CreateWindow2();
;;;1343                   t_onoff = 0;
;;;1344                   GPIO_ResetBits(GPIOC,GPIO_Pin_1);//关闭电源输出
;;;1345   				KeyCounter = 0;
;;;1346   				BEEP_Tiggr();//
;;;1347   			}
;;;1348   			break;
;;;1349   			case KEY_Face3 :
;;;1350   			{
;;;1351   				WM_DeleteWindow(hWinR);
;;;1352                   WM_DeleteWindow(hWinWind);
;;;1353                   WM_DeleteWindow(hWinG);
;;;1354                   WM_DeleteWindow(load_wind);
;;;1355                   WM_DeleteWindow(hWinsysinfo);
;;;1356                   WM_DeleteWindow(hWincdc);
;;;1357                   WM_DeleteWindow(hWinset);
;;;1358   				CreateWindow();
;;;1359                   GPIO_SetBits(GPIOA,GPIO_Pin_15);//电子负载OFF
;;;1360   				KeyCounter = 0;
;;;1361   				BEEP_Tiggr();//
;;;1362   			}
;;;1363   			break;
;;;1364   			case KEY_Face4 :
;;;1365   			{
;;;1366                   WM_DeleteWindow(hWinR);
;;;1367                   WM_DeleteWindow(hWinWind);
;;;1368                   WM_DeleteWindow(hWinG);
;;;1369                   WM_DeleteWindow(load_wind);
;;;1370                   WM_DeleteWindow(hWinsysinfo);
;;;1371                   WM_DeleteWindow(hWincdc);
;;;1372                   WM_DeleteWindow(hWinset);
;;;1373                   CreateCDC(); 
;;;1374   				KeyCounter = 0;
;;;1375   				BEEP_Tiggr();//
;;;1376   			}
;;;1377   			break;
;;;1378   			case KEY_Face5 :
;;;1379   			{
;;;1380                   WM_DeleteWindow(hWinR);
;;;1381                   WM_DeleteWindow(hWinWind);
;;;1382                   WM_DeleteWindow(hWinG);
;;;1383                   WM_DeleteWindow(load_wind);
;;;1384                   WM_DeleteWindow(hWinsysinfo);
;;;1385                   WM_DeleteWindow(hWincdc);
;;;1386                   WM_DeleteWindow(hWinset);
;;;1387                   CreateG();
;;;1388   				KeyCounter = 0;
;;;1389   				BEEP_Tiggr();//
;;;1390   			}
;;;1391   			break;
;;;1392               case KEY_BIAS :
;;;1393   			{
;;;1394   				WM_DeleteWindow(hWinR);
;;;1395                   WM_DeleteWindow(hWinWind);
;;;1396                   WM_DeleteWindow(hWinG);
;;;1397                   WM_DeleteWindow(load_wind);
;;;1398                   WM_DeleteWindow(hWinsysinfo);
;;;1399                   WM_DeleteWindow(hWincdc);
;;;1400                   WM_DeleteWindow(hWinset);
;;;1401                   Createsysinfo();
;;;1402                   KeyCounter = 0;
;;;1403                   BEEP_Tiggr();//瑙﹀彂铚傞福鍣?
;;;1404   			}
;;;1405   			break;
;;;1406   
;;;1407                       
;;;1408               
;;;1409   			default:
;;;1410   			break;
;;;1411   		}	
;;;1412   	}
;;;1413   }
000660  e8bd9ff0          POP      {r4-r12,pc}
                  |L1.1636|
000664  4880              LDR      r0,|L1.2152|
000666  7800              LDRB     r0,[r0,#0]            ;834  ; page_sw
000668  2801              CMP      r0,#1                 ;834
00066a  d015              BEQ      |L1.1688|
00066c  2805              CMP      r0,#5                 ;834
00066e  d005              BEQ      |L1.1660|
000670  2807              CMP      r0,#7                 ;834
000672  d1f5              BNE      |L1.1632|
000674  7810              LDRB     r0,[r2,#0]            ;844  ; admin
000676  2801              CMP      r0,#1                 ;844
000678  d007              BEQ      |L1.1674|
00067a  e008              B        |L1.1678|
                  |L1.1660|
00067c  f7fffffe          BL       SET_OP_LEFT
000680  81ac              STRH     r4,[r5,#0xc]          ;838
000682  e8bd5ff0          POP      {r4-r12,lr}           ;839
000686  f7ffbffe          B.W      BEEP_Tiggr
                  |L1.1674|
00068a  f7fffffe          BL       SYS_INFO_LEFT
                  |L1.1678|
00068e  81ac              STRH     r4,[r5,#0xc]          ;848
000690  e8bd5ff0          POP      {r4-r12,lr}           ;849
000694  f7ffbffe          B.W      BEEP_Tiggr
                  |L1.1688|
000698  f7fffffe          BL       CDC_OP_LEFT
00069c  81ac              STRH     r4,[r5,#0xc]          ;855
00069e  e8bd5ff0          POP      {r4-r12,lr}           ;856
0006a2  f7ffbffe          B.W      BEEP_Tiggr
                  |L1.1702|
0006a6  4870              LDR      r0,|L1.2152|
0006a8  7800              LDRB     r0,[r0,#0]            ;864  ; page_sw
0006aa  2801              CMP      r0,#1                 ;864
0006ac  d015              BEQ      |L1.1754|
0006ae  2805              CMP      r0,#5                 ;864
0006b0  d005              BEQ      |L1.1726|
0006b2  2807              CMP      r0,#7                 ;864
0006b4  d1d4              BNE      |L1.1632|
0006b6  7810              LDRB     r0,[r2,#0]            ;874  ; admin
0006b8  2801              CMP      r0,#1                 ;874
0006ba  d007              BEQ      |L1.1740|
0006bc  e008              B        |L1.1744|
                  |L1.1726|
0006be  f7fffffe          BL       SET_OP_RIGHT
0006c2  81ac              STRH     r4,[r5,#0xc]          ;868
0006c4  e8bd5ff0          POP      {r4-r12,lr}           ;869
0006c8  f7ffbffe          B.W      BEEP_Tiggr
                  |L1.1740|
0006cc  f7fffffe          BL       SYS_INFO_RIGHT
                  |L1.1744|
0006d0  81ac              STRH     r4,[r5,#0xc]          ;878
0006d2  e8bd5ff0          POP      {r4-r12,lr}           ;879
0006d6  f7ffbffe          B.W      BEEP_Tiggr
                  |L1.1754|
0006da  f7fffffe          BL       CDC_OP_RIGHT
0006de  81ac              STRH     r4,[r5,#0xc]          ;885
0006e0  e8bd5ff0          POP      {r4-r12,lr}           ;886
0006e4  f7ffbffe          B.W      BEEP_Tiggr
                  |L1.1768|
0006e8  485f              LDR      r0,|L1.2152|
0006ea  7800              LDRB     r0,[r0,#0]            ;894  ; page_sw
0006ec  2808              CMP      r0,#8                 ;894
0006ee  d2b7              BCS      |L1.1632|
0006f0  e8dff000          TBB      [pc,r0]               ;894
0006f4  041d051a          DCB      0x04,0x1d,0x05,0x1a
0006f8  0c13042b          DCB      0x0c,0x13,0x04,0x2b
                  |L1.1788|
0006fc  e7b0              B        |L1.1632|
0006fe  81ac              STRH     r4,[r5,#0xc]          ;897
000700  f7fffffe          BL       BEEP_Tiggr
000704  e8bd5ff0          POP      {r4-r12,lr}           ;899
000708  f7ffbffe          B.W      MENU_OP_UP
00070c  81ac              STRH     r4,[r5,#0xc]          ;904
00070e  f7fffffe          BL       BEEP_Tiggr
000712  e8bd5ff0          POP      {r4-r12,lr}           ;906
000716  f7ffbffe          B.W      LOAD_OP_UP
00071a  f7fffffe          BL       SET_OP_UP
00071e  81ac              STRH     r4,[r5,#0xc]          ;912
000720  e8bd5ff0          POP      {r4-r12,lr}           ;913
000724  f7ffbffe          B.W      BEEP_Tiggr
000728  7808              LDRB     r0,[r1,#0]            ;918  ; para_set2
00072a  28ff              CMP      r0,#0xff              ;918
00072c  d006              BEQ      |L1.1852|
00072e  f7fffffe          BL       CDC_OP_UP
000732  81ac              STRH     r4,[r5,#0xc]          ;930
000734  e8bd5ff0          POP      {r4-r12,lr}           ;931
000738  f7ffbffe          B.W      BEEP_Tiggr
                  |L1.1852|
00073c  f7fffffe          BL       OC_OP_UP
000740  81ac              STRH     r4,[r5,#0xc]          ;921
000742  e8bd5ff0          POP      {r4-r12,lr}           ;922
000746  f7ffbffe          B.W      BEEP_Tiggr
00074a  7810              LDRB     r0,[r2,#0]            ;936  ; admin
00074c  2801              CMP      r0,#1                 ;936
00074e  d101              BNE      |L1.1876|
000750  f7fffffe          BL       SYS_INFO_UP
                  |L1.1876|
000754  81ac              STRH     r4,[r5,#0xc]          ;940
000756  e8bd5ff0          POP      {r4-r12,lr}           ;941
00075a  f7ffbffe          B.W      BEEP_Tiggr
                  |L1.1886|
00075e  4842              LDR      r0,|L1.2152|
000760  7800              LDRB     r0,[r0,#0]            ;950  ; page_sw
000762  2808              CMP      r0,#8                 ;950
000764  d2ca              BCS      |L1.1788|
000766  e8dff000          TBB      [pc,r0]               ;950
00076a  041d              DCB      0x04,0x1d
00076c  051a0c13          DCB      0x05,0x1a,0x0c,0x13
000770  042b              DCB      0x04,0x2b
                  |L1.1906|
000772  e775              B        |L1.1632|
000774  81ac              STRH     r4,[r5,#0xc]          ;953
000776  f7fffffe          BL       BEEP_Tiggr
00077a  e8bd5ff0          POP      {r4-r12,lr}           ;955
00077e  f7ffbffe          B.W      MENU_OP_DOWN
000782  81ac              STRH     r4,[r5,#0xc]          ;960
000784  f7fffffe          BL       BEEP_Tiggr
000788  e8bd5ff0          POP      {r4-r12,lr}           ;962
00078c  f7ffbffe          B.W      LOAD_OP_DOWN
000790  f7fffffe          BL       SET_OP_DOWN
000794  81ac              STRH     r4,[r5,#0xc]          ;968
000796  e8bd5ff0          POP      {r4-r12,lr}           ;969
00079a  f7ffbffe          B.W      BEEP_Tiggr
00079e  7808              LDRB     r0,[r1,#0]            ;974  ; para_set2
0007a0  28ff              CMP      r0,#0xff              ;974
0007a2  d006              BEQ      |L1.1970|
0007a4  f7fffffe          BL       CDC_OP_DOWN
0007a8  81ac              STRH     r4,[r5,#0xc]          ;985
0007aa  e8bd5ff0          POP      {r4-r12,lr}           ;986
0007ae  f7ffbffe          B.W      BEEP_Tiggr
                  |L1.1970|
0007b2  f7fffffe          BL       OC_OP_DOWN
0007b6  81ac              STRH     r4,[r5,#0xc]          ;977
0007b8  e8bd5ff0          POP      {r4-r12,lr}           ;978
0007bc  f7ffbffe          B.W      BEEP_Tiggr
0007c0  7810              LDRB     r0,[r2,#0]            ;991  ; admin
0007c2  2801              CMP      r0,#1                 ;991
0007c4  d101              BNE      |L1.1994|
0007c6  f7fffffe          BL       SYS_INFO_DOWN
                  |L1.1994|
0007ca  81ac              STRH     r4,[r5,#0xc]          ;995
0007cc  e8bd5ff0          POP      {r4-r12,lr}           ;996
0007d0  f7ffbffe          B.W      BEEP_Tiggr
                  |L1.2004|
0007d4  4824              LDR      r0,|L1.2152|
0007d6  7800              LDRB     r0,[r0,#0]            ;1006  ; page_sw
0007d8  2808              CMP      r0,#8                 ;1006
0007da  d28f              BCS      |L1.1788|
0007dc  e8dff000          TBB      [pc,r0]               ;1006
0007e0  04240513          DCB      0x04,0x24,0x05,0x13
0007e4  160c042b          DCB      0x16,0x0c,0x04,0x2b
0007e8  e73a              B        |L1.1632|
0007ea  f7fffffe          BL       MENU_SET
0007ee  81ac              STRH     r4,[r5,#0xc]          ;1010
0007f0  e8bd5ff0          POP      {r4-r12,lr}           ;1011
0007f4  f7ffbffe          B.W      BEEP_Tiggr
0007f8  f7fffffe          BL       PARA_SET
0007fc  81ac              STRH     r4,[r5,#0xc]          ;1017
0007fe  e8bd5ff0          POP      {r4-r12,lr}           ;1018
000802  f7ffbffe          B.W      BEEP_Tiggr
000806  7808              LDRB     r0,[r1,#0]            ;1023  ; para_set2
000808  28ff              CMP      r0,#0xff              ;1023
00080a  d006              BEQ      |L1.2074|
00080c  f7fffffe          BL       LOAD_SET
000810  81ac              STRH     r4,[r5,#0xc]          ;1034
000812  e8bd5ff0          POP      {r4-r12,lr}           ;1035
000816  f7ffbffe          B.W      BEEP_Tiggr
                  |L1.2074|
00081a  f7fffffe          BL       OC_SET
00081e  81ac              STRH     r4,[r5,#0xc]          ;1026
000820  e8bd5ff0          POP      {r4-r12,lr}           ;1027
000824  f7ffbffe          B.W      BEEP_Tiggr
000828  f7fffffe          BL       CDC_SET
00082c  81ac              STRH     r4,[r5,#0xc]          ;1041
00082e  e8bd5ff0          POP      {r4-r12,lr}           ;1042
000832  f7ffbffe          B.W      BEEP_Tiggr
000836  f7fffffe          BL       CFM_PASS
00083a  81ac              STRH     r4,[r5,#0xc]          ;1048
00083c  e8bd5ff0          POP      {r4-r12,lr}           ;1049
000840  f7ffbffe          B.W      BEEP_Tiggr
                  |L1.2116|
000844  7868              LDRB     r0,[r5,#1]            ;1057  ; track
000846  2805              CMP      r0,#5                 ;1057
000848  d293              BCS      |L1.1906|
00084a  e8dff000          TBB      [pc,r0]               ;1057
00084e  7090              DCB      0x70,0x90
000850  50033000          DCB      0x50,0x03,0x30,0x00
000854  6818              LDR      r0,[r3,#0]            ;1061  ; hWinR
000856  f7fffffe          BL       WM_DeleteWindow
00085a  6830              LDR      r0,[r6,#0]            ;1062  ; hWinWind
00085c  f7fffffe          BL       WM_DeleteWindow
000860  6838              LDR      r0,[r7,#0]            ;1063  ; hWinG
000862  f7fffffe          BL       WM_DeleteWindow
000866  e00b              B        |L1.2176|
                  |L1.2152|
                          DCD      page_sw
                  |L1.2156|
00086c  3800              DCB      "8",0
00086e  00                DCB      0
00086f  00                DCB      0
                  |L1.2160|
000870  3900              DCB      "9",0
000872  00                DCB      0
000873  00                DCB      0
                  |L1.2164|
000874  3000              DCB      "0",0
000876  00                DCB      0
000877  00                DCB      0
                  |L1.2168|
000878  2e00              DCB      ".",0
00087a  00                DCB      0
00087b  00                DCB      0
                  |L1.2172|
                          DCD      timer_sw
                  |L1.2176|
000880  f8d80000          LDR      r0,[r8,#0]            ;1064  ; load_wind
000884  f7fffffe          BL       WM_DeleteWindow
000888  f8d90000          LDR      r0,[r9,#0]            ;1065  ; hWinsysinfo
00088c  f7fffffe          BL       WM_DeleteWindow
000890  f8da0000          LDR      r0,[r10,#0]           ;1066  ; hWincdc
000894  f7fffffe          BL       WM_DeleteWindow
000898  f8db0000          LDR      r0,[r11,#0]           ;1067  ; hWinset
00089c  f7fffffe          BL       WM_DeleteWindow
0008a0  f7fffffe          BL       CreateR
0008a4  81ac              STRH     r4,[r5,#0xc]          ;1069
0008a6  e8bd5ff0          POP      {r4-r12,lr}           ;1070
0008aa  f7ffbffe          B.W      BEEP_Tiggr
0008ae  6818              LDR      r0,[r3,#0]            ;1075  ; hWinR
0008b0  f7fffffe          BL       WM_DeleteWindow
0008b4  6830              LDR      r0,[r6,#0]            ;1076  ; hWinWind
0008b6  f7fffffe          BL       WM_DeleteWindow
0008ba  6838              LDR      r0,[r7,#0]            ;1077  ; hWinG
0008bc  f7fffffe          BL       WM_DeleteWindow
0008c0  f8d80000          LDR      r0,[r8,#0]            ;1078  ; load_wind
0008c4  f7fffffe          BL       WM_DeleteWindow
0008c8  f8d90000          LDR      r0,[r9,#0]            ;1079  ; hWinsysinfo
0008cc  f7fffffe          BL       WM_DeleteWindow
0008d0  f8da0000          LDR      r0,[r10,#0]           ;1080  ; hWincdc
0008d4  f7fffffe          BL       WM_DeleteWindow
0008d8  f8db0000          LDR      r0,[r11,#0]           ;1081  ; hWinset
0008dc  f7fffffe          BL       WM_DeleteWindow
0008e0  f7fffffe          BL       CreateWindow2
0008e4  81ac              STRH     r4,[r5,#0xc]          ;1083
0008e6  e8bd5ff0          POP      {r4-r12,lr}           ;1084
0008ea  f7ffbffe          B.W      BEEP_Tiggr
0008ee  6818              LDR      r0,[r3,#0]            ;1089  ; hWinR
0008f0  f7fffffe          BL       WM_DeleteWindow
0008f4  6830              LDR      r0,[r6,#0]            ;1090  ; hWinWind
0008f6  f7fffffe          BL       WM_DeleteWindow
0008fa  6838              LDR      r0,[r7,#0]            ;1091  ; hWinG
0008fc  f7fffffe          BL       WM_DeleteWindow
000900  f8d80000          LDR      r0,[r8,#0]            ;1092  ; load_wind
000904  f7fffffe          BL       WM_DeleteWindow
000908  f8d90000          LDR      r0,[r9,#0]            ;1093  ; hWinsysinfo
00090c  f7fffffe          BL       WM_DeleteWindow
000910  f8da0000          LDR      r0,[r10,#0]           ;1094  ; hWincdc
000914  f7fffffe          BL       WM_DeleteWindow
000918  f8db0000          LDR      r0,[r11,#0]           ;1095  ; hWinset
00091c  f7fffffe          BL       WM_DeleteWindow
000920  f7fffffe          BL       CreateWindow
000924  81ac              STRH     r4,[r5,#0xc]          ;1097
000926  e8bd5ff0          POP      {r4-r12,lr}           ;1098
00092a  f7ffbffe          B.W      BEEP_Tiggr
00092e  6818              LDR      r0,[r3,#0]            ;1103  ; hWinR
000930  f7fffffe          BL       WM_DeleteWindow
000934  6830              LDR      r0,[r6,#0]            ;1104  ; hWinWind
000936  f7fffffe          BL       WM_DeleteWindow
00093a  6838              LDR      r0,[r7,#0]            ;1105  ; hWinG
00093c  f7fffffe          BL       WM_DeleteWindow
000940  f8d80000          LDR      r0,[r8,#0]            ;1106  ; load_wind
000944  f7fffffe          BL       WM_DeleteWindow
000948  f8d90000          LDR      r0,[r9,#0]            ;1107  ; hWinsysinfo
00094c  f7fffffe          BL       WM_DeleteWindow
000950  f8da0000          LDR      r0,[r10,#0]           ;1108  ; hWincdc
000954  f7fffffe          BL       WM_DeleteWindow
000958  f8db0000          LDR      r0,[r11,#0]           ;1109  ; hWinset
00095c  f7fffffe          BL       WM_DeleteWindow
000960  f7fffffe          BL       CreateG
000964  81ac              STRH     r4,[r5,#0xc]          ;1111
000966  e8bd5ff0          POP      {r4-r12,lr}           ;1112
00096a  f7ffbffe          B.W      BEEP_Tiggr
00096e  6818              LDR      r0,[r3,#0]            ;1117  ; hWinR
000970  f7fffffe          BL       WM_DeleteWindow
000974  6830              LDR      r0,[r6,#0]            ;1118  ; hWinWind
000976  f7fffffe          BL       WM_DeleteWindow
00097a  6838              LDR      r0,[r7,#0]            ;1119  ; hWinG
00097c  f7fffffe          BL       WM_DeleteWindow
000980  f8d80000          LDR      r0,[r8,#0]            ;1120  ; load_wind
000984  f7fffffe          BL       WM_DeleteWindow
000988  f8d90000          LDR      r0,[r9,#0]            ;1121  ; hWinsysinfo
00098c  f7fffffe          BL       WM_DeleteWindow
000990  f8da0000          LDR      r0,[r10,#0]           ;1122  ; hWincdc
000994  f7fffffe          BL       WM_DeleteWindow
000998  f8db0000          LDR      r0,[r11,#0]           ;1123  ; hWinset
00099c  f7fffffe          BL       WM_DeleteWindow
0009a0  f7fffffe          BL       CreateCDC
0009a4  81ac              STRH     r4,[r5,#0xc]          ;1125
0009a6  e8bd5ff0          POP      {r4-r12,lr}           ;1126
0009aa  f7ffbffe          B.W      BEEP_Tiggr
                  |L1.2478|
0009ae  6818              LDR      r0,[r3,#0]            ;1152  ; hWinR
0009b0  f7fffffe          BL       WM_DeleteWindow
0009b4  6830              LDR      r0,[r6,#0]            ;1153  ; hWinWind
0009b6  f7fffffe          BL       WM_DeleteWindow
0009ba  6838              LDR      r0,[r7,#0]            ;1154  ; hWinG
0009bc  f7fffffe          BL       WM_DeleteWindow
0009c0  f8d80000          LDR      r0,[r8,#0]            ;1155  ; load_wind
0009c4  f7fffffe          BL       WM_DeleteWindow
0009c8  f8d90000          LDR      r0,[r9,#0]            ;1156  ; hWinsysinfo
0009cc  f7fffffe          BL       WM_DeleteWindow
0009d0  f8da0000          LDR      r0,[r10,#0]           ;1157  ; hWincdc
0009d4  f7fffffe          BL       WM_DeleteWindow
0009d8  f8db0000          LDR      r0,[r11,#0]           ;1158  ; hWinset
0009dc  f7fffffe          BL       WM_DeleteWindow
0009e0  f7fffffe          BL       CreateSET
0009e4  81ac              STRH     r4,[r5,#0xc]          ;1160
0009e6  e8bd5ff0          POP      {r4-r12,lr}           ;1161
0009ea  f7ffbffe          B.W      BEEP_Tiggr
                  |L1.2542|
0009ee  48de              LDR      r0,|L1.3432|
0009f0  7800              LDRB     r0,[r0,#0]            ;1166  ; page_sw
0009f2  2703              MOVS     r7,#3                 ;383
0009f4  4edd              LDR      r6,|L1.3436|
0009f6  e007              B        |L1.2568|
                  |L1.2552|
0009f8  e196              B        |L1.3368|
                  |L1.2554|
0009fa  e0dd              B        |L1.3000|
                  |L1.2556|
0009fc  e0a5              B        |L1.2890|
                  |L1.2558|
0009fe  e0e0              B        |L1.3010|
                  |L1.2560|
000a00  e108              B        |L1.3092|
                  |L1.2562|
000a02  e12c              B        |L1.3166|
                  |L1.2564|
000a04  e150              B        |L1.3240|
                  |L1.2566|
000a06  e16f              B        |L1.3304|
                  |L1.2568|
000a08  2801              CMP      r0,#1                 ;1166
000a0a  d076              BEQ      |L1.2810|
000a0c  2802              CMP      r0,#2                 ;1166
000a0e  d048              BEQ      |L1.2722|
000a10  2803              CMP      r0,#3                 ;1166
000a12  d010              BEQ      |L1.2614|
000a14  2804              CMP      r0,#4                 ;1166
000a16  f47fae71          BNE      |L1.1788|
000a1a  7aa8              LDRB     r0,[r5,#0xa]          ;1206  ; t_onoff
000a1c  1c40              ADDS     r0,r0,#1              ;1206
000a1e  72a8              STRB     r0,[r5,#0xa]          ;1206
000a20  7aa8              LDRB     r0,[r5,#0xa]          ;1207  ; t_onoff
000a22  2801              CMP      r0,#1                 ;1207
000a24  d900              BLS      |L1.2600|
000a26  72ac              STRB     r4,[r5,#0xa]          ;1209
                  |L1.2600|
000a28  7aa8              LDRB     r0,[r5,#0xa]          ;1211  ; t_onoff
000a2a  4fd1              LDR      r7,|L1.3440|
000a2c  b1c8              CBZ      r0,|L1.2658|
000a2e  7aa8              LDRB     r0,[r5,#0xa]          ;1218  ; t_onoff
000a30  2801              CMP      r0,#1                 ;1218
000a32  d023              BEQ      |L1.2684|
000a34  e030              B        |L1.2712|
                  |L1.2614|
000a36  78a8              LDRB     r0,[r5,#2]            ;1194  ; r_test
000a38  b968              CBNZ     r0,|L1.2646|
000a3a  48ce              LDR      r0,|L1.3444|
000a3c  ed900a00          VLDR     s0,[r0,#0]            ;1194
000a40  48cd              LDR      r0,|L1.3448|
000a42  edd00a00          VLDR     s1,[r0,#0]            ;1194
000a46  eeb40ae0          VCMPE.F32 s0,s1                 ;1194
000a4a  eef1fa10          VMRS     APSR_nzcv,FPSCR       ;1194
000a4e  dd02              BLE      |L1.2646|
000a50  2001              MOVS     r0,#1                 ;1196
000a52  70a8              STRB     r0,[r5,#2]            ;1196
000a54  e000              B        |L1.2648|
                  |L1.2646|
000a56  70ac              STRB     r4,[r5,#2]            ;1198
                  |L1.2648|
000a58  81ac              STRH     r4,[r5,#0xc]          ;1200
000a5a  e8bd5ff0          POP      {r4-r12,lr}           ;1201
000a5e  f7ffbffe          B.W      BEEP_Tiggr
                  |L1.2658|
000a62  48c6              LDR      r0,|L1.3452|
000a64  6801              LDR      r1,[r0,#0]            ;1213  ; flagA
000a66  f0210140          BIC      r1,r1,#0x40           ;1213
000a6a  6001              STR      r1,[r0,#0]            ;1213  ; flagA
000a6c  f44f4100          MOV      r1,#0x8000            ;1214
000a70  48c3              LDR      r0,|L1.3456|
000a72  f7fffffe          BL       GPIO_SetBits
000a76  7034              STRB     r4,[r6,#0]            ;1215
000a78  703c              STRB     r4,[r7,#0]            ;1216
000a7a  e00d              B        |L1.2712|
                  |L1.2684|
000a7c  48bf              LDR      r0,|L1.3452|
000a7e  6801              LDR      r1,[r0,#0]            ;1220  ; flagA
000a80  f0410140          ORR      r1,r1,#0x40           ;1220
000a84  6001              STR      r1,[r0,#0]            ;1220  ; flagA
000a86  f44f4100          MOV      r1,#0x8000            ;1221
000a8a  48bd              LDR      r0,|L1.3456|
000a8c  f7fffffe          BL       GPIO_ResetBits
000a90  2002              MOVS     r0,#2                 ;1222
000a92  7030              STRB     r0,[r6,#0]            ;1222
000a94  2001              MOVS     r0,#1                 ;1223
000a96  7038              STRB     r0,[r7,#0]            ;1223
                  |L1.2712|
000a98  81ac              STRH     r4,[r5,#0xc]          ;1225
000a9a  e8bd5ff0          POP      {r4-r12,lr}           ;1226
000a9e  f7ffbffe          B.W      BEEP_Tiggr
                  |L1.2722|
000aa2  79e8              LDRB     r0,[r5,#7]            ;1231  ; POW_t
000aa4  1c40              ADDS     r0,r0,#1              ;1231
000aa6  71e8              STRB     r0,[r5,#7]            ;1231
000aa8  79e8              LDRB     r0,[r5,#7]            ;1232  ; POW_t
000aaa  2801              CMP      r0,#1                 ;1232
000aac  d900              BLS      |L1.2736|
000aae  71ec              STRB     r4,[r5,#7]            ;1234
                  |L1.2736|
000ab0  79e8              LDRB     r0,[r5,#7]            ;1236  ; POW_t
000ab2  f8df82d0          LDR      r8,|L1.3460|
000ab6  b118              CBZ      r0,|L1.2752|
000ab8  79e8              LDRB     r0,[r5,#7]            ;1243  ; POW_t
000aba  2801              CMP      r0,#1                 ;1243
000abc  d00c              BEQ      |L1.2776|
000abe  e017              B        |L1.2800|
                  |L1.2752|
000ac0  2102              MOVS     r1,#2                 ;1238
000ac2  48b1              LDR      r0,|L1.3464|
000ac4  f7fffffe          BL       GPIO_ResetBits
000ac8  2100              MOVS     r1,#0                 ;1239
000aca  48b0              LDR      r0,|L1.3468|
000acc  f7fffffe          BL       USART_SendData
000ad0  7034              STRB     r4,[r6,#0]            ;1240
000ad2  f8884000          STRB     r4,[r8,#0]            ;1241
000ad6  e00b              B        |L1.2800|
                  |L1.2776|
000ad8  2101              MOVS     r1,#1                 ;1245
000ada  48ac              LDR      r0,|L1.3468|
000adc  f7fffffe          BL       USART_SendData
000ae0  2102              MOVS     r1,#2                 ;1246
000ae2  48a9              LDR      r0,|L1.3464|
000ae4  f7fffffe          BL       GPIO_SetBits
000ae8  7037              STRB     r7,[r6,#0]            ;1247
000aea  2001              MOVS     r0,#1                 ;1248
000aec  f8880000          STRB     r0,[r8,#0]            ;1248
                  |L1.2800|
000af0  81ac              STRH     r4,[r5,#0xc]          ;1250
000af2  e8bd5ff0          POP      {r4-r12,lr}           ;1251
000af6  f7ffbffe          B.W      BEEP_Tiggr
                  |L1.2810|
000afa  f8df8294          LDR      r8,|L1.3472|
000afe  f8980000          LDRB     r0,[r8,#0]            ;1255  ; cdc_sw
000b02  b168              CBZ      r0,|L1.2848|
000b04  2102              MOVS     r1,#2                 ;1267
000b06  48a0              LDR      r0,|L1.3464|
000b08  f7fffffe          BL       GPIO_ResetBits
000b0c  f8884000          STRB     r4,[r8,#0]            ;1268
000b10  48a0              LDR      r0,|L1.3476|
000b12  7004              STRB     r4,[r0,#0]            ;1269
000b14  7034              STRB     r4,[r6,#0]            ;1270
                  |L1.2838|
000b16  81ac              STRH     r4,[r5,#0xc]          ;1272
000b18  e8bd5ff0          POP      {r4-r12,lr}           ;1273
000b1c  f7ffbffe          B.W      BEEP_Tiggr
                  |L1.2848|
000b20  489d              LDR      r0,|L1.3480|
000b22  6fc1              LDR      r1,[r0,#0x7c]         ;1257  ; Run_Control
000b24  6041              STR      r1,[r0,#4]            ;1257  ; Run_Control
000b26  f8d01088          LDR      r1,[r0,#0x88]         ;1258  ; Run_Control
000b2a  6081              STR      r1,[r0,#8]            ;1258  ; Run_Control
000b2c  489b              LDR      r0,|L1.3484|
000b2e  7004              STRB     r4,[r0,#0]            ;1259
000b30  489b              LDR      r0,|L1.3488|
000b32  f04f0901          MOV      r9,#1                 ;1262
000b36  f8809000          STRB     r9,[r0,#0]            ;1262
000b3a  2102              MOVS     r1,#2                 ;1263
000b3c  4892              LDR      r0,|L1.3464|
000b3e  f7fffffe          BL       GPIO_SetBits
000b42  7037              STRB     r7,[r6,#0]            ;1264
000b44  f8889000          STRB     r9,[r8,#0]            ;1265
000b48  e7e5              B        |L1.2838|
                  |L1.2890|
000b4a  4887              LDR      r0,|L1.3432|
000b4c  7800              LDRB     r0,[r0,#0]            ;1283  ; page_sw
000b4e  2803              CMP      r0,#3                 ;1283
000b50  d12d              BNE      |L1.2990|
000b52  7a28              LDRB     r0,[r5,#8]            ;1287  ; at
000b54  f8df824c          LDR      r8,|L1.3492|
000b58  4e93              LDR      r6,|L1.3496|
000b5a  f44f5700          MOV      r7,#0x2000            ;1290
000b5e  b130              CBZ      r0,|L1.2926|
000b60  7a28              LDRB     r0,[r5,#8]            ;1294  ; at
000b62  2801              CMP      r0,#1                 ;1294
000b64  d012              BEQ      |L1.2956|
000b66  7a28              LDRB     r0,[r5,#8]            ;1300  ; at
000b68  2802              CMP      r0,#2                 ;1300
000b6a  d01e              BEQ      |L1.2986|
000b6c  e01f              B        |L1.2990|
                  |L1.2926|
000b6e  2100              MOVS     r1,#0                 ;1289
000b70  4886              LDR      r0,|L1.3468|
000b72  f7fffffe          BL       USART_SendData
000b76  4639              MOV      r1,r7                 ;1290
000b78  4640              MOV      r0,r8                 ;1290
000b7a  f7fffffe          BL       GPIO_ResetBits
000b7e  7a28              LDRB     r0,[r5,#8]            ;1291  ; at
000b80  1c40              ADDS     r0,r0,#1              ;1291
000b82  7228              STRB     r0,[r5,#8]            ;1291
000b84  70ec              STRB     r4,[r5,#3]            ;1292
000b86  2001              MOVS     r0,#1                 ;1293
000b88  7030              STRB     r0,[r6,#0]            ;1293
000b8a  e010              B        |L1.2990|
                  |L1.2956|
000b8c  2100              MOVS     r1,#0                 ;1295
000b8e  487f              LDR      r0,|L1.3468|
000b90  f7fffffe          BL       USART_SendData
000b94  4639              MOV      r1,r7                 ;1296
000b96  4640              MOV      r0,r8                 ;1296
000b98  f7fffffe          BL       GPIO_SetBits
000b9c  2001              MOVS     r0,#1                 ;1297
000b9e  70e8              STRB     r0,[r5,#3]            ;1297
000ba0  7a29              LDRB     r1,[r5,#8]            ;1298  ; at
000ba2  1c49              ADDS     r1,r1,#1              ;1298
000ba4  7229              STRB     r1,[r5,#8]            ;1298
000ba6  7030              STRB     r0,[r6,#0]            ;1299
000ba8  e001              B        |L1.2990|
                  |L1.2986|
000baa  722c              STRB     r4,[r5,#8]            ;1301
000bac  7034              STRB     r4,[r6,#0]            ;1302
                  |L1.2990|
000bae  81ac              STRH     r4,[r5,#0xc]          ;1306
000bb0  e8bd5ff0          POP      {r4-r12,lr}           ;1307
000bb4  f7ffbffe          B.W      BEEP_Tiggr
                  |L1.3000|
000bb8  81ac              STRH     r4,[r5,#0xc]          ;1313
000bba  e8bd5ff0          POP      {r4-r12,lr}           ;1314
000bbe  f7ffbffe          B.W      BEEP_Tiggr
                  |L1.3010|
000bc2  6818              LDR      r0,[r3,#0]            ;1319  ; hWinR
000bc4  f7fffffe          BL       WM_DeleteWindow
000bc8  6830              LDR      r0,[r6,#0]            ;1320  ; hWinWind
000bca  f7fffffe          BL       WM_DeleteWindow
000bce  6838              LDR      r0,[r7,#0]            ;1321  ; hWinG
000bd0  f7fffffe          BL       WM_DeleteWindow
000bd4  f8d80000          LDR      r0,[r8,#0]            ;1322  ; load_wind
000bd8  f7fffffe          BL       WM_DeleteWindow
000bdc  f8d90000          LDR      r0,[r9,#0]            ;1323  ; hWinsysinfo
000be0  f7fffffe          BL       WM_DeleteWindow
000be4  f8da0000          LDR      r0,[r10,#0]           ;1324  ; hWincdc
000be8  f7fffffe          BL       WM_DeleteWindow
000bec  f8db0000          LDR      r0,[r11,#0]           ;1325  ; hWinset
000bf0  f7fffffe          BL       WM_DeleteWindow
000bf4  f44f4100          MOV      r1,#0x8000            ;1326
000bf8  4861              LDR      r0,|L1.3456|
000bfa  f7fffffe          BL       GPIO_SetBits
000bfe  2102              MOVS     r1,#2                 ;1327
000c00  4861              LDR      r0,|L1.3464|
000c02  f7fffffe          BL       GPIO_ResetBits
000c06  f7fffffe          BL       CreateR
000c0a  81ac              STRH     r4,[r5,#0xc]          ;1329
000c0c  e8bd5ff0          POP      {r4-r12,lr}           ;1330
000c10  f7ffbffe          B.W      BEEP_Tiggr
                  |L1.3092|
000c14  6818              LDR      r0,[r3,#0]            ;1335  ; hWinR
000c16  f7fffffe          BL       WM_DeleteWindow
000c1a  6830              LDR      r0,[r6,#0]            ;1336  ; hWinWind
000c1c  f7fffffe          BL       WM_DeleteWindow
000c20  6838              LDR      r0,[r7,#0]            ;1337  ; hWinG
000c22  f7fffffe          BL       WM_DeleteWindow
000c26  f8d80000          LDR      r0,[r8,#0]            ;1338  ; load_wind
000c2a  f7fffffe          BL       WM_DeleteWindow
000c2e  f8d90000          LDR      r0,[r9,#0]            ;1339  ; hWinsysinfo
000c32  f7fffffe          BL       WM_DeleteWindow
000c36  f8da0000          LDR      r0,[r10,#0]           ;1340  ; hWincdc
000c3a  f7fffffe          BL       WM_DeleteWindow
000c3e  f8db0000          LDR      r0,[r11,#0]           ;1341  ; hWinset
000c42  f7fffffe          BL       WM_DeleteWindow
000c46  f7fffffe          BL       CreateWindow2
000c4a  72ac              STRB     r4,[r5,#0xa]          ;1343
000c4c  2102              MOVS     r1,#2                 ;1344
000c4e  484e              LDR      r0,|L1.3464|
000c50  f7fffffe          BL       GPIO_ResetBits
000c54  81ac              STRH     r4,[r5,#0xc]          ;1345
000c56  e8bd5ff0          POP      {r4-r12,lr}           ;1346
000c5a  f7ffbffe          B.W      BEEP_Tiggr
                  |L1.3166|
000c5e  6818              LDR      r0,[r3,#0]            ;1351  ; hWinR
000c60  f7fffffe          BL       WM_DeleteWindow
000c64  6830              LDR      r0,[r6,#0]            ;1352  ; hWinWind
000c66  f7fffffe          BL       WM_DeleteWindow
000c6a  6838              LDR      r0,[r7,#0]            ;1353  ; hWinG
000c6c  f7fffffe          BL       WM_DeleteWindow
000c70  f8d80000          LDR      r0,[r8,#0]            ;1354  ; load_wind
000c74  f7fffffe          BL       WM_DeleteWindow
000c78  f8d90000          LDR      r0,[r9,#0]            ;1355  ; hWinsysinfo
000c7c  f7fffffe          BL       WM_DeleteWindow
000c80  f8da0000          LDR      r0,[r10,#0]           ;1356  ; hWincdc
000c84  f7fffffe          BL       WM_DeleteWindow
000c88  f8db0000          LDR      r0,[r11,#0]           ;1357  ; hWinset
000c8c  f7fffffe          BL       WM_DeleteWindow
000c90  f7fffffe          BL       CreateWindow
000c94  f44f4100          MOV      r1,#0x8000            ;1359
000c98  4839              LDR      r0,|L1.3456|
000c9a  f7fffffe          BL       GPIO_SetBits
000c9e  81ac              STRH     r4,[r5,#0xc]          ;1360
000ca0  e8bd5ff0          POP      {r4-r12,lr}           ;1361
000ca4  f7ffbffe          B.W      BEEP_Tiggr
                  |L1.3240|
000ca8  6818              LDR      r0,[r3,#0]            ;1366  ; hWinR
000caa  f7fffffe          BL       WM_DeleteWindow
000cae  6830              LDR      r0,[r6,#0]            ;1367  ; hWinWind
000cb0  f7fffffe          BL       WM_DeleteWindow
000cb4  6838              LDR      r0,[r7,#0]            ;1368  ; hWinG
000cb6  f7fffffe          BL       WM_DeleteWindow
000cba  f8d80000          LDR      r0,[r8,#0]            ;1369  ; load_wind
000cbe  f7fffffe          BL       WM_DeleteWindow
000cc2  f8d90000          LDR      r0,[r9,#0]            ;1370  ; hWinsysinfo
000cc6  f7fffffe          BL       WM_DeleteWindow
000cca  f8da0000          LDR      r0,[r10,#0]           ;1371  ; hWincdc
000cce  f7fffffe          BL       WM_DeleteWindow
000cd2  f8db0000          LDR      r0,[r11,#0]           ;1372  ; hWinset
000cd6  f7fffffe          BL       WM_DeleteWindow
000cda  f7fffffe          BL       CreateCDC
000cde  81ac              STRH     r4,[r5,#0xc]          ;1374
000ce0  e8bd5ff0          POP      {r4-r12,lr}           ;1375
000ce4  f7ffbffe          B.W      BEEP_Tiggr
                  |L1.3304|
000ce8  6818              LDR      r0,[r3,#0]            ;1380  ; hWinR
000cea  f7fffffe          BL       WM_DeleteWindow
000cee  6830              LDR      r0,[r6,#0]            ;1381  ; hWinWind
000cf0  f7fffffe          BL       WM_DeleteWindow
000cf4  6838              LDR      r0,[r7,#0]            ;1382  ; hWinG
000cf6  f7fffffe          BL       WM_DeleteWindow
000cfa  f8d80000          LDR      r0,[r8,#0]            ;1383  ; load_wind
000cfe  f7fffffe          BL       WM_DeleteWindow
000d02  f8d90000          LDR      r0,[r9,#0]            ;1384  ; hWinsysinfo
000d06  f7fffffe          BL       WM_DeleteWindow
000d0a  f8da0000          LDR      r0,[r10,#0]           ;1385  ; hWincdc
000d0e  f7fffffe          BL       WM_DeleteWindow
000d12  f8db0000          LDR      r0,[r11,#0]           ;1386  ; hWinset
000d16  f7fffffe          BL       WM_DeleteWindow
000d1a  f7fffffe          BL       CreateG
000d1e  81ac              STRH     r4,[r5,#0xc]          ;1388
000d20  e8bd5ff0          POP      {r4-r12,lr}           ;1389
000d24  f7ffbffe          B.W      BEEP_Tiggr
                  |L1.3368|
000d28  6818              LDR      r0,[r3,#0]            ;1394  ; hWinR
000d2a  f7fffffe          BL       WM_DeleteWindow
000d2e  6830              LDR      r0,[r6,#0]            ;1395  ; hWinWind
000d30  f7fffffe          BL       WM_DeleteWindow
000d34  6838              LDR      r0,[r7,#0]            ;1396  ; hWinG
000d36  f7fffffe          BL       WM_DeleteWindow
000d3a  f8d80000          LDR      r0,[r8,#0]            ;1397  ; load_wind
000d3e  f7fffffe          BL       WM_DeleteWindow
000d42  f8d90000          LDR      r0,[r9,#0]            ;1398  ; hWinsysinfo
000d46  f7fffffe          BL       WM_DeleteWindow
000d4a  f8da0000          LDR      r0,[r10,#0]           ;1399  ; hWincdc
000d4e  f7fffffe          BL       WM_DeleteWindow
000d52  f8db0000          LDR      r0,[r11,#0]           ;1400  ; hWinset
000d56  f7fffffe          BL       WM_DeleteWindow
000d5a  f7fffffe          BL       Createsysinfo
000d5e  81ac              STRH     r4,[r5,#0xc]          ;1402
000d60  e8bd5ff0          POP      {r4-r12,lr}           ;1403
000d64  f7ffbffe          B.W      BEEP_Tiggr
;;;1414   //USART_SendData(USART3,1);//打开电源
                          ENDP

                  |L1.3432|
                          DCD      page_sw
                  |L1.3436|
                          DCD      mode_sw
                  |L1.3440|
                          DCD      load_sw
                  |L1.3444|
                          DCD      DISS_Voltage
                  |L1.3448|
                          DCD      gate_v
                  |L1.3452|
                          DCD      flagA
                  |L1.3456|
                          DCD      0x40020000
                  |L1.3460|
                          DCD      pow_sw
                  |L1.3464|
                          DCD      0x40020800
                  |L1.3468|
                          DCD      0x40004800
                  |L1.3472|
                          DCD      cdc_sw
                  |L1.3476|
                          DCD      paused
                  |L1.3480|
                          DCD      Run_Control
                  |L1.3484|
                          DCD      cutoff_flag
                  |L1.3488|
                          DCD      charge_step
                  |L1.3492|
                          DCD      0x40020400
                  |L1.3496|
                          DCD      manual

                          AREA ||i.Key_Scan||, CODE, READONLY, ALIGN=2

                  Key_Scan PROC
;;;156    /************************************************************************************************************************/
;;;157    vu32 Key_Scan(void)
000000  b530              PUSH     {r4,r5,lr}
;;;158    {
;;;159    	static vu8 KeyState = KEY_INIT_STATE;
;;;160    	static vu8 IsKeyRelease = 1;
;;;161    
;;;162    	static vu8 KeyValueTemp = 0;
;;;163    	vu8 KeyValue ;
;;;164    	KeyValue= KEY_NULL_VALUE;
;;;165    	
;;;166    	if((NewKey>0x37)&&(IsKeyRelease==1))
000002  4922              LDR      r1,|L2.140|
000004  7a4d              LDRB     r5,[r1,#9]  ; NewKey
;;;167    	{
;;;168    		if(KeyState == KEY_INIT_STATE)                    /*无按键按下*/
;;;169    		{
;;;170    			KeyState = KEY_WOBBLE_STATE;
;;;171    			return KEY_NULL_VALUE;
;;;172    		}
;;;173    		else if(KeyState == KEY_WOBBLE_STATE)                /* 消抖 */
;;;174    		{
;;;175    			KeyState = KEY_PRESS_STATE;
;;;176    			return KEY_NULL_VALUE;
;;;177    		}
;;;178    		else if(KeyState == KEY_PRESS_STATE)                /* 有按键按下，返回按键值 */
;;;179    		{
;;;180    			KeyValue = NewKey;
;;;181    			KeyValueTemp = KeyValue;
;;;182    			KeyState = KEY_CONTINUE_STATE;
;;;183    			return KeyValue;
;;;184    		}
;;;185    		else if(KeyState == KEY_CONTINUE_STATE)           /*双击按键*/
;;;186    		{
;;;187    			KeyCounter ++;
;;;188    			if(KeyCounter == KEY_CONTINUE_PERIOD)
;;;189    			{
;;;190    				 KeyCounter = 0;
;;;191    				 KeyState = KEY_LONG_STATE;
;;;192    			}
;;;193    		}
;;;194    		else if(KeyState == KEY_LONG_STATE)                        /* 长按按键 */
;;;195    		{
;;;196    			KeyCounter ++;
;;;197    			if(KeyCounter == KEY_LONG_PERIOD)
;;;198    			{
;;;199    				KeyCounter = 0;
;;;200    				Flag_Long=1; //长按触发标志位
000006  4a22              LDR      r2,|L2.144|
000008  2300              MOVS     r3,#0                 ;164
00000a  2401              MOVS     r4,#1                 ;170
00000c  6810              LDR      r0,[r2,#0]            ;166
00000e  2d37              CMP      r5,#0x37              ;166
000010  d902              BLS      |L2.24|
000012  794d              LDRB     r5,[r1,#5]            ;166  ; IsKeyRelease
000014  2d01              CMP      r5,#1                 ;166
000016  d009              BEQ      |L2.44|
                  |L2.24|
;;;201    			}
;;;202    		}
;;;203    	}
;;;204    	else if(NewKey<=0x37)
000018  7a4d              LDRB     r5,[r1,#9]  ; NewKey
00001a  2d37              CMP      r5,#0x37
00001c  d804              BHI      |L2.40|
;;;205    	{
;;;206    		KeyState = KEY_INIT_STATE;        /* 误触发，返回到初始状态 */
00001e  710b              STRB     r3,[r1,#4]
;;;207    		IsKeyRelease = 1;
000020  714c              STRB     r4,[r1,#5]
;;;208    		Flag_Long=0;
000022  f0200004          BIC      r0,r0,#4
000026  6010              STR      r0,[r2,#0]  ; flagB
                  |L2.40|
;;;209    	}
;;;210    	return KEY_NULL_VALUE;
000028  2000              MOVS     r0,#0
;;;211    }
00002a  bd30              POP      {r4,r5,pc}
                  |L2.44|
00002c  790d              LDRB     r5,[r1,#4]            ;168  ; KeyState
00002e  b1b5              CBZ      r5,|L2.94|
000030  790c              LDRB     r4,[r1,#4]            ;173  ; KeyState
000032  2c01              CMP      r4,#1                 ;173
000034  d016              BEQ      |L2.100|
000036  790c              LDRB     r4,[r1,#4]            ;178  ; KeyState
000038  2c02              CMP      r4,#2                 ;178
00003a  d017              BEQ      |L2.108|
00003c  790c              LDRB     r4,[r1,#4]            ;185  ; KeyState
00003e  2c04              CMP      r4,#4                 ;185
000040  d019              BEQ      |L2.118|
000042  790c              LDRB     r4,[r1,#4]            ;194  ; KeyState
000044  2c03              CMP      r4,#3                 ;194
000046  d1ef              BNE      |L2.40|
000048  898c              LDRH     r4,[r1,#0xc]          ;196  ; KeyCounter
00004a  1c64              ADDS     r4,r4,#1              ;196
00004c  818c              STRH     r4,[r1,#0xc]          ;196
00004e  898c              LDRH     r4,[r1,#0xc]          ;197  ; KeyCounter
000050  2c32              CMP      r4,#0x32              ;197
000052  d1e9              BNE      |L2.40|
000054  818b              STRH     r3,[r1,#0xc]          ;199
000056  f0400004          ORR      r0,r0,#4              ;200
00005a  6010              STR      r0,[r2,#0]            ;200  ; flagB
00005c  e7e4              B        |L2.40|
                  |L2.94|
00005e  710c              STRB     r4,[r1,#4]            ;170
000060  2000              MOVS     r0,#0                 ;171
000062  bd30              POP      {r4,r5,pc}
                  |L2.100|
000064  2002              MOVS     r0,#2                 ;175
000066  7108              STRB     r0,[r1,#4]            ;175
000068  2000              MOVS     r0,#0                 ;176
00006a  bd30              POP      {r4,r5,pc}
                  |L2.108|
00006c  7a48              LDRB     r0,[r1,#9]            ;180  ; NewKey
00006e  7188              STRB     r0,[r1,#6]            ;181
000070  2204              MOVS     r2,#4                 ;182
000072  710a              STRB     r2,[r1,#4]            ;182
000074  bd30              POP      {r4,r5,pc}
                  |L2.118|
000076  8988              LDRH     r0,[r1,#0xc]          ;187  ; KeyCounter
000078  1c40              ADDS     r0,r0,#1              ;187
00007a  8188              STRH     r0,[r1,#0xc]          ;187
00007c  8988              LDRH     r0,[r1,#0xc]          ;188  ; KeyCounter
00007e  280a              CMP      r0,#0xa               ;188
000080  d1d2              BNE      |L2.40|
000082  818b              STRH     r3,[r1,#0xc]          ;190
000084  2003              MOVS     r0,#3                 ;191
000086  7108              STRB     r0,[r1,#4]            ;191
000088  e7ce              B        |L2.40|
;;;212    /***************************************************************************************************************************/
                          ENDP

00008a  0000              DCW      0x0000
                  |L2.140|
                          DCD      ||.data||
                  |L2.144|
                          DCD      flagB

                          AREA ||i.setmode_r||, CODE, READONLY, ALIGN=2

                  setmode_r PROC
;;;1414   //USART_SendData(USART3,1);//打开电源
;;;1415   void setmode_r(void)
000000  b510              PUSH     {r4,lr}
;;;1416   {
;;;1417       USART_SendData(USART3,0);//关闭电源
000002  2100              MOVS     r1,#0
000004  4807              LDR      r0,|L3.36|
000006  f7fffffe          BL       USART_SendData
;;;1418       GPIO_SetBits(GPIOA,GPIO_Pin_15);//电子负载OFF
00000a  f44f4100          MOV      r1,#0x8000
00000e  4806              LDR      r0,|L3.40|
000010  f7fffffe          BL       GPIO_SetBits
;;;1419       GPIO_ResetBits(GPIOC,GPIO_Pin_1);//关闭电源输出
000014  2102              MOVS     r1,#2
000016  4805              LDR      r0,|L3.44|
000018  f7fffffe          BL       GPIO_ResetBits
;;;1420       mode_sw = mode_r;
00001c  4904              LDR      r1,|L3.48|
00001e  2001              MOVS     r0,#1
000020  7008              STRB     r0,[r1,#0]
;;;1421   }
000022  bd10              POP      {r4,pc}
                          ENDP

                  |L3.36|
                          DCD      0x40004800
                  |L3.40|
                          DCD      0x40020000
                  |L3.44|
                          DCD      0x40020800
                  |L3.48|
                          DCD      mode_sw

                          AREA ||.data||, DATA, ALIGN=1

                  pass
000000  00                DCB      0x00
                  track
000001  03                DCB      0x03
                  r_test
000002  00                DCB      0x00
                  r_raly
000003  00                DCB      0x00
                  KeyState
000004  00                DCB      0x00
                  IsKeyRelease
000005  01                DCB      0x01
                  KeyValueTemp
000006  00                DCB      0x00
                  POW_t
000007  00                DCB      0x00
                  ||at||
000008  00                DCB      0x00
                  NewKey
000009  00                DCB      0x00
                  t_onoff
00000a  0000              DCB      0x00,0x00
                  KeyCounter
00000c  0000              DCB      0x00,0x00

                          AREA ||area_number.7||, DATA, ALIGN=0

                          EXPORTAS ||area_number.7||, ||.data||
                  clear_flag1
000000  00                DCB      0x00

                          AREA ||area_number.8||, DATA, ALIGN=0

                          EXPORTAS ||area_number.8||, ||.data||
                  clear_flag2
000000  00                DCB      0x00

                          AREA ||area_number.9||, DATA, ALIGN=0

                          EXPORTAS ||area_number.9||, ||.data||
                  clear_flag3
000000  00                DCB      0x00

                          AREA ||area_number.10||, DATA, ALIGN=2

                          EXPORTAS ||area_number.10||, ||.data||
                  clear_v
000000  00000000          DCFS     0x00000000 ; 0

                          AREA ||area_number.11||, DATA, ALIGN=2

                          EXPORTAS ||area_number.11||, ||.data||
                  clear_pv
000000  00000000          DCFS     0x00000000 ; 0

                          AREA ||area_number.12||, DATA, ALIGN=2

                          EXPORTAS ||area_number.12||, ||.data||
                  clear_lv
000000  00000000          DCFS     0x00000000 ; 0

                          AREA ||area_number.13||, DATA, ALIGN=0

                          EXPORTAS ||area_number.13||, ||.data||
                  clear_r
000000  00                DCB      0x00

                          AREA ||area_number.14||, DATA, ALIGN=0

                          EXPORTAS ||area_number.14||, ||.data||
                  t_MODE
000000  00                DCB      0x00

                          AREA ||area_number.15||, DATA, ALIGN=0

                          EXPORTAS ||area_number.15||, ||.data||
                  LOAD_t
000000  00                DCB      0x00

                          AREA ||area_number.16||, DATA, ALIGN=1

                          EXPORTAS ||area_number.16||, ||.data||
                  menu_time
000000  0000              DCB      0x00,0x00

                          AREA ||area_number.17||, DATA, ALIGN=1

                          EXPORTAS ||area_number.17||, ||.data||
                  load_time
000000  0000              DCB      0x00,0x00

                          AREA ||area_number.18||, DATA, ALIGN=0

                          EXPORTAS ||area_number.18||, ||.data||
                  t_KeyScan
000000  00                DCB      0x00

                          AREA ||area_number.19||, DATA, ALIGN=0

                          EXPORTAS ||area_number.19||, ||.data||
                  t_wei
000000  00                DCB      0x00

                          AREA ||area_number.20||, DATA, ALIGN=0

                          EXPORTAS ||area_number.20||, ||.data||
                  t_beep
000000  00                DCB      0x00

                          AREA ||area_number.21||, DATA, ALIGN=0

                          EXPORTAS ||area_number.21||, ||.data||
                  t_Str
000000  00                DCB      0x00

                          AREA ||area_number.22||, DATA, ALIGN=0

                          EXPORTAS ||area_number.22||, ||.data||
                  t_lock
000000  00                DCB      0x00

                          AREA ||area_number.23||, DATA, ALIGN=0

                          EXPORTAS ||area_number.23||, ||.data||
                  t_doub
000000  00                DCB      0x00

                          AREA ||area_number.24||, DATA, ALIGN=0

                          EXPORTAS ||area_number.24||, ||.data||
                  t_key_step
000000  00                DCB      0x00

                          AREA ||area_number.25||, DATA, ALIGN=1

                          EXPORTAS ||area_number.25||, ||.data||
                  Key1
000000  0000              DCB      0x00,0x00

                          AREA ||area_number.26||, DATA, ALIGN=1

                          EXPORTAS ||area_number.26||, ||.data||
                  Key2
000000  0000              DCB      0x00,0x00

                          AREA ||area_number.27||, DATA, ALIGN=1

                          EXPORTAS ||area_number.27||, ||.data||
                  Key3
000000  0000              DCB      0x00,0x00

                          AREA ||area_number.28||, DATA, ALIGN=1

                          EXPORTAS ||area_number.28||, ||.data||
                  Key4
000000  0000              DCB      0x00,0x00

                          AREA ||area_number.29||, DATA, ALIGN=1

                          EXPORTAS ||area_number.29||, ||.data||
                  Key5
000000  0000              DCB      0x00,0x00

                          AREA ||area_number.30||, DATA, ALIGN=1

                          EXPORTAS ||area_number.30||, ||.data||
                  Key6
000000  0000              DCB      0x00,0x00

                          AREA ||area_number.31||, DATA, ALIGN=1

                          EXPORTAS ||area_number.31||, ||.data||
                  Key7
000000  0000              DCB      0x00,0x00

                          AREA ||area_number.32||, DATA, ALIGN=1

                          EXPORTAS ||area_number.32||, ||.data||
                  Key8
000000  0000              DCB      0x00,0x00

                          AREA ||area_number.33||, DATA, ALIGN=2

                          EXPORTAS ||area_number.33||, ||.data||
                  Key9
                          DCD      0x00000000

                          AREA ||area_number.34||, DATA, ALIGN=1

                          EXPORTAS ||area_number.34||, ||.data||
                  MAX_limit
000000  0000              DCB      0x00,0x00

                          AREA ||area_number.35||, DATA, ALIGN=1

                          EXPORTAS ||area_number.35||, ||.data||
                  MIN_limit
000000  0000              DCB      0x00,0x00

                          AREA ||area_number.36||, DATA, ALIGN=1

                          EXPORTAS ||area_number.36||, ||.data||
                  Test_Time
000000  0000              DCB      0x00,0x00

                          AREA ||area_number.37||, DATA, ALIGN=1

                          EXPORTAS ||area_number.37||, ||.data||
                  Test_Time1
000000  0000              DCB      0x00,0x00

                          AREA ||area_number.38||, DATA, ALIGN=1

                          EXPORTAS ||area_number.38||, ||.data||
                  Time_sw
000000  0000              DCB      0x00,0x00

                          AREA ||area_number.39||, DATA, ALIGN=1

                          EXPORTAS ||area_number.39||, ||.data||
                  Test_Daley
000000  0000              DCB      0x00,0x00

                          AREA ||area_number.40||, DATA, ALIGN=1

                          EXPORTAS ||area_number.40||, ||.data||
                  Test_C_Door
000000  0000              DCB      0x00,0x00

                          AREA ||area_number.41||, DATA, ALIGN=0

                          EXPORTAS ||area_number.41||, ||.data||
                  OFFSET_Zore
000000  00                DCB      0x00

;*** Start embedded assembler ***

#line 1 "..\\drive\\key.c"
	AREA ||.rev16_text||, CODE, READONLY
	THUMB
	EXPORT |__asm___5_key_c_pass____REV16|
#line 114 "D:\\Keil\\ARM\\CMSIS\\Include\\core_cmInstr.h"
|__asm___5_key_c_pass____REV16| PROC
#line 115

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE, READONLY
	THUMB
	EXPORT |__asm___5_key_c_pass____REVSH|
#line 128
|__asm___5_key_c_pass____REVSH| PROC
#line 129

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
